<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docs â€“ account-id</title><link>/tags/account-id/</link><description>Recent content in account-id on Docs</description><generator>Hugo -- gohugo.io</generator><atom:link href="/tags/account-id/index.xml" rel="self" type="application/rss+xml"/><item><title>References: Credentials</title><link>/references/credentials/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/references/credentials/</guid><description>
&lt;p>Like AWS, LocalStack requires access key IDs to be set in all operations.
The choice of access key ID will affect &lt;a href="/references/multi-account-setups/">multi-account namespacing&lt;/a>.
Values of secret access keys are currently ignored by LocalStack.&lt;/p>
&lt;p>Access key IDs can be one of following patterns:&lt;/p>
&lt;h3 id="accounts-ids">Accounts IDs&lt;/h3>
&lt;p>You can specify a 12-digit number which will be taken by LocalStack as the account ID.
For example, &lt;code>112233445566&lt;/code>.&lt;/p>
&lt;h3 id="structured-access-key-id">Structured access key ID&lt;/h3>
&lt;p>You can specify a structured key like &lt;code>LSIAQAAAAAAVNCBMPNSG&lt;/code> (which translates to account ID &lt;code>000000000042&lt;/code>).
This must be at least 20 characters in length and must be decodable to an account ID.&lt;/p>
&lt;p>By default, LocalStack will only accept access keys that start with the &lt;code>LSIA...&lt;/code> or &lt;code>LKIA...&lt;/code> prefix.
If keys with &lt;code>ASIA...&lt;/code>/&lt;code>AKIA...&lt;/code> prefix are provided, these are rejected and the fallback account ID &lt;code>000000000000&lt;/code> is used.
This is a safeguard to prevent misuse of production AWS access key IDs.
To disable this safeguard, set the &lt;code>PARITY_AWS_ACCESS_KEY_ID&lt;/code> configuration variable.&lt;/p>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Warning&lt;/h4>
Disabling the access key safeguard and using production access key IDs may cause accidental connections to AWS.
We strongly recommend leaving it on.
&lt;/div>
&lt;h3 id="alphanumeric-string">Alphanumeric string&lt;/h3>
&lt;p>You can also specify an arbitrary alphanumeric access key ID like &lt;code>test&lt;/code> or &lt;code>foobar123&lt;/code>.
In all such cases, the account ID will be evalutated to &lt;code>000000000000&lt;/code>.&lt;/p></description></item><item><title>References: Multi-Account Setups</title><link>/references/multi-account-setups/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/references/multi-account-setups/</guid><description>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Please note that multi-accounts may not work for use-cases that have cross-account and cross-service access.
See &lt;a href="https://github.com/localstack/localstack/issues/7041">this issue&lt;/a> for more information.
&lt;/div>
&lt;p>LocalStack ships with multi-account support which allows namespacing based on AWS account ID.&lt;/p>
&lt;p>LocalStack uses the value in the AWS Access Key ID field for the purpose of namespacing over account ID.
For more information, see &lt;a href="/references/credentials/">Credentials&lt;/a>.&lt;/p>
&lt;p>The Access Key ID field can be configured in the AWS CLI in multiple ways: please refer to &lt;a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-quickstart.html#cli-configure-quickstart-precedence">AWS CLI documentation&lt;/a>.&lt;/p>
&lt;h2 id="examples">Examples&lt;/h2>
&lt;p>In following examples, we configure the AWS CLI account ID via environment variable.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>AWS_ACCESS_KEY_ID=000000000001 awslocal ec2 create-key-pair --key-name green-hospital
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>AWS_ACCESS_KEY_ID=000000000002 awslocal ec2 create-key-pair --key-name red-medicine
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>AWS_ACCESS_KEY_ID=000000000001 awslocal ec2 describe-key-pairs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;KeyPairs&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;KeyFingerprint&amp;#34;: &amp;#34;6b:e3:a3:41:4b:60:f3:6d:7b:84:3e:17:e3:ad:d0:15&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;KeyName&amp;#34;: &amp;#34;green-hospital&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>AWS_ACCESS_KEY_ID=000000000002 awslocal ec2 describe-key-pairs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;KeyPairs&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;KeyFingerprint&amp;#34;: &amp;#34;16:4c:64:13:36:41:7c:75:d0:51:f0:db:ed:d7:c8:95&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;KeyName&amp;#34;: &amp;#34;red-medicine&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>If no explicit Account ID is set, LocalStack falls back to default. In this example, no resources are returned.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal ec2 describe-key-pairs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;KeyPairs&amp;#34;: []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>