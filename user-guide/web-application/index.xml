<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docs â€“ LocalStack Web Application</title><link>/user-guide/web-application/</link><description>Recent content in LocalStack Web Application on Docs</description><generator>Hugo -- gohugo.io</generator><atom:link href="/user-guide/web-application/index.xml" rel="self" type="application/rss+xml"/><item><title>User-Guide: Accounts</title><link>/user-guide/web-application/accounts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/web-application/accounts/</guid><description>
&lt;p>To start using LocalStack&amp;rsquo;s Web Application, you must create an account. With a LocalStack account, you can sign-up for a license and use your API keys to access our advanced features. These include &lt;a href="/references/coverage/">AWS services&lt;/a> marked under &lt;strong>Pro&lt;/strong>, &lt;a href="/user-guide/web-application/stack-insights/">Stack Insights&lt;/a>, &lt;a href="/user-guide/tools/cloud-pods/">Cloud Pods&lt;/a>, and more!&lt;/p>
&lt;h2 id="creating-an-account">Creating an account&lt;/h2>
&lt;p>To create an account for LocalStack, visit &lt;a href="https://app.localstack.cloud/sign-up">&lt;strong>app.localstack.cloud/sign-up&lt;/strong>&lt;/a>. You can sign up with your email address or one of our supported social identity providers (such as GitHub).&lt;/p>
&lt;img src="signup.PNG" width="550px" alt="Sign Up Form">
&lt;h2 id="account-types">Account Types&lt;/h2>
&lt;p>You can choose between an &lt;strong>individual account&lt;/strong> or a &lt;strong>company account&lt;/strong>. When you sign up for LocalStack, you will automatically sign up for an individual account. These accounts are intended for non-company entities, such as individual developers.&lt;/p>
&lt;p>To switch to a company account, you can do so from your &lt;a href="https://app.localstack.cloud/account">&lt;strong>app.localstack.cloud/account&lt;/strong>&lt;/a> section. Click on the toggle to switch to a company account. You will be prompted to add the following information about your organization:&lt;/p>
&lt;ul>
&lt;li>Company Name&lt;/li>
&lt;li>Country&lt;/li>
&lt;li>Tax ID&lt;/li>
&lt;/ul>
&lt;p>The above information is required if you are acting on behalf of a company.&lt;/p>
&lt;img src="indcomp.PNG" width="800px" alt="Switch for Individual and Company Account"></description></item><item><title>User-Guide: Teams</title><link>/user-guide/web-application/teams/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/web-application/teams/</guid><description>
&lt;p>Teams on LocalStack allow you to collaborate with members of your organization. You can invite other users to your team and assign them different roles and permissions. It includes advanced role settings such as purchasing subscriptions, managing payment methods, and more, which can be adjusted by the team administrator. You can purchase a plan with multiple seats for your team, which allows you to distribute the API keys among your team members.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Organizations/Teams are used interchangeably within our Web Application.
&lt;/div>
&lt;h4 id="inviting-team-members">Inviting Team Members&lt;/h4>
&lt;p>To invite team members, navigate to the &lt;a href="https://app.localstack.cloud/account/members">&lt;strong>app.localstack.cloud/account/members&lt;/strong>&lt;/a> section of your profile. You will be prompted to enter the &lt;strong>User Name&lt;/strong> and &lt;strong>Email Address&lt;/strong> of the team member you wish to invite. Once you have entered the details, click on the plus symbol (&lt;code>+&lt;/code>) to invite them to your team.&lt;/p>
&lt;img src="teammembers.PNG" width="800px" alt="Inviting Team Members">
&lt;h4 id="member-roles--api-keys">Member Roles &amp;amp; API Keys&lt;/h4>
&lt;p>After a team member has been invited, you can assign them different roles and permissions. You can also assign them an API key, which will allow them to access the LocalStack Web Application and the Pro CLI (command line interface).&lt;/p>
&lt;img src="memberroles.PNG" width="900px" alt="Editing team member settings">
&lt;p>To access the API key, the members must navigate to the &lt;a href="https://app.localstack.cloud/account/apikeys">&lt;strong>app.localstack.cloud/account/apikeys&lt;/strong>&lt;/a> section of their profile.&lt;/p></description></item><item><title>User-Guide: Stack Insights</title><link>/user-guide/web-application/stack-insights/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/web-application/stack-insights/</guid><description>
&lt;p>LocalStack allows for transparent collection of execution events, in order to provide usage analytics and insights into the testing process overall. Stack Insights enable LocalStack users to report AWS API usage telemetry of LocalStack runs to their LocalStack account.&lt;/p>
&lt;p>You can see which APIs are being used, which clients of integrations use particular services and API operations, which services cause the most API errors, and much more using Stack Insights. The Stacks widget and detailed Stack information is part of our Pro plan, while the graphical representation currently falls under our Team preview.&lt;/p>
&lt;p>To get started, the &lt;code>LOCALSTACK_API_KEY&lt;/code> environment variable needs to be configured. The system will start making your events accessible on the LocalStack &lt;a href="https://app.localstack.cloud/dashboard">Web Application dashboard&lt;/a>.&lt;/p>
&lt;div class="alert alert-success" role="alert">
&lt;h4 class="alert-heading">Information&lt;/h4>
Your privacy matters to us! We only collect anonymized and sanitized data.
No sensitive information about your application is ever collected or exposed.
The data is only used to provide you with insights into the usage of LocalStack and to help us improve the product.
&lt;/div>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;img src="stack-insights-getting-started.png" width="600px" alt="Stack Insights">
&lt;p>&lt;br>To get started with this feature, log in to your &lt;a href="https://app.localstack.cloud/">LocalStack account&lt;/a> and start a &lt;a href="/getting-started/api-key/">LocalStack instance on your local machine&lt;/a>. The LocalStack Dashboard will show the Stacks widget, which holds most of the vital information of recent and currently running stacks.&lt;/p>
&lt;p>The Stack widget will also display the number of API calls, services employed and the runtime duration for each spin-up. All the spin-ups are timestamped; hence you can easily navigate the stacks and check the number of API calls that succeeded and failed.&lt;/p>
&lt;h2 id="detailed-stack-information">Detailed Stack information&lt;/h2>
&lt;img src="detailed-stack-information.png" width="600px" alt="Detailed Stack Insights">
&lt;p>&lt;br>You can click on the individual stack to display detailed information. This includes the number of API calls, service invocations, the user agent (&lt;code>aws-cli&lt;/code>, &lt;code>terraform&lt;/code> etc.) and the particular service called in the specific spin-up. You can also use the slide toggle to pick up a particular time duration during which the user made specific API calls.
Please note that stack insights are only collected if the LocalStack sessions runs for less than 24 hours.&lt;/p>
&lt;h2 id="list-of-events-during-stack-lifetime">List of events during Stack lifetime&lt;/h2>
&lt;img src="stack-lifetime-events.png" width="600px" alt="Stack Lifetime Events">
&lt;p>&lt;br>You can also check the list of events during the entire Stack life-time, which includes the Service, operation, Status Code, Server time and the User-agent.&lt;/p>
&lt;h2 id="configuration">Configuration&lt;/h2>
&lt;p>You can disable event reporting on your LocalStack client by setting the environment variable &lt;code>DISABLE_EVENTS=1&lt;/code>.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Brave blocks &lt;code>localhost&lt;/code> requests due to security by default via shields.
While some sites need access to &lt;code>localhost&lt;/code> / &lt;code>127.0.0.1&lt;/code> to work correctly, an easy option to allow a user to enable this is manually enabling via the site via &lt;code>brave://settings/content/insecureContent&lt;/code>.
&lt;/div></description></item><item><title>User-Guide: Resource Browser</title><link>/user-guide/web-application/resource-browser/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/web-application/resource-browser/</guid><description>
&lt;p>The LocalStack Resource Browser allow you to view, manage, and deploy AWS resources locally while building &amp;amp; testing their cloud applications locally. It provides an internal, integrated experience, similar to the AWS Management Console, to manage the ephemeral resources locally in a LocalStack container on your local machine. The Resource Browser can be operated only if a LocalStack container is running on your local machine and the local endpoint URL, which can be configured in the &lt;a href="https://app.localstack.cloud/account/settings">account settings&lt;/a> of the web application, points to the URL under which LocalStack is accessible.&lt;/p>
&lt;img src="resource-browser.png" alt="LocalStack Web Application's Resource Browsers outlining various local AWS services" title="Resource Browser" width="900" />
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Warning&lt;/h4>
&lt;ul>
&lt;li>If you encounter a &lt;code>Network Failure&lt;/code> error message while accessing the Resource Browser, it is likely that the LocalStack container is not running or the local endpoint URL is not configured correctly. To resolve this issue, ensure that your LocalStack container is running or your &lt;a href="https://app.localstack.cloud/account/settings">local endpoint URL is configured correctly&lt;/a>.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>An AWS region dropdown menu in the dashboard is located on the top right of the navigation bar, beside the notifications icon. You can select your desired region to ensure that you can view your resources. If you cannot view resources that you have recently created, you should verify that you are checking the resources in the correct region.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The Resource Browser provide an experience similar to the AWS Management Console. However, the Resource Browser is not a replacement for the AWS Management Console and only replicate some of the features of the AWS Management Console. We recommend using our &lt;a href="https://docs.localstack.cloud/user-guide/integrations/">integrations&lt;/a> to create your resources, with the Resource Browser being used for quick viewing and management of your resources.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>To view the running services in your LocalStack container, you can use the &lt;a href="https://app.localstack.cloud/status">System Status&lt;/a>. This view provides a quick overview of the running services in your LocalStack container. To get a detailed telemetry of your API calls to your LocalStack containers, check out &lt;a href="https://docs.localstack.cloud/user-guide/web-application/stack-insights/">Stack Insights&lt;/a>.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div>
&lt;h2 id="supported-services">Supported services&lt;/h2>
&lt;p>We currently support the following local AWS services in our Resource Browser:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://app.localstack.cloud/resources/gateway/v1">API Gateway&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://app.localstack.cloud/resources/appsync">AppSync&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://app.localstack.cloud/resources/athena/databases">Athena&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://app.localstack.cloud/resources/backup/plans">Backup&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://app.localstack.cloud/resources/cloudformation/stacks">CloudFormation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://app.localstack.cloud/resources/cloudtrail/events">CloudTrail&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://app.localstack.cloud/resources/cloudwatch/groups">CloudWatch Logs&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://app.localstack.cloud/resources/monitoring">CloudWatch Metrics&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://app.localstack.cloud/resources/cognito">Cognito&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://app.localstack.cloud/resources/dynamodb">DynamoDB&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://app.localstack.cloud/resources/ec2">EC2&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://app.localstack.cloud/resources/ecr/repositories">ECR&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://app.localstack.cloud/resources/ecs">ECS&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://app.localstack.cloud/resources/elasticache">ElastiCache&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://app.localstack.cloud/resources/eventbridge">EventBridge&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://app.localstack.cloud/resources/glue">Glue&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://app.localstack.cloud/resources/iam">IAM&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://app.localstack.cloud/resources/kinesis">Kinesis&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://app.localstack.cloud/resources/kms">KMS&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://app.localstack.cloud/resources/lambda/functions">Lambda&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://app.localstack.cloud/resources/rds/instances">RDS&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://app.localstack.cloud/resources/s3">S3&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://app.localstack.cloud/resources/ses/v1/identities">SES&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://app.localstack.cloud/resources/sqs">SQS&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://app.localstack.cloud/resources/sns">SNS&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://app.localstack.cloud/resources/secretsmanager">Secrets Manager&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://app.localstack.cloud/resources/stepfunctions">Step Functions&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://app.localstack.cloud/resources/ssm">Systems Manager&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://app.localstack.cloud/resources/timestream">TimestreamDB&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>User-Guide: Cloud Pods Browser</title><link>/user-guide/web-application/cloud-pods-browser/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/web-application/cloud-pods-browser/</guid><description>
&lt;p>&lt;a href="https://app.localstack.cloud/pods">The Cloud Pods Browser&lt;/a> lets you access and manage all your Cloud Pods. The Cloud Pods Browser is a feature of our LocalStack Web Application that is exclusive to &lt;strong>LocalStack Team &amp;amp; Enterprise users&lt;/strong>.&lt;/p>
&lt;p>With Cloud Pods, you can have individual or shared ownership of a snapshot of your LocalStack instance.
The LocalStack CLI allows you to create new Cloud Pods and configure their &lt;a href="https://docs.localstack.cloud/user-guide/tools/cloud-pods/pods-cli/#save">visibility settings&lt;/a>.&lt;/p>
&lt;img src="cloud-pods-browser.png" alt="LocalStack Web Application's Cloud Pods Browser outlining various saved Clod Pods" title="Cloud Pods Browser" width="900" />
&lt;h2 id="usage">Usage&lt;/h2>
&lt;p>You can use &lt;a href="https://docs.localstack.cloud/user-guide/tools/cloud-pods/">Cloud Pods&lt;/a> to manage your local AWS infrastructure and collaborate with others:&lt;/p>
&lt;ul>
&lt;li>Cloud Pods are accessible to all LocalStack Team users in your organization namespace. Public Cloud Pods are accessible to all LocalStack users.&lt;/li>
&lt;li>Cloud Pods version history is available, which allows you to view the version history of a Cloud Pod and access previous versions of specific Cloud Pods.&lt;/li>
&lt;li>Cloud Pods can be made public, injected into a running LocalStack container, or deleted - all from the LocalStack Web Application.&lt;/li>
&lt;/ul>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Warning&lt;/h4>
LocalStack Pro users cannot access the Cloud Pods Browser. Community &amp;amp; Pro users can use the &lt;a href="https://docs.localstack.cloud/user-guide/tools/cloud-pods/community/">Community Cloud Pods&lt;/a> and save their Cloud Pods locally or share them via a GitHub/GitLab repository. The &lt;a href="https://docs.localstack.cloud/user-guide/tools/cloud-pods/launchpad/">Cloud Pods launchpad&lt;/a> can be used to inject a Cloud Pod into a running LocalStack container through a simple click.
&lt;/div>
&lt;h2 id="access-the-version-history">Access the version history&lt;/h2>
&lt;p>To view the version history of a Cloud Pod, click on the Cloud Pod&amp;rsquo;s name in the Cloud Pods Browser. You will be able to see a list of all versions, and view details of a specific version, in JSON format, by clicking on it.&lt;/p>
&lt;img src="cloud-pods-version-history.png" alt="LocalStack Web Application's Cloud Pods Browser outlining the versions of the Clod Pod" title="Cloud Pods Browser displaying the version history of the Cloud Pod" width="900" />
&lt;p>To create a new version of a Cloud Pod, refer to the &lt;a href="https://docs.localstack.cloud/user-guide/tools/cloud-pods/pods-cli/#save">Cloud Pods CLI&lt;/a> documentation.&lt;/p>
&lt;h2 id="save-a-cloud-pod">Save a Cloud Pod&lt;/h2>
&lt;p>Users do not need to upload their Cloud Pod to the LocalStack Web Application since the Cloud Pods CLI automatically uploads pods via the &lt;code>save&lt;/code> operation. Similarly, the Cloud Pods CLI automatically injects the Cloud Pod into a running LocalStack container via the &lt;code>load&lt;/code> operation after specifying the Cloud Pod&amp;rsquo;s name. You can alternatively select a Cloud Pod on the Cloud Pods Browser and inject it into a running LocalStack container.&lt;/p>
&lt;img src="cloud-pod-inject.png" alt="Inject a Cloud Pod through the Cloud Pods Browser" title="Inject a Cloud Pod through the Cloud Pods Browser" width="900" />
&lt;p>We use a secure storage mechanism to store Cloud Pods on the LocalStack Web Application. When you push a Cloud Pod, it is stored securely in our storage backend in AWS, with each user/organization receiving a dedicated, isolated S3 bucket. Pushing and pulling a Cloud Pod from our Web Application is facilitated by using secure S3 pre-signed URLs for the Cloud Pods CLI to interact directly with the S3 bucket, rather than piping the state files through our LocalStack Platform APIs.&lt;/p></description></item><item><title>User-Guide: Custom local endpoint</title><link>/user-guide/web-application/custom-local-endpoint/custom-local-endpoint/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/web-application/custom-local-endpoint/custom-local-endpoint/</guid><description>
&lt;p>You can configure the local endpoint URL under which LocalStack is accessible from the LocalStack Web UI. To configure your local endpoint URL, navigate to your &lt;a href="https://app.localstack.cloud/account/settings">Account settings&lt;/a>, to configure the local endpoint URL (defaults to &lt;a href="https://localhost.localstack.cloud">https://localhost.localstack.cloud&lt;/a>). Additionally, you can configure the local endpoint URL to view your resources if you are running LocalStack on a different machine (see instructions below).&lt;/p>
&lt;h2 id="connecting-to-a-localstack-instance-on-a-different-machine">Connecting to a LocalStack instance on a different machine&lt;/h2>
&lt;p>To ensure that the Web user interface can connect with your running LocalStack instance, you would need to configure the endpoint URL so that the server&amp;rsquo;s SSL certificate matches the hostname/IP address of the endpoint URL. This situation arises when users configure the endpoint URL to be something like &lt;code>https://myhost:4566&lt;/code> or use an IP address like &lt;code>https://1.2.3.4:4566&lt;/code>. Websites with an &lt;code>https://...&lt;/code> URL can only request other endpoints using HTTPS (i.e., not on &lt;code>http://&lt;/code>). Additionally, while requesting an HTTPS page, the SSL certificate must match the hostname (i.e., &lt;code>localhost.localstack.cloud&lt;/code> in our case).&lt;/p>
&lt;p>To navigate this, we recommend you create a local TCP proxy server. The proxy server could listen on &lt;code>127.0.0.1:4566&lt;/code> and forward all requests to your target endpoint where the LocalStack instance is running. You could leave the configuration in the Web user interface to use the default value, &lt;code>https://localhost.localstack.cloud:4566&lt;/code>. We recommend &lt;a href="https://manpages.ubuntu.com/manpages/trusty/man1/simpleproxy.1.html">simpleproxy&lt;/a> or &lt;a href="https://github.com/abhinavsingh/proxy.py">proxy.py&lt;/a> as a way to implement this.&lt;/p>
&lt;p>An alternate workaround would be to re-point &lt;code>localhost.localstack.cloud&lt;/code> to the IP address of your target machine by adding an entry to &lt;code>/etc/hosts&lt;/code>. This is especially useful if you&amp;rsquo;re accessing the LocalStack Web UI on a macOS/Linux-based machine.&lt;/p></description></item><item><title>User-Guide: Single-Sign On</title><link>/user-guide/web-application/single-sign-on/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/web-application/single-sign-on/</guid><description>
&lt;p>LocalStack Enterprise allows to enable custom Single-Sign On (SSO) Identity providers, to facilitate the process of quickly onboarding team members from your organization.&lt;/p>
&lt;p>In order to configure SSO access, first sign in to the LocalStack Web application under &lt;a href="https://app.localstack.cloud/">app.localstack.cloud&lt;/a>.
In your profile settings, navigate to the Single Sign-on tab which will list existing SSO Identity Providers (if any exist).&lt;/p>
&lt;img src="localstack-setting-sso.png" width="800px" alt="Adding SSO Identity providers in LocalStack Settings">
&lt;p>Next, click the button to create a new identity provider (IdP), where you can choose between the two leading industry standards:&lt;/p>
&lt;ul>
&lt;li>OpenID Connect (OIDC): &lt;a href="https://openid.net/connect/">openid.net/connect&lt;/a>&lt;/li>
&lt;li>SAML: &lt;a href="http://saml.xml.org/saml-specifications">saml.xml.org/saml-specifications&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="configuring-sso-using-openid-connect-oidc">Configuring SSO using OpenID Connect (OIDC)&lt;/h2>
&lt;p>In the form illustrated below, you can then enter the main information for the new IdP (using OpenID Connect):&lt;/p>
&lt;ul>
&lt;li>Name of your identity provider&lt;/li>
&lt;li>Client ID, Client Secret, Attributes request method, OIDC issues, Authorize scopes, and more.
&lt;ul>
&lt;li>You should be able to find these attributes in your OIDC IdP configuration.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;img src="oidc-sso.png" width="600px" alt="Configuring SSO using OpenID Connect (OIDC)">
&lt;h2 id="configuring-sso-using-saml">Configuring SSO using SAML&lt;/h2>
&lt;p>When configuring SSO using SAML, you can configure the settings of the Identity Provider via a standard SAML metadata file (see illustration below).
The SAML metadata file can be specified either via URL or via a file upload.&lt;/p>
&lt;p>Select &lt;strong>Enable IdP sign out flow&lt;/strong> if you want your users to be logged out from our app and your SAML IdP when they log out from your our Web Application.&lt;/p>
&lt;img src="saml-sso.png" width="600px" alt="Configuring SSO using SAML">
&lt;h2 id="attribute-mapping">Attribute mapping&lt;/h2>
&lt;p>These attributes can be defined to automatically map attributes of user entities in your internal IdP to user attributes in the LocalStack platform.&lt;/p>
&lt;p>The following user attribute mappings can currently be configured:&lt;/p>
&lt;ul>
&lt;li>Email&lt;/li>
&lt;li>First name&lt;/li>
&lt;li>Last name&lt;/li>
&lt;/ul>
&lt;p>The Email should be configured to ensure correct functionality.&lt;/p>
&lt;img src="attribute-mapping.png" width="600px" alt="Attribute Mapping">
&lt;h2 id="callback-url-sign-up-portal-url-and-identifier-entity-id">Callback URL, Sign Up Portal URL and Identifier (Entity Id)&lt;/h2>
&lt;p>After configuring the base details for your Identity Provider (IdP), the following additional information can be copied from the UI:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Callback URL&lt;/strong>: The Callback URL that you may need to configure in the settings of your IdP.&lt;/li>
&lt;li>&lt;strong>Identifier (Entity Id)&lt;/strong>: The Identifier (Entity Id) that you may need to configure in the settings of your IdP.&lt;/li>
&lt;li>&lt;strong>Sign Up Portal URL&lt;/strong>: This is the URL that can be shared with your users to start the SSO signup flow for the LocalStack Web Application. The format of this endpoint is &lt;code>https://app.localstack.cloud/auth/sso/&amp;lt;organizationId&amp;gt;/&amp;lt;ssoName&amp;gt;&lt;/code>&lt;/li>
&lt;/ul>
&lt;img src="additional-information-page.png" width="600px" alt="Callback URL, Sign Up Portal URL, and Identifier (Entity Id)">
&lt;h2 id="user-roles-and-permissions">User Roles and Permissions&lt;/h2>
&lt;p>For each new member that joins your org, you can specify user roles and permissions that should be assigned to them.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Default User Role&lt;/strong>: The Role that should be assigned to users of your organization signing up via SSO. In most cases, this should be a Member.&lt;/li>
&lt;li>&lt;strong>Default User Permissions&lt;/strong>: Use this to define which permissions should be assigned to users of your organization signing up via SSO.
&lt;ul>
&lt;li>Tip: In order to enable self-serve API keys (i.e., allowing your users to generate their own API keys), make sure to select the &lt;strong>Allow the member to issue an API Key for her/himself&lt;/strong> permission.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;img src="roles-permissions.png" width="600px" alt="User Roles and Permissions"></description></item></channel></rss>