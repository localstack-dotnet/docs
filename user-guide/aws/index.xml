<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docs – Local AWS Services</title><link>/user-guide/aws/</link><description>Recent content in Local AWS Services on Docs</description><generator>Hugo -- gohugo.io</generator><atom:link href="/user-guide/aws/index.xml" rel="self" type="application/rss+xml"/><item><title>User-Guide: AWS Service Feature Coverage</title><link>/user-guide/aws/feature-coverage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/feature-coverage/</guid><description>
&lt;h2 id="coverage-levels">Coverage Levels&lt;/h2>
&lt;p>LocalStack provides emulation services for different AWS APIs (e.g., Lambda, SQS, SNS, &amp;hellip;), but the level of support with the real system differs and is categorized using the following system:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>⭐⭐⭐⭐⭐&lt;/td>
&lt;td>Feature fully supported by LocalStack maintainers; feature is guaranteed to pass all or the majority of tests&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Feature partially supported by LocalStack maintainers&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Feature supports basic functionalities (e.g., CRUD operations)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>⭐⭐&lt;/td>
&lt;td>Feature should be considered unstable&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>⭐&lt;/td>
&lt;td>Feature is experimental and regressions should be expected&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>-&lt;/strong>&lt;/td>
&lt;td>Feature is not yet implemented&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="emulation-levels">Emulation Levels&lt;/h2>
&lt;ul>
&lt;li>CRUD: The service accepts requests and returns proper (potentially static) responses. No additional business logic besides storing entities.&lt;/li>
&lt;li>Emulated: The service imitates the functionality, including synchronous and asynchronous business logic operating on service entities.&lt;/li>
&lt;/ul>
&lt;h2 id="aws-feature-coverage">AWS Feature Coverage&lt;/h2>
&lt;p>In the coverage table below, the features are marked with their respective availability across different LocalStack versions:&lt;/p>
&lt;ul>
&lt;li>Community version (default, if not marked)&lt;/li>
&lt;li>Pro version (marked with &lt;strong>Pro&lt;/strong>)&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Service / Feature&lt;/th>
&lt;th>Coverage Level&lt;/th>
&lt;th>Emulation Level&lt;/th>
&lt;th>Notes&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>AWS Certificate Manager (ACM)&lt;/strong>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_acm/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Certificates&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Account Configuration&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/amplify/">&lt;strong>Amplify&lt;/strong> (Pro)&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_amplify/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Apps&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Backend Environments&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Branches&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Deployments&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Domain Associations&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Jobs&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Webhooks&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>API Gateway&lt;/strong>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_apigateway/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>API Keys&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Authorizers (Pro)&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Base Path Mappings&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Deployments&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Documentation Parts&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Documentation Versions&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Domain Names&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Gateway / Integration / Method Responses&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Integrations&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Methods&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Models&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Request Validators&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Resources&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>REST APIs&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Stages&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Usage Plans&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Usage Plan Keys&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>VPC Links&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/tags/apigatewayv2/">&lt;strong>API Gateway v2&lt;/strong> (Pro)&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_apigatewayv2/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>APIs&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>API Mappings&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Authorizers&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Deployments&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Domain Names&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Import APIs from OpenAPI specs&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Integrations&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Integration Responses&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Models&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Routes&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Route Responses&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Stages&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>VPC Links&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>API Gateway Management API&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_apigatewaymanagementapi/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Connections&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>AppConfig&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_appconfig/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Applications&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Configuration Profiles&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Configurations&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Deployment Strategies&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Deployments&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Environments&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Hosted Configuration Versions&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Application Autoscaling&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_application-autoscaling/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Scalable Targets&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Scaling Activities&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Scaling Policies&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Scheduled Actions&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/appsync/">&lt;strong>AppSync&lt;/strong> (Pro)&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_appsync/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>API Caches&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>API Keys&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Data Sources&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Functions&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>GraphQL APIs&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Resolvers&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Types&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/athena/">&lt;strong>Athena&lt;/strong> (Pro)&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_athena/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Data Catalogs&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Databases&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Named Queries&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Prepared Statements&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Query Executions&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Table Metadata&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Work Groups&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Autoscaling&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_autoscaling/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Metric Collection&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Autoscaling Groups&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Loadbalancer&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/backup/">&lt;strong>Backup&lt;/strong> (Pro)&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_backup/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Backup Jobs&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Backup Plans&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Backup Selections&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Backup Vaults&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Backup Vault Access Policies&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Backup Vault Notifications&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Global Settings&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Protected Resources&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Recovery Points&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Batch&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_batch/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Compute Environments&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Job Queues&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Job Definitions&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Jobs&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>AWS Cost Explorer (CE)&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_ce/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Anomaly Monitoring&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Anomaly Subscription&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Cost Category&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Cost Usage/Forecast&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Savings Plan&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/cloudformation/">&lt;strong>CloudFormation&lt;/strong>&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_cloudformation/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Change Sets&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Stacks&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Stack Drifts&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Stack Events&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Stack Instances&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Stack Policies&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Stack Resources&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Stack Sets&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Publishers&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Templates&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Type Activations&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/cloudfront/">&lt;strong>CloudFront&lt;/strong> (Pro)&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_cloudfront/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Cache Policies&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Distributions&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Field Level Encryption&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Functions&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Invalidations&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Key Groups&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Monitoring Subscriptions&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Origin Access Identities&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Origin Request Policies&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Public Keys&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Realtime Log Configs&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Streaming Distributions&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>CloudTrail&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_cloudtrail/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Event Selectors&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Insight Selectors&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Trails&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Start/Stop Logging&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/cloudwatch/">&lt;strong>CloudWatch&lt;/strong>&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_cloudwatch/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Alarms&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Alarm Histories&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Anomaly Detectors&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Dashboards&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Insight Rules&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Metric Data&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Metric Statistics&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Metric Streams&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/codecommit/">&lt;strong>CodeCommit&lt;/strong> (Pro)&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_codecommit/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Approval Rules&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Blobs / Files / Folders&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Branches&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Comments&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Commits&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Merge Commits / Conflicts&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Pull Requests&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Repositories&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/cognito/">&lt;strong>Cognito Identity&lt;/strong> (Pro)&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_cognito-identity/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Developer Identities&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Identities&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Identity Pool Roles&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Identity Pools&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>OpenID Tokens&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/cognito/">&lt;strong>Cognito Identity Provider (IdP)&lt;/strong> (Pro)&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_cognito-idp/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Admin APIs&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>Triggers can involve Lambda&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Devices&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Auth Flows&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Groups&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Lambda Triggers&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>MFA Configs&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Resource Servers&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Risk Configurations&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Identity Providers&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>User Import Jobs&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>User Pool Clients&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>User Pool Domains&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>User Pools&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Users&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Config&lt;/strong>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_config/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Config Rules&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Conformance&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Remediation&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>DocumentDB&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_docdb/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DB/Cluster Parameter Groups&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DB/Cluster Snapshots&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DB Clusters/Instances&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DB Subnet Groups&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Event Subscriptions&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>DynamoDB&lt;/strong>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_dynamodb/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Backups (Pro)&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Batch Operations&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Global Tables&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>version 2019.11.21 not supported yet&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Items&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Kinesis Streaming Destinations&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>PartiQL Queries&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Query / Scan Operations&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tables&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Table Replica Autoscaling&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>DynamoDB Streams&lt;/strong>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_dynamodbstreams/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Records&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Shard Iterators&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Streams&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/elastic-compute-cloud/">&lt;strong>Elastic Compute Cloud (EC2)&lt;/strong>&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_ec2/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Classic Links&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Customer Gateways&lt;/td>
&lt;td>⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DHCP Options&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Allocate/Deallocate Elastic IPs&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Fleets&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Flow Logs&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Images&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>(Pro) Include Docker images&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Internet Gateways&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Local Gateway Routes&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Key Pairs&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Launch Templates&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>NAT Gateways&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Network ACLs&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Network Interfaces&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Reserved Instances&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Route Tables / Routes&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Scheduled Instances&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Security Groups / Egress / Ingress&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Snapshots&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Spot Instances&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Instances&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>(Pro) As Docker containers&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Subnets&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Traffic Mirrors&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Transit Gateways&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Volumes&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>VPC Endpoint Connections&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>VPC Peering Connections&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>VPCs&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>VPN Gateways / Connections&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/elastic-container-registry/">&lt;strong>Elastic Container Registry (ECR)&lt;/strong> (Pro)&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_ecr/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Images&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Image Scans&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Lifecycle Policies&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Registries&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Registry Policies&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Replication Configurations&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Repositories&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Repository Policies&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/elastic-container-service/">&lt;strong>Elastic Container Service (ECS)&lt;/strong> (Pro)&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_ecs/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Account Settings&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Attributes&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Capacity Providers&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Clusters&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Container Instances&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Services&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Task Definitions&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Task Sets&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tasks&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Elastic File System (EFS)&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_efs/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>File System&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Backup Policy&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/elastic-kubernetes-service/">&lt;strong>Elastic Kubernetes Service (EKS)&lt;/strong> (Pro)&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_eks/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AddOns&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Clusters&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Fargate Profiles&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Identity Provider Configs&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Node Groups&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Updates&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/elasticache/">&lt;strong>ElastiCache&lt;/strong> (Pro)&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_elasticache/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Cache Clusters (Memcached)&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Cache Clusters (Redis)&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Cache Parameter Groups&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Cache Security Groups&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Cache Subnet Groups&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Global Replication Groups&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Replication Groups&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Snapshots&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Users / User Groups&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Elastic Beanstalk&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_elasticbeanstalk/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Application Deployment&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Environment&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Elastic Load Balancing (ELB)&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_elb/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Listeners&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Load balancers&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>Application load balancers with IP address or Lambda targets only&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Rules&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Target groups&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Listener certificates&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/elastic-load-balancing/">&lt;strong>Elastic Load Balancing v2 (ELBv2)&lt;/strong>&lt;/a> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_elbv2/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Listeners&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Load balancers&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Rules&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Target groups&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Listener certificates&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/elastic-mapreduce/">&lt;strong>Elastic Map Reduce (EMR)&lt;/strong>&lt;/a> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_emr/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Clusters&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Instance Fleets&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Job Flow Steps&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Managed Scaling Policies&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Notebook Executions&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Run Job Flows (Queries)&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Security Configurations&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Studios&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/elasticsearch/">&lt;strong>Elasticsearch Service (ES)&lt;/strong>&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_es/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Cross-Cluster Search Connections&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Elasticsearch Domains&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Packages&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Reserved Instances&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>EventBridge (Events)&lt;/strong>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_events/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>API Destinations&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Archives&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Connections&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Event Buses&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Event Sources&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Partner Event Sources&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Replays&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Rules&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Firehose&lt;/strong>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_firehose/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Delivery Streams&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Destinations&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Records&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Stream Encryption&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Glacier&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_glacier/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Archive&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Vault&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Job&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/glue/">&lt;strong>Glue&lt;/strong> (Pro)&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_glue/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Classifiers&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Connections&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Crawlers&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Databases&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Dev Endpoints&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Jobs&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ML Transforms&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Partitions&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Registries&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Schemas&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Scripts&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Security Configurations&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tables&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Triggers&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>User Defined Functions&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Workflows&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/iam/">&lt;strong>Identity and Access Management (IAM)&lt;/strong>&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_iam/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Access Keys&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Account Aliases&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Credential Reports&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Groups&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Instance Profiles&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Login Profiles&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>OIDC Providers&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Policies&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Roles&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SAML Providers&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Server Certificates&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Service Linked Roles&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Users&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Virtual MFA Devices&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/iot/">&lt;strong>Analytics, Data, Wireless (IoT)&lt;/strong> (Pro)&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_iot/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Authorizers&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Billing Groups&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Certificates&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Channels&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Custom Metrics&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Datasets&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Dimensions&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Domain Configurations&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Jobs&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Jobs Executions&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Jobs Templates&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Mitigation Actions&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Policies&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Provisioning Claims / Templates&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Role Aliases&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Security Profiles&lt;/td>
&lt;td>-&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Shadows&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Streams&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Thing Groups&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Thing Types&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Things&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Topic Rules&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/managed-streaming-for-kafka/">&lt;strong>Managed Streaming for Kafka (MSK)&lt;/strong>&lt;/a> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_kafka/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Brokers&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Cluster Operations&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Clusters&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>Single node clusters&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Configurations&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/kinesis/">&lt;strong>Kinesis&lt;/strong>&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_kinesis/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Records&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Split / Merge Shards&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Stream Consumers&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Stream Encryption&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Streams&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Subscribe to Shard&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Kinesis Analytics&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_kinesisanalytics/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Applications&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Kinesis Analytics v2&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_kinesisanalyticsv2/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Applications&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Key Management Service (KMS)&lt;/strong>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_kms/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Aliases&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Custom Key Stores&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Encrypt / Decrypt / Sign Data&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Grants&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Key Policies&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Keys&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Lake Formation&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_lakeformation/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Transactions&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Permissions&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Resources&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/lambda/">&lt;strong>Lambda&lt;/strong>&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_lambda/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Aliases&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Code Signing Configs&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Custom Images (Pro)&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Event Invoke Configs (Destinations)&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Event Source Mappings&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Function Concurrencies&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Function URLs&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Functions&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Invoke Functions&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/lambda/#lambda-layers">Layers (Pro)&lt;/a>&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Permissions&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/logs/">&lt;strong>Logs&lt;/strong>&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_logs/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Destinations&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Export Tasks&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Log Events&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Log Groups&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Log Streams&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Metric Filters&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Queries&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Resource Policies&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Retention Policies&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Subscription Filters&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>MediaStore&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_mediastore/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Access Logging&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Container Policies&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Containers&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CORS Policies&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Lifecycle Policies&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Metric Policies&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>MediaStore Data&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_mediastore-data/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Objects&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Managed Workflows for Apache Airflow (MWAA)&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_mwaa/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CLI Tokens&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Environments&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>S3 integration (DAG bucket/paths)&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Web Login&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/neptune/">&lt;strong>Neptune DB&lt;/strong> (Pro)&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_neptune/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DB Clusters&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DB Cluster Endpoints&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DB Cluster Parameter Groups&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DB Cluster Snapshots&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Event Subscriptions&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Events&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Global Clusters&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>PendingMaintenanceAction&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/opensearch/">&lt;strong>OpenSearch Service&lt;/strong>&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_opensearch/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Cross-Cluster Search Connections&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>OpenSearch Domains&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Packages&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Reserved Instances&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Organizations&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_organizations/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Accounts&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Handshakes&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Organization&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Organizational Units&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Policies&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/qldb/">&lt;strong>Quantum Ledger Database (QLDB)&lt;/strong> (Pro)&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_qldb/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Blocks&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Digests&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Journal Kinesis Streams&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Journal S3 Exports&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Ledgers&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Send Commands / Run Queries&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Quantum Ledger Database Sessions&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_qldb-session/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Send Command&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/rds/">&lt;strong>Relational Database Service (RDS) / Aurora Serverless&lt;/strong> (Pro)&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_rds/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DB/Cluster Parameter Groups&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DB/Cluster Snapshots&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DB Clusters/Instances&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DB Proxies&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DB Security/Subnet Groups&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Event Subscriptions&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Option Groups&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Postgres AWS Extension Functions&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Relational Database Service (RDS) Data&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_rds-data/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Execute sql/statements&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Transactions&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Batch Execution&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Redshift&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_redshift/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Authorize/Revoke Access&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Cluster Parameter Groups&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Cluster Snapshots&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Clusters/Instances&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Event Subscriptions&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>HSM Configurations&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Partners&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Security/Subnet Groups&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Usage Limits&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Redshift Data&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_redshift-data/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Statements&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Describe Table&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Batch Execution&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Resource Groups&lt;/strong>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_resource-groups/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Resources&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Groups&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Group Configurations&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Resource Groups Tagging API&lt;/strong>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_resourcegroupstaggingapi/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Reports&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/route53/">&lt;strong>Route53&lt;/strong>&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_route53/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DNS Server Integration (Pro)&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Geo Locations&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Health Checks&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Hosted Zones&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Query Logging Configs&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Resource Record Sets&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Reusable Delegation Sets&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Traffic Policies&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Route53 Resolver&lt;/strong>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_route53resolver/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/s3/">&lt;strong>Simple Storage Service (S3)&lt;/strong>&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_s3/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Bucket ACLs&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Bucket CORS&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Bucket Encryptions&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Bucket Lifecycles&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Bucket Loggings&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Bucket Metrics Configurations&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Bucket Notifications&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>Supported notification targets: SQS, SNS, Lambda; Supported notification events: ObjectCreated, ObjectRemoved, ObjectTagging&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Bucket Ownership Controls&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Bucket Policies&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Bucket Replications&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Bucket Request Payments&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Bucket Versionings&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Bucket Websites&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Buckets&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Object Retentions&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Object Versions&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Objects&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Presigned URLs&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Upload/Download Files&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Simple Storage Service (S3) Control&lt;/strong>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_s3control/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Access Point Policies&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Access Points&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Jobs&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Lifecycle configurations&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Multi-region Access Points&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Public Access Blocks&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Storage Lens&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/sagemaker/">&lt;strong>SageMaker&lt;/strong> (Pro)&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_sagemaker/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Actions&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Algorithms&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>App Image Configs&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Apps&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Artifacts&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Associations&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Auto ML Jobs&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Code Repositories&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Compilation Jobs&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Contexts&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Data Quality Job Definitions&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Device Fleets&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Devices&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Domains&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Edge Packaging Jobs&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Endpoints / Endpoint Configs&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Experiments&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Feature Groups&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Flow Definitions&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Hyper Parameter Tuning Jobs&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Images / Image Versions&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Labelling Jobs&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Model Bias/Explainability Jobs&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Model Packages&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Models&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Monitoring Executions/Schedules&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Notebook Instances&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Pipeline Executions&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Pipelines&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Projects&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Training Jobs&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Transform Jobs&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Trials&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>User Profiles&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Workforces / Workteams&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>SecretsManager&lt;/strong>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_secretsmanager/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Resource Policies&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Secret Replications&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Secret Rotations&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Secrets&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Serverless Repo&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_serverlessrepo/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Applications&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Application Policies&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CloudFormation templates&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Service Discovery (CloudMap)&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_servicediscovery/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Namespaces&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/ses/">&lt;strong>Simple Email Service (SES)&lt;/strong>&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_ses/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Configuration Sets&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Identities&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Identity Policies&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Quotas / Statistics&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Receipt Filters&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Receipt Rules&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Sending Emails via SMTP (Pro)&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Templates&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Simple Email Service (SES) v2&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_sesv2/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Identities&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Sending Emails via SMTP&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Templates&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Simple Notification Service (SNS)&lt;/strong>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_sns/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Platform Applications&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Publish/Subscribe to Topics&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SMS Attributes / Sandbox Accounts&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Subscriptions&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Topics&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/sqs/">&lt;strong>Simple Queue Service (SQS)&lt;/strong>&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_sqs/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>FIFO Queues&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Message Deduplication&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Message Visibility&lt;/td>
&lt;td>⭐⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Messages&lt;/td>
&lt;td>⭐⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Permission&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Query API&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Standard Queues&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/systems-manager/">&lt;strong>Systems Manager (SSM)&lt;/strong>&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_ssm/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Associations&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Calendar States&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Commands / Command Invocations&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Compliance Items&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Documents&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Inventory Entries&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Ops Metadata&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Parameters&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Resource Compliance Summaries&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>StepFunctions&lt;/strong>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_stepfunctions/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Activities&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Executions / Execution History&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>State Machines&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Security Token Service (STS)&lt;/strong>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_sts/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Assume Role (Pro)&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Get Access Key Info&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Get Caller Identity&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Session Tokens&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Support&lt;/strong>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_support/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Cases&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TrustedAdvisorChecks&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Attachments&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Simple Workflow Service (SWF)&lt;/strong>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_swf/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Domain&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Activity&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Workflows&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Domains&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/timestream/">&lt;strong>Timestream (query, write)&lt;/strong>&lt;/a> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_timestream-query/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Databases&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Run Query&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tables&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Write Records&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/transfer/">&lt;strong>Transfer&lt;/strong> (Pro)&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_transfer/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Accesses&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Security Policies&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Servers&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SSH Public Keys&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Users&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/xray-tracing/">&lt;strong>X-Ray&lt;/strong> (Pro)&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_xray/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Encryption Configs&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Groups&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Insights&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Sampling Rules&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Service Graph&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Telemetry Records&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Trace Graph&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Trace Segments / Summaries&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>User-Guide: Amazon API Gateway</title><link>/user-guide/aws/apigateway/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/apigateway/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Amazon API Gateway is a managed service that enables developers to create, deploy, and manage APIs (Application Programming Interfaces). It allows easy creation of REST, HTTP, and WebSocket APIs to securely access data, business logic, or functionality from backend services like AWS Lambda functions or EC2 instances. API Gateway supports standard HTTP methods such as &lt;code>GET&lt;/code>, &lt;code>POST&lt;/code>, &lt;code>PUT&lt;/code>, &lt;code>PATCH&lt;/code>, and &lt;code>DELETE&lt;/code> and integrates with various AWS services, including Lambda, Cognito, CloudWatch, and X-Ray.&lt;/p>
&lt;p>LocalStack supports API Gateway V1 via the Community offering and API Gateway V2 via the Pro/Team offering, allowing you to use the API Gateway to create, deploy, and manage APIs on your local machine to invoke those exposed API endpoints. The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_apigatewayv2/">API coverage page&lt;/a>, which provides information on the extent of API Gateway V2&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
The Pro/Team version supports API Gateway V2 and V1, enabling you to create local HTTP and WebSocket APIs that allow long-lived connections and bi-directional communication between the API and your clients.
&lt;/div>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to API Gateway and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method. We will use the Lambda proxy integration to integrate an API method with a Lambda function. The Lambda function will be invoked with a &lt;code>GET&lt;/code> request and return a response with a status code of &lt;code>200&lt;/code> and a body containing the string &lt;code>Hello from Lambda!&lt;/code>.&lt;/p>
&lt;h3 id="create-a-lambda-function">Create a Lambda function&lt;/h3>
&lt;p>Create a new file named &lt;code>lambda.js&lt;/code> with the following contents:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&amp;#39;use strict&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">const&lt;/span> &lt;span style="color:#000">apiHandler&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">payload&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">context&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">callback&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">=&amp;gt;&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">callback&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">statusCode&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">200&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">body&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">JSON&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">stringify&lt;/span>&lt;span style="color:#000;font-weight:bold">({&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">message&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;Hello from Lambda&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">module&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">exports&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">apiHandler&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The above code defines a function named &lt;code>apiHandler&lt;/code> that returns a response with a status code of &lt;code>200&lt;/code> and a body containing the string &lt;code>Hello from Lambda&lt;/code>. Zip the file and upload it to LocalStack using the &lt;code>awslocal&lt;/code> CLI. Run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>zip function.zip lambda.js
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal lambda create-function \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --function-name apigw-lambda \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --runtime nodejs16.x \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --handler lambda.apiHandler \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --memory-size 128 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --zip-file fileb://function.zip \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --role arn:aws:iam::111111111111:role/apigw&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>This creates a new Lambda function named &lt;code>apigw-lambda&lt;/code> with the code you specified.&lt;/p>
&lt;h3 id="create-a-rest-api">Create a REST API&lt;/h3>
&lt;p>We will use the API Gateway&amp;rsquo;s &lt;a href="https://docs.aws.amazon.com/apigateway/latest/api/API_CreateRestApi.html">&lt;code>CreateRestApi&lt;/code>&lt;/a> API to create a new REST API. Here&amp;rsquo;s an example command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal apigateway create-rest-api --name &amp;#39;API Gateway Lambda integration&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>This creates a new REST API named &lt;code>API Gateway Lambda integration&lt;/code>. The above command returns the following response:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;id&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;cor3o5oeci&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;name&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;API Gateway Lambda integration&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;createdDate&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;2023-04-27T16:08:46+05:30&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;apiKeySource&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;HEADER&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;endpointConfiguration&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;types&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;EDGE&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;disableExecuteApiEndpoint&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Note the REST API ID returned in the response. You&amp;rsquo;ll need this ID for the next step.&lt;/p>
&lt;h3 id="fetch-the-resources">Fetch the Resources&lt;/h3>
&lt;p>Use the REST API ID generated in the previous step to fetch the resources for the API, using the &lt;a href="https://docs.aws.amazon.com/apigateway/latest/api/API_GetResources.html">&lt;code>GetResources&lt;/code>&lt;/a> API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal apigateway get-resources --rest-api-id &amp;lt;REST_API_ID&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The above command returns the following response:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;items&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;id&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;u53af9hm83&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;path&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;/&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Note the ID of the root resource returned in the response. You&amp;rsquo;ll need this ID for the next step.&lt;/p>
&lt;h3 id="create-a-resource">Create a resource&lt;/h3>
&lt;p>Create a new resource for the API using the &lt;a href="https://docs.aws.amazon.com/apigateway/latest/api/API_CreateResource.html">&lt;code>CreateResource&lt;/code>&lt;/a> API. Use the ID of the resource returned in the previous step as the parent ID:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal apigateway create-resource \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --rest-api-id &amp;lt;REST_API_ID&amp;gt; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --parent-id &amp;lt;PARENT_ID&amp;gt; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --path-part &amp;#34;{somethingId}&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The above command returns the following response:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;id&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;zzcvcf56ar&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;parentId&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;u53af9hm83&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;pathPart&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;{somethingId}&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;path&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;/{somethingId}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Note the ID of the root resource returned in the response. You&amp;rsquo;ll need this Resource ID for the next step.&lt;/p>
&lt;h3 id="add-a-method-and-integration">Add a method and integration&lt;/h3>
&lt;p>Add a &lt;code>GET&lt;/code> method to the resource using the &lt;a href="https://docs.aws.amazon.com/apigateway/latest/api/API_PutMethod.html">&lt;code>PutMethod&lt;/code>&lt;/a> API. Use the ID of the resource returned in the previous step as the Resource ID:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>awslocal apigateway put-method \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --rest-api-id &amp;lt;REST_API_ID&amp;gt; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --resource-id &amp;lt;RESOURCE_ID&amp;gt; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --http-method GET \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --request-parameters &amp;#34;method.request.path.somethingId=true&amp;#34; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --authorization-type &amp;#34;NONE&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The above command returns the following response:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;httpMethod&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;GET&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;authorizationType&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;NONE&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;apiKeyRequired&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;requestParameters&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;method.request.path.somethingId&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now, create a new integration for the method using the &lt;a href="https://docs.aws.amazon.com/apigateway/latest/api/API_PutIntegration.html">&lt;code>PutIntegration&lt;/code>&lt;/a> API.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal apigateway put-integration \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --rest-api-id &amp;lt;REST_API_ID&amp;gt; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --resource-id &amp;lt;RESOURCE_ID&amp;gt; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --http-method GET \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --type AWS_PROXY \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --integration-http-method POST \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --uri arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:000000000000:function:apigw-lambda/invocations \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --passthrough-behavior WHEN_NO_MATCH&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The above command integrates the &lt;code>GET&lt;/code> method with the Lambda function created in the first step. We can now proceed with the deployment before invoking the API.&lt;/p>
&lt;h3 id="create-a-deployment">Create a deployment&lt;/h3>
&lt;p>Create a new deployment for the API using the &lt;a href="https://docs.aws.amazon.com/apigateway/latest/api/API_CreateDeployment.html">&lt;code>CreateDeployment&lt;/code>&lt;/a> API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal apigateway create-deployment \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --rest-api-id &amp;lt;REST_API_ID&amp;gt; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --stage-name test&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Your API is now ready to be invoked. You can use &lt;code>cURL&lt;/code> or any HTTP REST client to invoke the API endpoint:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl -X GET http://localhost:4566/restapis/&amp;lt;REST_API_ID&amp;gt;/test/_user_request_/test
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{&amp;#34;message&amp;#34;:&amp;#34;Hello World&amp;#34;}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="localstack-features">LocalStack features&lt;/h2>
&lt;p>LocalStack provides additional features and functionality on top of the official AWS APIs, to help you develop, debug, and test your local API Gateway APIs.&lt;/p>
&lt;h3 id="accessing-http-apis-via-local-domain-name">Accessing HTTP APIs via Local Domain Name&lt;/h3>
&lt;p>To demonstrate how to access APIs through LocalStack&amp;rsquo;s local domain name, consider the following Serverless configuration that shows two Lambda functions (&lt;code>serviceV1&lt;/code> and &lt;code>serviceV2&lt;/code>) that are connected to an API Gateway v1 (&lt;code>http&lt;/code> event) and an API Gateway v2 endpoint (&lt;code>httpApi&lt;/code> event), respectively:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">...&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">plugins&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">serverless-localstack&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">custom&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">localstack&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">stages&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#000">local]&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">functions&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">serviceV1&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">handler&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">handler.handler&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">events&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">http&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># for API GW v1 integration&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">method&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">POST&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">path&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">/my/path1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">serviceV2&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">handler&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">handler.handler&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">events&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">httpApi&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># for API GW v2 integration&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">method&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">POST&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">path&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">/my/path2&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After you deploy the Lambda functions and API Gateway endpoints, you can access them using the LocalStack edge port (&lt;code>4566&lt;/code> by default). There are two alternative URL formats to access these endpoints.&lt;/p>
&lt;h4 id="recommended-url-format">Recommended URL format&lt;/h4>
&lt;p>The recommended URL format for accessing APIs is to use the following URL syntax with an &lt;code>execute-api&lt;/code> hostname:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>http://&amp;lt;apiId&amp;gt;.execute-api.localhost.localstack.cloud:4566/&amp;lt;stageId&amp;gt;/&amp;lt;path&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Here&amp;rsquo;s an example of how you would access the HTTP/REST API with an ID of &lt;code>0v1p6q6&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>http://0v1p6q6.execute-api.localhost.localstack.cloud:4566/local/my/path2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Note that the local stage ID is added in this example. Adding the stage ID is required for API Gateway V1 APIs, but optional for API Gateway V2 APIs (in case they include the wildcard &lt;code>$default&lt;/code> stage). For v2 APIs, the following URL should also work:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>http://0v1p6q6.execute-api.localhost.localstack.cloud:4566/my/path1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="alternative-url-format">Alternative URL format&lt;/h4>
&lt;p>The alternative URL format is an endpoint with the predefined path marker &lt;code>_user_request_&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>http://localhost:4566/restapis/&amp;lt;apiId&amp;gt;/&amp;lt;stageId&amp;gt;/_user_request_/&amp;lt;path&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>For the example above, the URL would be:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>http://localhost:4566/restapis/0v1p6q6/local/_user_request_/my/path1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This format is sometimes used in case of local DNS issues.&lt;/p>
&lt;h3 id="websocket-apis">WebSocket APIs&lt;/h3>
&lt;p>WebSocket APIs provide real-time communication channels between a client and a server. To use WebSockets in LocalStack, you can define a WebSocket route in your Serverless configuration:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">...&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">plugins&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">serverless-localstack&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">functions&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">actionHandler&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">handler&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">handler.handler&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">events&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">websocket&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">route&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">test-action&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Upon deployment of the Serverless project, LocalStack creates a new API Gateway V2 endpoint. To retrieve the list of APIs and verify the WebSocket endpoint, you can use the &lt;code>awslocal&lt;/code> CLI:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal apigatewayv2 get-apis
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Items&amp;#34;: [{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ApiEndpoint&amp;#34;: &amp;#34;ws://localhost:4510&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ApiId&amp;#34;: &amp;#34;129ca37e&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>In the above example, the WebSocket endpoint is &lt;code>ws://localhost:4510&lt;/code>. Assuming your Serverless project contains a simple Lambda &lt;code>handler.js&lt;/code> like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">module&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">exports&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">handler&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">function&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">event&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">context&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">callback&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">callback&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">event&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can send a message to the WebSocket at &lt;code>ws://localhost:4510&lt;/code> and the same message will be returned as a response on the same WebSocket.&lt;/p>
&lt;p>To push data from a backend service to the WebSocket connection, you can use the &lt;a href="https://awscli.amazonaws.com/v2/documentation/api/latest/reference/apigatewaymanagementapi/index.html">Amazon API Gateway Management API&lt;/a>. In LocalStack, use the following CLI command (replace &lt;code>&amp;lt;connectionId&amp;gt;&lt;/code> with your WebSocket connection ID):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal apigatewaymanagementapi \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> post-to-connection \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --connection-id &amp;#39;&amp;lt;connectionId&amp;gt;&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --data &amp;#39;{&amp;#34;msg&amp;#34;: &amp;#34;Hi&amp;#34;}&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="custom-ids-for-api-gateway-resources-via-tags">Custom IDs for API Gateway resources via tags&lt;/h2>
&lt;p>You can assign custom IDs to API Gateway REST and HTTP APIs using the &lt;code>_custom_id_&lt;/code> tag during resource creation. This can be useful to ensure a static endpoint URL for your API, simplifying testing and integration with other services.&lt;/p>
&lt;p>To assign a custom ID to an API Gateway REST API, use the &lt;code>create-rest-api&lt;/code> command with the &lt;code>tags={&amp;quot;_custom_id_&amp;quot;:&amp;quot;myid123&amp;quot;}&lt;/code> parameter. The following example assigns the custom ID &lt;code>&amp;quot;myid123&amp;quot;&lt;/code> to the API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal apigateway create-rest-api --name my-api --tags &amp;#39;{&amp;#34;_custom_id_&amp;#34;:&amp;#34;myid123&amp;#34;}&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;id&amp;#34;: &amp;#34;myid123&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can also configure the protocol type, the possible values being &lt;code>HTTP&lt;/code> and &lt;code>WEBSOCKET&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal apigatewayv2 create-api \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --name=my-api \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --protocol-type=HTTP --tags=&amp;#34;_custom_id_=my-api&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ApiEndpoint&amp;#34;: &amp;#34;my-api.execute-api.localhost.localstack.cloud:4566&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ApiId&amp;#34;: &amp;#34;my-api&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Name&amp;#34;: &amp;#34;my-api&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ProtocolType&amp;#34;: &amp;#34;HTTP&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Tags&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;_custom_id_&amp;#34;: &amp;#34;my-api&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Setting the API Gateway ID via &lt;code>_custom_id_&lt;/code> works only on the creation of the resource, but not on update in LocalStack. Ensure that you set the &lt;code>_custom_id_&lt;/code> tag on creation of the resource.
&lt;/div>
&lt;h2 id="custom-domain-names-with-api-gateway">Custom Domain Names with API Gateway&lt;/h2>
&lt;p>You can use custom domain names with API Gateway V1 and V2 APIs. To route requests to a custom domain name for an API Gateway V2 API, include the &lt;code>Host&lt;/code> header with the custom domain name in your request. For example, assuming that you have set up a custom domain name &lt;code>test.example.com&lt;/code> to point to your LocalStack instance, you can send a request like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl -H &amp;#39;Host: test.example.com&amp;#39; http://localhost:4566/test&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="api-gateway-resource-browser">API Gateway Resource Browser&lt;/h2>
&lt;p>The LocalStack Web Application provides a Resource Browser for managing API Gateway resources. You can access the Resource Browser by opening the LocalStack Web Application in your browser and navigating to the &lt;strong>Resources&lt;/strong> section, then clicking on &lt;strong>API Gateway&lt;/strong> under the &lt;strong>App Integration&lt;/strong> section.&lt;/p>
&lt;p>The Resource Browser displays &lt;a href="https://app.localstack.cloud/resources/gateway/v1">API Gateway V1&lt;/a> and &lt;a href="https://app.localstack.cloud/resources/gateway/v2">API Gateway V2&lt;/a> resources. You can click on individual resources to view their details.&lt;/p>
&lt;img src="api-gateway-resource-browser.png" alt="API Gateway Resource Browser" title="API Gateway Resource Browser" width="900" />
&lt;p>The Resource Browser allows you to perform the following actions:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Create API&lt;/strong>: Create a new API (&lt;a href="https://app.localstack.cloud/resources/gateway/v1/new">&lt;code>V1&lt;/code>&lt;/a>/&lt;a href="https://app.localstack.cloud/resources/gateway/v2/new">&lt;code>V2&lt;/code>&lt;/a>) by clicking on &lt;strong>Create API&lt;/strong> button on top-right and creating a new configuration by clicking on &lt;strong>Submit&lt;/strong> button.&lt;/li>
&lt;li>&lt;strong>Edit API&lt;/strong>: Edit the API configuration (&lt;code>V1&lt;/code>/&lt;code>V2&lt;/code>) by clicking on &lt;strong>Edit API&lt;/strong> button on top-right and saving the new configuration by clicking on &lt;strong>Submit&lt;/strong> button.&lt;/li>
&lt;li>&lt;strong>Check the Resources&lt;/strong>: Click on &lt;strong>Resources&lt;/strong> tab to view the resources associated with the API, along with their details, such as &lt;code>Id&lt;/code>, &lt;code>ParentId&lt;/code>, &lt;code>Path Part&lt;/code>, and &lt;code>Path&lt;/code> and their &lt;code>HTTP&lt;/code> method.&lt;/li>
&lt;li>&lt;strong>Navigate the Stages&lt;/strong>: Click on &lt;strong>Stages&lt;/strong> tab to view the stages associated with the API, along with their details, such as &lt;code>Deployment Id&lt;/code>, &lt;code>Stage Name&lt;/code>, &lt;code>Client Certificate Id&lt;/code>, and more.&lt;/li>
&lt;li>&lt;strong>Delete API&lt;/strong>: Delete the API configuration (&lt;code>V1&lt;/code>/&lt;code>V2&lt;/code>) by selecting the resource, clicking on &lt;strong>Remove Selected&lt;/strong> button on top-right and confirming the deletion by clicking on &lt;strong>Continue&lt;/strong> button.&lt;/li>
&lt;/ul>
&lt;p>You can also use the Resource Browser to check out the &lt;strong>Authorizers&lt;/strong>, &lt;strong>Models&lt;/strong>, &lt;strong>Request Validators&lt;/strong>, &lt;strong>API Keys&lt;/strong>, and &lt;strong>Usage Plans&lt;/strong>.&lt;/p>
&lt;h2 id="examples">Examples&lt;/h2>
&lt;p>The following code snippets and sample applications provide practical examples of how to use ACM in LocalStack for various use cases:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/localstack/localstack-pro-samples/tree/master/apigw-custom-domain">API Gateway with Custom Domains over our LocalStack Pro samples&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/localstack-pro-samples/tree/master/serverless-websockets">Websockets via API Gateway V2&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/serverless-api-ecs-apigateway-sample">Serverless Container-based APIs with Amazon ECS and Amazon API Gateway&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/step-up-auth-sample">Step-up Authentication using Amazon Cognito, DynamoDB, API Gateway Lambda Authorizer, and Lambda functions&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/microservices-apigateway-lambda-dynamodb-sqs-sample">Serverless Microservices with Amazon API Gateway, DynamoDB, SQS, and Lambda&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/aws-sdk-js-notes-app">Note-Taking application using AWS SDK for JavaScript, Amazon DynamoDB, Lambda, Cognito, API Gateway, and S3&lt;/a>&lt;/li>
&lt;li>For Terraform samples, check out the &lt;a href="https://github.com/localstack/localstack-terraform-samples">LocalStack Terraform examples&lt;/a> repository&lt;/li>
&lt;/ul></description></item><item><title>User-Guide: Amazon MQ</title><link>/user-guide/aws/mq/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/mq/</guid><description>
&lt;p>Amazon MQ is a fully managed service for open-source message brokers.
Basic support is included in LocalStack Pro, please refer to the &lt;a href="/user-guide/aws/feature-coverage/">feature-coverage&lt;/a> for more information.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>In the following, we outline basic MQ usage. Please also refer to the sample here: &lt;a href="https://github.com/localstack/localstack-pro-samples/tree/master/mq-broker">Localstack Pro Samples&lt;/a>.
Assuming you have &lt;a href="/user-guide/integrations/aws-cli/">&lt;code>awslocal&lt;/code>&lt;/a> installed, you can try the following commands:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal mq create-broker --broker-name test-broker --deployment-mode SINGLE_INSTANCE --engine-type ACTIVEMQ --engine-version=&amp;#39;5.16.6&amp;#39; --host-instance-type &amp;#39;mq.t2.micro&amp;#39; --auto-minor-version-upgrade --publicly-accessible --users=&amp;#39;{&amp;#34;ConsoleAccess&amp;#34;: true, &amp;#34;Groups&amp;#34;: [&amp;#34;testgroup&amp;#34;],&amp;#34;Password&amp;#34;: &amp;#34;QXwV*$iUM9USHnVv&amp;amp;!^7s3c@&amp;#34;, &amp;#34;Username&amp;#34;: &amp;#34;admin&amp;#34;}&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;BrokerArn&amp;#34;: &amp;#34;arn:aws:mq:us-east-1:000000000000:broker:test-broker:b-f503abb7-66bc-47fb-b1a9-8d8c51ef6545&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;BrokerId&amp;#34;: &amp;#34;b-f503abb7-66bc-47fb-b1a9-8d8c51ef6545&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Using the Describe-Broker endpoint, it is possible to get more detailed information about an instance. The ConsoleURL is especially handy, because it provides the address to the web console (accessible via the user &amp;ldquo;admin&amp;rdquo; and password &amp;ldquo;admin&amp;rdquo;).
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal mq describe-broker --broker-id b-f503abb7-66bc-47fb-b1a9-8d8c51ef6545
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;BrokerArn&amp;#34;: &amp;#34;arn:aws:mq:us-east-1:000000000000:broker:test-broker:b-f503abb7-66bc-47fb-b1a9-8d8c51ef6545&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;BrokerId&amp;#34;: &amp;#34;b-f503abb7-66bc-47fb-b1a9-8d8c51ef6545&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;BrokerInstances&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ConsoleURL&amp;#34;: &amp;#34;http://localhost:4513&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Endpoints&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;stomp://localhost:4515&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;tcp://localhost:4514&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;BrokerName&amp;#34;: &amp;#34;test-broker&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;BrokerState&amp;#34;: &amp;#34;RUNNING&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Created&amp;#34;: &amp;#34;2022-10-17T07:14:21.065527Z&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DeploymentMode&amp;#34;: &amp;#34;SINGLE_INSTANCE&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;EngineType&amp;#34;: &amp;#34;ACTIVEMQ&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;HostInstanceType&amp;#34;: &amp;#34;mq.t2.micro&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Tags&amp;#34;: {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;p>Since the broker is now actively listening, we can send a message to a sample queue using curl.
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl -XPOST -d &amp;#34;body=message&amp;#34; http://admin:admin@localhost:4513/api/message\?destination\=queue://orders.input&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;h2 id="localstack-limitations-and-differences-to-aws">Localstack limitations and differences to AWS&lt;/h2>
&lt;p>Only basic functionality is supported right now, main limitations are the following:&lt;/p>
&lt;ul>
&lt;li>Only ActiveMQ (version 5.16.6) is supported&lt;/li>
&lt;li>Users are not actively enforced (but needed to make proper calls)&lt;/li>
&lt;li>While it is possible to create configurations, they are not actively enforced in a broker&lt;/li>
&lt;li>Persistence and Cloud Pods are not supported&lt;/li>
&lt;li>Limited API coverage&lt;/li>
&lt;/ul></description></item><item><title>User-Guide: AppConfig</title><link>/user-guide/aws/appconfig/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/appconfig/</guid><description>
&lt;p>AWS AppConfig offers centralized management of configuration data and the ability to create, manage, and deploy configuration changes separately. It allows you to avoid deploying the service repeatedly for smaller changes, enables controlled deployments to applications and includes built-in validation checks &amp;amp; monitoring. With AppConfig, the configuration management is safe and secure, with automated monitoring and validation alongside roll-back capabilities.&lt;/p>
&lt;p>LocalStack provides AppConfig support via our Pro offering. You can use the AppConfig API to configure and set up an application, create an AppConfig environment, build a configuration profile, and detail your deployment strategy. The supported APIs are available over our &lt;a href="/user-guide/aws/feature-coverage/">feature coverage page&lt;/a>.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>In this getting started guide, you&amp;rsquo;ll learn how to make basic usage of AppConfig over LocalStack. This guide is intended for users who wish to get more acquainted with AppConfig, and assumes you have basic knowledge of the AWS CLI (and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script). First, start your LocalStack instance using your preferred method, then run the following commands:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Create an AWS AppConfig application via the &lt;code>awslocal&lt;/code> CLI:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal appconfig create-application \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --name &amp;lt;APPLICATION_NAME&amp;gt; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --description &amp;lt;APPLICATION_DESCRIPTION&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
In AppConfig, an application is a folder/directory that contains the configuration data for your specific application. The output of this command will be the application ID, which you will need for the next step:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Id&amp;#34;: &amp;#34;&amp;lt;APPLICATION_ID&amp;gt;&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Name&amp;#34;: &amp;#34;&amp;lt;APPLICATION_NAME&amp;gt;&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Description&amp;#34;: &amp;#34;&amp;lt;APPLICATION_DESCRIPTION&amp;gt;&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Create an AppConfig environment using the &lt;code>create-environment&lt;/code> command:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal appconfig create-environment \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --application-id &amp;lt;APPLICATION_ID&amp;gt; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --name &amp;lt;ENVIRONMENT_NAME&amp;gt; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --description &amp;lt;ENVIRONMENT_DESCRIPTION&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
An environment consists of the deployment group of your AppConfig applications. The output of this command will be the environment ID, which you will need for the next step:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ApplicationId&amp;#34;: &amp;#34;&amp;lt;APPLICATION_ID&amp;gt;&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Id&amp;#34;: &amp;#34;&amp;lt;ENVIRONMENT_ID&amp;gt;&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Name&amp;#34;: &amp;#34;&amp;lt;ENVIRONMENT_NAME&amp;gt;&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Description&amp;#34;: &amp;#34;&amp;lt;ENVIRONMENT_DESCRIPTION&amp;gt;&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;State&amp;#34;: &amp;#34;READY_FOR_DEPLOYMENT&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Create an AppConfig feature flag configuration profile using the &lt;code>create-configuration-profile&lt;/code> command:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal appconfig create-configuration-profile \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --application-id &amp;lt;APPLICATION_ID&amp;gt; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --name &amp;lt;CONFIGURATION_PROFILE_NAME&amp;gt; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --location-uri hosted \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --type AWS.AppConfig.FeatureFlags&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
You can further create your feature flag configuration data in JSON format by conforming to the &lt;code>AWS.AppConfig.FeatureFlags&lt;/code> JSON schema. Follow the &lt;a href="https://docs.aws.amazon.com/appconfig/latest/userguide/appconfig-creating-configuration-and-profile.html#appconfig-type-reference-feature-flags">schema documentation&lt;/a> to use the &lt;code>create-hosted-configuration-version&lt;/code> command to save your feature flag configuration data to AppConfig:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal appconfig create-hosted-configuration-version \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --application-id &amp;lt;APPLICATION_ID&amp;gt; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --configuration-profile-id &amp;lt;CONFIGURATION_PROFILE_ID&amp;gt; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --content-type &amp;#34;application/json&amp;#34; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --content &amp;lt;FEATURE_FLAG_CONFIGURATION_DATA_FILE&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Create an AppConfig deployment strategy using the &lt;code>create-deployment-strategy&lt;/code> command:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal appconfig create-deployment-strategy \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --name &amp;lt;DEPLOYMENT_STRATEGY_NAME&amp;gt; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --description &amp;lt;DEPLOYMENT_STRATEGY_DESCRIPTION&amp;gt; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --deployment-duration-in-minutes &amp;lt;DEPLOYMENT_DURATION_IN_MINUTES&amp;gt; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --growth-factor &amp;lt;GROWTH_FACTOR&amp;gt; \&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;p>For more information on deployment strategies, see the &lt;a href="https://docs.aws.amazon.com/appconfig/latest/userguide/appconfig-creating-deployment-strategy.html">AppConfig documentation&lt;/a>. The above command will return the following information:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Id&amp;#34;: &amp;#34;&amp;lt;DEPLOYMENT_STRATEGY_ID&amp;gt;&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Name&amp;#34;: &amp;#34;&amp;lt;DEPLOYMENT_STRATEGY_NAME&amp;gt;&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Description&amp;#34;: &amp;#34;&amp;lt;DEPLOYMENT_STRATEGY_DESCRIPTION&amp;gt;&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DeploymentDurationInMinutes&amp;#34;: &amp;lt;DEPLOYMENT_DURATION_IN_MINUTES&amp;gt;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;GrowthFactor&amp;#34;: &amp;lt;GROWTH_FACTOR&amp;gt;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Deploy the configuration using the &lt;code>start-deployment&lt;/code> command:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal appconfig start-deployment \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --application-id &amp;lt;APPLICATION_ID&amp;gt; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --environment-id &amp;lt;ENVIRONMENT_ID&amp;gt; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --deployment-strategy-id &amp;lt;DEPLOYMENT_STRATEGY_ID&amp;gt; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --configuration-profile-id &amp;lt;CONFIGURATION_PROFILE_ID&amp;gt; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --configuration-version &amp;lt;CONFIGURATION_VERSION&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --description &amp;lt;DEPLOYMENT_DESCRIPTION&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Navigate to the &lt;a href="https://docs.aws.amazon.com/appconfig/latest/userguide/working-with-appconfig-extensions.html">AppConfig extensions&lt;/a> and &lt;a href="https://docs.aws.amazon.com/appconfig/latest/userguide/appconfig-integration.html">services that integrate with AppConfig&lt;/a> in the official documentation to learn more about how to inject logic in your configuration, and use AppConfig with other AWS services respectively.&lt;/p></description></item><item><title>User-Guide: AppSync</title><link>/user-guide/aws/appsync/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/appsync/</guid><description>
&lt;p>Basic support for AppSync is included in LocalStack Pro. The local AppSync API allows you to spin up local GraphQL APIs and directly expose your data sources (e.g., DynamoDB tables) to external clients.&lt;/p>
&lt;h2 id="example-appsync-api-with-dynamodb-data-source">Example AppSync API with DynamoDB data source&lt;/h2>
&lt;p>For example, you can create a DynamoDB table &lt;code>&amp;quot;posts&amp;quot;&lt;/code> with a key attribute &lt;code>id&lt;/code>, and define a GraphQL schema in a file &lt;code>schema.graphql&lt;/code> like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span style="display:flex;">&lt;span>schema {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> query: Query
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>type Query {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> getPosts: [Post!]!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>type Post {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> id: DDBString!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>type DDBString {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> S: String!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&amp;hellip; and then use the AppSync API (or CloudFormation) to create the following entities:&lt;/p>
&lt;ol>
&lt;li>a GraphQL API&lt;/li>
&lt;li>a data source of type &lt;code>AMAZON_DYNAMODB&lt;/code> that references the &lt;code>&amp;quot;posts&amp;quot;&lt;/code> DynamoDB table&lt;/li>
&lt;li>a request mapping template with a content like this:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;version&amp;#34;&lt;/span> &lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;2017-02-28&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;operation&amp;#34;&lt;/span> &lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Scan&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="4">
&lt;li>a response mapping template with a content like this:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">$util&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">toJson&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">$context&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">result&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Items&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">])&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Once things have been wired up properly, and assuming the ID of your GraphQL API is &lt;code>&amp;quot;api123&amp;quot;&lt;/code>, you should be able to run the following GraphQL query to retrieve all items from the &lt;code>&amp;quot;posts&amp;quot;&lt;/code> DynamoDB table:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl -d &amp;#39;{&amp;#34;query&amp;#34;:&amp;#34;query {getPosts{id{S}}}&amp;#34;}&amp;#39; http://localhost:4605/graphql/api123&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;p>For more details, please refer to the self-contained sample published in &lt;a href="https://github.com/localstack/localstack-pro-samples/tree/master/appsync-graphql-api">this Github repository&lt;/a>.&lt;/p>
&lt;h2 id="custom-graphql-api-ids">Custom GraphQL API IDs&lt;/h2>
&lt;p>It is possible to use a predefined ID when creating GraphQL APIs by setting the tag &lt;code>_custom_id_&lt;/code>.
For example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal appsync create-graphql-api --name my-api --authentication-type API_KEY --tags _custom_id_=faceb00c
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;graphqlApi&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;name&amp;#34;: &amp;#34;my-api&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;apiId&amp;#34;: &amp;#34;faceb00c&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;authenticationType&amp;#34;: &amp;#34;API_KEY&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;arn&amp;#34;: &amp;#34;arn:aws:appsync:us-east-1:000000000000:apis/my-api&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;uris&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;GRAPHQL&amp;#34;: &amp;#34;http://localhost:4566/graphql/faceb00c&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;REALTIME&amp;#34;: &amp;#34;ws://localhost:4510/graphql/faceb00c&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;tags&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;_custom_id_&amp;#34;: &amp;#34;faceb00c&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="graphql-resolvers">GraphQL Resolvers&lt;/h2>
&lt;p>LocalStack currently provides support for the following &lt;a href="https://docs.aws.amazon.com/appsync/latest/devguide/tutorials.html">AppSync resolver types&lt;/a>:&lt;/p>
&lt;ul>
&lt;li>&lt;code>AMAZON_DYNAMODB&lt;/code> - for accessing DynamoDB tables&lt;/li>
&lt;li>&lt;code>RELATIONAL_DATABASE&lt;/code> - for accessing RDS database tables&lt;/li>
&lt;li>&lt;code>AWS_LAMBDA&lt;/code> - for retrieving data from Lambda function invocations&lt;/li>
&lt;li>&lt;code>HTTP&lt;/code> - for calling HTTP endpoints to fetch data&lt;/li>
&lt;li>&lt;code>NONE&lt;/code> - for pass-through resolver mapping templates that return the incoming payload&lt;/li>
&lt;/ul>
&lt;h2 id="graphql-endpoints">GraphQL Endpoints&lt;/h2>
&lt;p>There are three configurable strategies that govern how GraphQL API endpoints are created. The strategy can be configured via the &lt;code>GRAPHQL_ENDPOINT_STRATEGY&lt;/code> environment variable.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Value&lt;/th>
&lt;th>Format&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>domain&lt;/code>&lt;/td>
&lt;td>&lt;code>&amp;lt;api-id&amp;gt;.appsync-api.localhost.localstack.cloud:4566&lt;/code>&lt;/td>
&lt;td>This will be the default strategy in the future that uses the &lt;code>localhost.localstack.cloud&lt;/code> domain to route to your localhost&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>path&lt;/code>&lt;/td>
&lt;td>&lt;code>localhost:4566/appsync-api/&amp;lt;api-id&amp;gt;/graphql&lt;/code>&lt;/td>
&lt;td>An alternative that can be useful if you cannot resolve LocalStack&amp;rsquo;s localhost domain&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>legacy&lt;/code>&lt;/td>
&lt;td>&lt;code>localhost:4566/graphql/&amp;lt;api-id&amp;gt;&lt;/code>&lt;/td>
&lt;td>The old shape of the endpoint, which is currently the default but will be phased out&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>User-Guide: Athena</title><link>/user-guide/aws/athena/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/athena/</guid><description>
&lt;p>LocalStack Pro ships with built-in support for &lt;a href="https://aws.amazon.com/athena">Athena&lt;/a>, Amazon&amp;rsquo;s serverless data warehouse and analytics platform. Athena uses &lt;a href="https://prestodb.github.io/">Presto&lt;/a> under the covers, and your Athena instance will be automatically configured with a Hive metastore that connects seamlessly to the LocalStack S3 API. That is, you can easily connect your local S3 buckets and query data directly from S3 via the powerful Athena query API.&lt;/p>
&lt;p>The following commands illustrate how to use Athena from the command line (assuming you have &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> installed):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal athena start-query-execution --query-string &amp;#39;SELECT 1, 2, 3&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;QueryExecutionId&amp;#34;: &amp;#34;c9f453ad&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal athena list-query-executions
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;QueryExecutionIds&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;c9f453ad&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal athena get-query-results --query-execution-id c9f453ad
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ResultSet&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Rows&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Data&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;VarCharValue&amp;#34;: &amp;#34;_col0&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;VarCharValue&amp;#34;: &amp;#34;_col1&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;VarCharValue&amp;#34;: &amp;#34;_col2&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Data&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;VarCharValue&amp;#34;: &amp;#34;1&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;VarCharValue&amp;#34;: &amp;#34;2&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;VarCharValue&amp;#34;: &amp;#34;3&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ResultSetMetadata&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ColumnInfo&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Name&amp;#34;: &amp;#34;_col0&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Type&amp;#34;: &amp;#34;integer&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Name&amp;#34;: &amp;#34;_col1&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Type&amp;#34;: &amp;#34;integer&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Name&amp;#34;: &amp;#34;_col2&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Type&amp;#34;: &amp;#34;integer&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;UpdateCount&amp;#34;: 0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
In order to use the Athena API, some additional dependencies have to be fetched from the network, including a Docker image of apprx. 1.5GB which includes Presto, Hive and other tools. These dependencies are automatically fetched when you start up the service, so please make sure you&amp;rsquo;re on a decent internet connection when pulling the dependencies for the first time.
&lt;/div></description></item><item><title>User-Guide: AWS Amplify</title><link>/user-guide/aws/amplify/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/amplify/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>AWS Amplify is a JavaScript-based development framework with libraries, UI components, and a standard CLI interface for building and deploying web and mobile applications. With Amplify, developers can build and host static websites, single-page applications, and full-stack serverless web applications using an abstraction layer over popular AWS services like DynamoDB, Cognito, AppSync, Lambda, S3, and more.&lt;/p>
&lt;p>LocalStack supports AWS Amplify via a lightweight wrapper script called &lt;code>amplifylocal&lt;/code> and an Amplify CLI Plugin. &lt;code>amplifylocal&lt;/code> enables developers to use the Amplify JS library against LocalStack&amp;rsquo;s emulated APIs, as a drop-in replacement for the standard &lt;code>amplify&lt;/code> CLI command. The Amplify CLI plugin allows the &lt;code>amplify&lt;/code> CLI tool to create resources directly on your local machine.&lt;/p>
&lt;p>LocalStack supports Amplify via the Pro/Team offering, allowing you to use the Amplify APIs to build and test their Amplify applications locally. The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_amplify/">API coverage page&lt;/a>, which provides information on the extent of Amplify&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;h2 id="amplifylocal-cli">&lt;code>amplifylocal&lt;/code> CLI&lt;/h2>
&lt;p>The &lt;code>amplifylocal&lt;/code> CLI is a thin wrapper script for using the Amplify JS library against local AWS APIs provided by LocalStack.&lt;/p>
&lt;h3 id="installation">Installation&lt;/h3>
&lt;p>To install &lt;code>amplifylocal&lt;/code>, simply install the &lt;a href="https://www.npmjs.com/package/amplify-js-local">amplify-js-local&lt;/a> package from the npm registry:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>npm install -g amplify-js-local @aws-amplify/cli&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Note that you also need to install the &lt;code>@aws-amplify/cli&lt;/code> package manually to ensure decoupling of the two libraries and allow the use of arbitrary versions of &lt;code>@aws-amplify/cli&lt;/code> under the covers.
&lt;/div>
&lt;p>You can check the version of the underlying &lt;code>@aws-amplify/cli&lt;/code> installation used by &lt;code>amplifylocal&lt;/code> by running:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>amplifylocal --version&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>This will return the version number of the installed &lt;code>@aws-amplify/cli&lt;/code> package.&lt;/p>
&lt;h3 id="configuration">Configuration&lt;/h3>
&lt;p>You can configure the following environment variables to customize LocalStack&amp;rsquo;s behaviour:&lt;/p>
&lt;ul>
&lt;li>&lt;code>EDGE_PORT&lt;/code>: The port under which LocalStack&amp;rsquo;s edge service is accessible (default: &lt;code>4566&lt;/code>).&lt;/li>
&lt;li>&lt;code>LOCALSTACK_HOSTNAME&lt;/code>: The target host under which LocalStack&amp;rsquo;s edge service is accessible (default: &lt;code>localhost&lt;/code>).&lt;/li>
&lt;/ul>
&lt;h2 id="getting-started">Getting Started&lt;/h2>
&lt;p>This guide provides step-by-step instructions on deploying a sample AWS Amplify application using the &lt;code>amplifylocal&lt;/code> CLI on LocalStack. The guide assumes that you have already installed &lt;code>amplifylocal&lt;/code>. Before you begin, ensure that you have started your LocalStack container using your preferred method.&lt;/p>
&lt;p>Clone the &lt;a href="https://github.com/aws-samples/aws-amplify-graphql">AWS Amplify sample application&lt;/a>, demonstrating how to use GraphQL to build an application that allows users to log in to the system, upload and download private photos.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>git clone git@github.com:aws-samples/aws-amplify-graphql.git&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Navigate to the &lt;code>aws-amplify-graphql&lt;/code> directory and install the dependencies.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>cd aws-amplify-graphql
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>npm install&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Initialize the Amplify project. You will be prompted to enter a project name and select project configurations. Once you have entered your preferred configurations, you can initialize the project.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>amplifylocal init&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Add the authentication service to the project.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>amplifylocal add auth&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Add the API service to the project.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>amplifylocal add api&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Deploy the application over the emulated AWS infrastructure created by LocalStack.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>amplifylocal push&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Once the deployment is complete, you can inspect the created resources using the &lt;code>awslocal&lt;/code> CLI. This will display a list of created resources including name, API ID, authentication type, ARN, and URIs.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal appsync list-graphql-apis
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;graphqlApis&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;name&amp;#34;: &amp;#34;awsamplifygraphql-dev&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;apiId&amp;#34;: &amp;#34;1a6f1f11&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;authenticationType&amp;#34;: &amp;#34;API_KEY&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;arn&amp;#34;: &amp;#34;arn:aws:appsync:us-east-1:000000000000:apis/1a6f1f11&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;uris&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;GRAPHQL&amp;#34;: &amp;#34;http://localhost:4566/graphql/1a6f1f11&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;REALTIME&amp;#34;: &amp;#34;ws://localhost:4510/graphql/1a6f1f11&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="amplify-js-library">Amplify JS Library&lt;/h3>
&lt;p>In addition to the &lt;code>amplifylocal&lt;/code> CLI, you can use the Amplify JS library in your local Node.js programs or ES6 frontend code, such as React.js.&lt;/p>
&lt;h4 id="nodejs-program-backend">Node.js Program (Backend)&lt;/h4>
&lt;p>To use Amplify in your Node.js program, import and apply the patches as shown below:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">const&lt;/span> &lt;span style="color:#000">amplifyLocal&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">require&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;amplify-js-local/lib/index&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">amplifyLocal&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">applyPatches&lt;/span>&lt;span style="color:#000;font-weight:bold">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can then use the regular Amplify commands, which should automatically use the local endpoints.&lt;/p>
&lt;h4 id="es6-javascript-code">ES6 JavaScript Code&lt;/h4>
&lt;p>To use Amplify in your ES6 JavaScript code, first import Amplify and the &lt;code>applyPatches&lt;/code> function as shown below:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">Amplify&lt;/span> &lt;span style="color:#000">from&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;aws-amplify&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">applyPatches&lt;/span> &lt;span style="color:#000">from&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;amplify-js-local/lib/es6&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// apply patches
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">applyPatches&lt;/span>&lt;span style="color:#000;font-weight:bold">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// configure Amplify
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">Amplify&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">configure&lt;/span>&lt;span style="color:#000;font-weight:bold">(...);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="amplify-localstack-plugin">Amplify LocalStack Plugin&lt;/h2>
&lt;p>Amplify LocalStack Plugin allows the &lt;code>amplify&lt;/code> CLI tool to create resources on your local machine instead of AWS. It achieves this by redirecting any requests to AWS to a LocalStack container running locally on your machine.&lt;/p>
&lt;h3 id="installation-1">Installation&lt;/h3>
&lt;p>To install the Amplify LocalStack Plugin, install the &lt;a href="https://www.npmjs.com/package/amplify-localstack">amplify-localstack&lt;/a> package from the npm registry and add the plugin to your Amplify setup:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>npm install -g amplify-localstack
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>amplify plugin add amplify-localstack&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="configuration-1">Configuration&lt;/h3>
&lt;p>You can configure the following environment variables to customize LocalStack&amp;rsquo;s behaviour:&lt;/p>
&lt;ul>
&lt;li>&lt;code>EDGE_PORT&lt;/code>: The port number under which the LocalStack edge service is accessible. The default value is &lt;code>4566&lt;/code>.&lt;/li>
&lt;li>&lt;code>LOCALSTACK_HOSTNAME&lt;/code>: It specifies the target host under which the LocalStack edge service is accessible. The default value is &lt;code>localhost.localstack.cloud&lt;/code>.&lt;/li>
&lt;li>&lt;code>LOCALSTACK_ENDPOINT&lt;/code>: It allows you to set a custom endpoint directly. If set, it overrides the values set for &lt;code>EDGE_PORT&lt;/code> and &lt;code>LOCALSTACK_HOSTNAME&lt;/code>. The default value is &lt;code>https://localhost.localstack.cloud:4566&lt;/code>.&lt;/li>
&lt;/ul>
&lt;h3 id="usage">Usage&lt;/h3>
&lt;p>After installing the plugin, you can deploy your resources to LocalStack using the &lt;code>amplify init&lt;/code> or &lt;code>amplify push&lt;/code> commands. The console will prompt you to select whether to deploy to LocalStack or AWS.&lt;/p>
&lt;p>You can also add the parameter &lt;code>--use-localstack true&lt;/code> to your commands to avoid being prompted and automatically use LocalStack. Here is an example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>amplify init --use-localstack true
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>amplify add api
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>amplify push --use-localstack true&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>User-Guide: AWS Certificate Manager (ACM)</title><link>/user-guide/aws/acm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/acm/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>&lt;a href="https://aws.amazon.com/certificate-manager/">AWS Certificate Manager (ACM)&lt;/a> is a service that enables you to create and manage SSL/TLS certificates that can be used to secure your applications and resources in AWS. You can use ACM to provision and deploy public or private certificates trusted by browsers and other clients.&lt;/p>
&lt;p>ACM supports securing multiple domain names and subdomains and can create wildcard SSL certificates to protect an entire domain and its subdomains. You can also use ACM to import certificates from third-party certificate authorities or to generate private certificates for internal use.&lt;/p>
&lt;p>LocalStack supports ACM via the Community offering, allowing you to use the ACM API to create, list, and delete certificates. The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_acm/">API coverage page&lt;/a>, which provides information on the extent of ACM&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users who are new to ACM and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method, then use the &lt;a href="https://docs.aws.amazon.com/acm/latest/APIReference/API_RequestCertificate.html">RequestCertificate API&lt;/a> to request a new public ACM certificate. Specify the domain name you want to request the certificate for, and any additional options you need. Here&amp;rsquo;s an example command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal acm request-certificate \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --domain-name www.example.com \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --validation-method DNS \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --idempotency-token 1234 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --options CertificateTransparencyLoggingPreference=DISABLED&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>This command will return the Amazon Resource Name (ARN) of the new certificate, which you can use in other ACM commands.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;CertificateArn&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;arn:aws:acm:&amp;lt;region&amp;gt;:000000000000:certificate/&amp;lt;certificate_ID&amp;gt;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Use the &lt;a href="https://docs.aws.amazon.com/acm/latest/APIReference/API_ListCertificates.html">&lt;code>ListCertificates&lt;/code> API&lt;/a> to list all the certificates. This command returns a list of the ARNs of all the certificates that have been requested or imported into ACM. Here&amp;rsquo;s an example command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal acm list-certificates --max-items 10&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Use the &lt;a href="https://docs.aws.amazon.com/acm/latest/APIReference/API_DescribeCertificate.html">&lt;code>DescribeCertificate&lt;/code> API&lt;/a> to view the details of a specific certificate. Provide the ARN of the certificate you want to view, and this command will return information about the certificate&amp;rsquo;s status, domain name, and other attributes. Here&amp;rsquo;s an example command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal acm describe-certificate --certificate-arn arn:aws:acm:&amp;lt;region&amp;gt;:account:certificate/&amp;lt;certificate_ID&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Finally you can use the &lt;a href="https://docs.aws.amazon.com/acm/latest/APIReference/API_DeleteCertificate.html">&lt;code>DeleteCertificate&lt;/code> API&lt;/a> to delete a certificate from ACM, by passing the ARN of the certificate you want to delete. Here&amp;rsquo;s an example command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal acm delete-certificate --certificate-arn arn:aws:acm:&amp;lt;region&amp;gt;:account:certificate/&amp;lt;certificate_ID&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>For more comprehensive information on ACM, refer to the &lt;a href="https://docs.aws.amazon.com/acm/latest/userguide/acm-overview.html">AWS Certificate Manager&lt;/a> documentation. You can use the &lt;code>awslocal&lt;/code> CLI or any &lt;a href="https://docs.localstack.cloud/user-guide/integrations/">integration&lt;/a> to interact with ACM in LocalStack.&lt;/p>
&lt;h2 id="examples">Examples&lt;/h2>
&lt;p>The following code snippets and sample applications provide practical examples of how to use ACM in LocalStack for various use cases:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/localstack/localstack-pro-samples/tree/master/apigw-custom-domain">API Gateway with Custom Domains&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/localstack-terraform-samples/tree/master/acm-route53">Generating an ACM certificate via Terraform&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>User-Guide: Organizations</title><link>/user-guide/aws/organization/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/organization/</guid><description>
&lt;p>Amazon Web Services Organizations is an account management service that allows you to consolidate multiple different AWS accounts into an organization. It allows you to manage different accounts in a single organization and consolidate billing. With Organizations, you can also attach different policies to your organizational units (OUs) or individual accounts in your organization.&lt;/p>
&lt;p>Organizations is available over LocalStack Pro and the supported APIs are available over our &lt;a href="/references/configuration/">configuration page&lt;/a>.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>In this getting started guide, you&amp;rsquo;ll learn how to create your local AWS Organization and configure it with member accounts. This guide is intended for users who wish to get more acquainted with Organizations, and assumes you have basic knowledge of the AWS CLI (and our &lt;code>awslocal&lt;/code> wrapper script). To get started, start your LocalStack instance using your preferred method:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Create a new local AWS Organization with the feature set flag set to &lt;code>ALL&lt;/code>:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal organizations create-organization --feature-set ALL&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>You can now run the &lt;code>describe-organization&lt;/code> command to see the details of your organization:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal organizations describe-organization&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>You can now create an AWS account that would be a member of your organization:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal organizations create-account \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --email example@example.com \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --account-name &amp;#34;Test Account&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
Since LocalStack essentially mocks AWS, the account creation is instantaneous. You can now run the &lt;code>list-accounts&lt;/code> command to see the details of your organization:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal organizations list-accounts&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>You can also remove a member account from your organization:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal organizations remove-account-from-organization --account-id &amp;lt;ACCOUNT_ID&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>To close an account in your organization, you can run the &lt;code>close-account&lt;/code> command:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal organizations close-account --account-id 000000000000&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>You can use organizational units (OUs) to group accounts together to administer as a single unit. To create an OU, you can run:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal organizations list-roots
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal organizations list-children \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --parent-id &amp;lt;PARENT-ID&amp;gt; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --child-type ORGANIZATIONAL_UNIT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal organizations create-organizational-unit \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --parent-id &amp;lt;PARENT-ID&amp;gt; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --name New-Child-OU&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Before you can create and attach a policy to your organization, you must enable a policy type. To enable a policy type, you can run:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal organizations enable-policy-type \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --root-id &amp;lt;ROOT-ID&amp;gt; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --policy-type BACKUP_POLICY&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
To disable a policy type, you can run:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal organizations disable-policy-type \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --root-id &amp;lt;ROOT-ID&amp;gt; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --policy-type BACKUP_POLICY&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>To view the policies that are attached to your organization, you can run:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal organizations list-policies --filter SERVICE_CONTROL_POLICY&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>To delete an organization, you can run:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal organizations delete-organization&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>User-Guide: Backup</title><link>/user-guide/aws/backup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/backup/</guid><description>
&lt;p>The &lt;a href="https://docs.aws.amazon.com/aws-backup/">Backup API&lt;/a> allows to manage backup plans, to create scheduled or on-demand backups of certain resource types like DynamoDB tables or RDS databases.&lt;/p></description></item><item><title>User-Guide: CloudFormation</title><link>/user-guide/aws/cloudformation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/cloudformation/</guid><description>
&lt;p>&lt;img src="cloudformation-logo.svg" alt="CloudFormation logo">&lt;/p>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>AWS CloudFormation is AWS&amp;rsquo;s primary Infrastructure-as-Code (IaC) service. It is used to declaratively define your architecture on the AWS cloud, including resources such as S3 Buckets, Lambda Functions, and much more.&lt;/p>
&lt;p>CloudFormation &lt;strong>Stack&lt;/strong> templates are written in either YAML or JSON and can be written manually or generated by higher-level tools such as &lt;a href="/user-guide/integrations/aws-cdk/">AWS CDK&lt;/a>, &lt;a href="/user-guide/integrations/aws-sam/">AWS SAM&lt;/a>, &lt;a href="/user-guide/integrations/pulumi/">Pulumi&lt;/a> or &lt;a href="/user-guide/integrations/serverless-framework/">Serverless Framework&lt;/a>.&lt;/p>
&lt;h2 id="quickstart">Quickstart&lt;/h2>
&lt;p>In this quickstart guide we will deploy a simple CloudFormation stack consisting of a single S3 Bucket.&lt;/p>
&lt;h3 id="prerequisites">Prerequisites&lt;/h3>
&lt;p>Make sure you&amp;rsquo;ve set up &lt;a href="/user-guide/integrations/aws-cli/#localstack-aws-cli-awslocal">&lt;code>awslocal&lt;/code>&lt;/a> and that you have a running LocalStack instance.&lt;/p>
&lt;h3 id="deploy-a-cloudformation-stack-to-localstack">Deploy a CloudFormation Stack to LocalStack&lt;/h3>
&lt;ul class="nav nav-tabs" id="tabs-5" role="tablist">
&lt;li class="nav-item">
&lt;a class="nav-link active persistLang-yaml"
id="tabs-05-00-tab" data-toggle="tab" href="#tabs-05-00" role="tab"
onclick="persistLang(&amp;#34;yaml&amp;#34;);"aria-controls="tabs-05-00" aria-selected="false">
YAML
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link persistLang-json"
id="tabs-05-01-tab" data-toggle="tab" href="#tabs-05-01" role="tab"
onclick="persistLang(&amp;#34;json&amp;#34;);"aria-controls="tabs-05-01" aria-selected="false">
JSON
&lt;/a>
&lt;/li>
&lt;/ul>
&lt;div class="tab-content" id="tabs-5-content">
&lt;div class="tab-pane fade show active"
id="tabs-05-00" role="tabpanel" aria-labelled-by="tabs-05-00-tab">
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">Resources&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">LocalBucket&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">Type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">AWS::S3::Bucket&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">Properties&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">BucketName&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">cfn-quickstart-bucket&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-05-01" role="tabpanel" aria-labelled-by="tabs-05-01-tab">
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Resources&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;LocalBucket&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Type&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;AWS::S3::Bucket&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Properties&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;BucketName&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;cfn-quickstart-bucket&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>Use this code snippet and save the content in either &lt;code>cfn-quickstart-stack.yaml&lt;/code> or &lt;code>cfn-quickstart-stack.json&lt;/code> respectively.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># Deploy the bucket on LocalStack&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># The template file (ending with .yaml or .json) should contain the stack content from above&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>awslocal cloudformation deploy --stack-name cfn-quickstart-stack --template-file &lt;span style="color:#4e9a06">&amp;#34;./cfn-quickstart-stack.yaml&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># Verify the bucket was created successfully&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># The output should include a bucket with the name cfn-quickstart-bucket&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>awslocal s3api list-buckets
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># Delete the stack (this will also delete the bucket)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>awslocal cloudformation delete-stack --stack-name cfn-quickstart-stack
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Check out the official &lt;a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/Welcome.html">AWS CloudFormation User Guide&lt;/a> for a general introduction to CloudFormation concepts and a more comprehensive introduction on how to write CloudFormation templates.&lt;/p>
&lt;h2 id="cloudformation-user-interface">CloudFormation User-Interface&lt;/h2>
&lt;p>You can also use LocalStack&amp;rsquo;s CloudFormation user-interface to deploy and manage your CloudFormation stacks by using public templates. The user-interface is available at &lt;code>http://localhost:4566/_localstack/cloudformation/deploy&lt;/code>.&lt;/p>
&lt;img src="cloudformation-ui.png" alt="CloudFormation UI in LocalStack" title="CloudFormation UI in LocalStack" width="450" />
&lt;p>You can use the CloudFormation user-interface to point to an existing CloudFormation template URL, fill out the required parameters, and trigger the deployment from the browser. Let us use the following example template to deploy a CloudFormation stack:&lt;/p>
&lt;ul>
&lt;li>Use the public CloudFormation template URL: &lt;code>https://s3.eu-central-1.amazonaws.com/cloudformation-templates-eu-central-1/DynamoDB_Secondary_Indexes.template&lt;/code>.&lt;/li>
&lt;li>Next we download the template URL and extract the stack parameters (default values automatically applied):
&lt;img src="localstack-cloudformation-stack.png" alt="Extract Stack Parameters via CloudFormation UI in LocalStack" title="Extract Stack Parameters via CloudFormation UI in LocalStack" width="450" />&lt;/li>
&lt;li>Upon submission, the stack deployment is triggered, and we display a result message:
&lt;img src="localstack-cloudformation-stack-deployment.png" alt="Deploy CloudFormation Stack in LocalStack" title="Deploy CloudFormation Stack in LocalStack" width="450" />&lt;/li>
&lt;/ul>
&lt;p>To interactively browse the state of the locally deployed resources, you may want to check out our &lt;a href="https://app.localstack.cloud">Web application&lt;/a>.&lt;/p>
&lt;h2 id="support">Support&lt;/h2>
&lt;p>We are constantly improving our feature coverage for CloudFormation, with new resource types getting added on an ongoing basis.
Your feature requests help us prioritize which resources we need to prioritize, so please feel free to &lt;a href="https://github.com/localstack/localstack/issues/new?assignees=&amp;amp;labels=feature-request&amp;amp;template=feature-request.yml&amp;amp;title=feature+request%3A+%3Ctitle%3E">open a new GitHub issue&lt;/a> or add a &lt;em>thumbs up&lt;/em> to an existing issue.&lt;/p>
&lt;h3 id="features">Features&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">Feature&lt;/th>
&lt;th style="text-align:left">Support&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">Parameters&lt;/td>
&lt;td style="text-align:left">Partial&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Dynamic References&lt;/td>
&lt;td style="text-align:left">&lt;strong>Full&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Rules&lt;/td>
&lt;td style="text-align:left">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Mappings&lt;/td>
&lt;td style="text-align:left">&lt;strong>Full&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Conditions&lt;/td>
&lt;td style="text-align:left">&lt;strong>Full&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Transform&lt;/td>
&lt;td style="text-align:left">&lt;strong>Full&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Outputs&lt;/td>
&lt;td style="text-align:left">&lt;strong>Full&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Custom resources&lt;/td>
&lt;td style="text-align:left">Partial&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Drift detection&lt;/td>
&lt;td style="text-align:left">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Importing Resources&lt;/td>
&lt;td style="text-align:left">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Change sets&lt;/td>
&lt;td style="text-align:left">&lt;strong>Full&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Nested stacks&lt;/td>
&lt;td style="text-align:left">Partial&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">StackSets&lt;/td>
&lt;td style="text-align:left">Partial&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Intrinsic Functions&lt;/td>
&lt;td style="text-align:left">Partial&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>In general &lt;code>UPDATE&lt;/code> support for resources is currently limited.
Prefer re-creating a stack rather than updating an existing one.&lt;/p>
&lt;h3 id="intrinsic-functions">Intrinsic Functions&lt;/h3>
&lt;p>Localstack supports a wide range of Cloudformation Intrinsic functions:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Intrinsic Function&lt;/th>
&lt;th>Supported&lt;/th>
&lt;th>Explanation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Fn::And&lt;/td>
&lt;td>Yes&lt;/td>
&lt;td>Performs a logical AND operation on two or more expressions.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Fn::Or&lt;/td>
&lt;td>Yes&lt;/td>
&lt;td>Performs a logical OR operation on two or more expressions.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Fn::Base64&lt;/td>
&lt;td>Yes&lt;/td>
&lt;td>Converts a binary string to a Base64-encoded string.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Fn::Sub&lt;/td>
&lt;td>Yes&lt;/td>
&lt;td>Performs a string substitution operation.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Fn::Split&lt;/td>
&lt;td>Yes&lt;/td>
&lt;td>Splits a string into an array of strings.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Fn::Length&lt;/td>
&lt;td>Yes&lt;/td>
&lt;td>Returns the length of a string.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Fn::Join&lt;/td>
&lt;td>Yes&lt;/td>
&lt;td>Joins an array of strings into a single string.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Fn::FindInMap&lt;/td>
&lt;td>Yes&lt;/td>
&lt;td>Finds a value in a map.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Fn::Ref&lt;/td>
&lt;td>Yes&lt;/td>
&lt;td>References a resource in the template.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Fn::GetAtt&lt;/td>
&lt;td>Yes&lt;/td>
&lt;td>Gets an attribute from a resource.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Fn::If&lt;/td>
&lt;td>Yes&lt;/td>
&lt;td>Performs a conditional evaluation.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Fn::Import&lt;/td>
&lt;td>Yes&lt;/td>
&lt;td>Imports a value from another template.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Fn::ToJsonString&lt;/td>
&lt;td>No&lt;/td>
&lt;td>Converts an object or map into a json string.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Fn::Cidr&lt;/td>
&lt;td>No&lt;/td>
&lt;td>Generates a CIDR block from the inputs.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Fn::GetAZs&lt;/td>
&lt;td>No&lt;/td>
&lt;td>Returns a list of the Availability Zones of a region.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="resources-community-edition">Resources (Community Edition)&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Resource&lt;/th>
&lt;th style="text-align:right">Create&lt;/th>
&lt;th style="text-align:right">Delete&lt;/th>
&lt;th style="text-align:right">Update&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>AWS::ApiGateway::Account&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGateway::ApiKey&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGateway::BasePathMapping&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGateway::Deployment&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGateway::DomainName&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGateway::GatewayResponse&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGateway::Method&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGateway::Model&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGateway::RequestValidator&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGateway::Resource&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGateway::RestApi&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGateway::Stage&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGateway::UsagePlan&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGateway::UsagePlanKey&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::CDK::Metadata&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::CertificateManager::Certificate&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::CloudFormation::Stack&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::CloudWatch::Alarm&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::CloudWatch::CompositeAlarm&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::DynamoDB::Table&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::EC2::Instance&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::EC2::InternetGateway&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::EC2::NatGateway&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::EC2::Route&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::EC2::RouteTable&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::EC2::SecurityGroup&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::EC2::Subnet&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::EC2::SubnetRouteTableAssociation&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::EC2::VPC&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::EC2::VPCGatewayAttachment&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ECR::Repository&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Elasticsearch::Domain&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Events::Connection&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Events::EventBus&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Events::EventBusPolicy&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Events::Rule&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::IAM::Group&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::IAM::InstanceProfile&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::IAM::ManagedPolicy&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::IAM::Policy&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::IAM::Role&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::IAM::ServiceLinkedRole&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::IAM::User&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::KMS::Alias&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::KMS::Key&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Kinesis::Stream&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Kinesis::StreamConsumer&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::KinesisFirehose::DeliveryStream&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Lambda::EventInvokeConfig&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Lambda::EventSourceMapping&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Lambda::Function&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Lambda::Permission&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Lambda::Version&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Logs::LogGroup&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Logs::LogStream&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Logs::SubscriptionFilter&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::OpenSearchService::Domain&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Redshift::Cluster&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ResourceGroups::Group&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Route53::RecordSet&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::S3::Bucket&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::S3::BucketPolicy&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::SNS::Subscription&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::SNS::Topic&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::SNS::TopicPolicy&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::SQS::Queue&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::SQS::QueuePolicy&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::SSM::Parameter&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::SecretsManager::ResourcePolicy&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::SecretsManager::RotationSchedule&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::SecretsManager::Secret&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::SecretsManager::SecretTargetAttachment&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::StepFunctions::Activity&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::StepFunctions::StateMachine&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="resources-pro--enterprise-edition">Resources (Pro / Enterprise Edition)&lt;/h3>
&lt;p>The resources below are only available with a valid Pro license key.
When running the Community Edition, any unsupported resources in the stack are ignored and will not get deployed.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Resource&lt;/th>
&lt;th style="text-align:right">Create&lt;/th>
&lt;th style="text-align:right">Delete&lt;/th>
&lt;th style="text-align:right">Update&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>AWS::Amplify::App&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Amplify::Branch&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGateway::Authorizer&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGatewayV2::Api&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGatewayV2::Authorizer&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGatewayV2::Deployment&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGatewayV2::DomainName&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGatewayV2::Integration&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGatewayV2::IntegrationResponse&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGatewayV2::Route&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGatewayV2::RouteResponse&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGatewayV2::Stage&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGatewayV2::VpcLink&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::AppSync::ApiKey&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::AppSync::DataSource&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::AppSync::FunctionConfiguration&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::AppSync::GraphQLApi&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::AppSync::GraphQLSchema&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::AppSync::Resolver&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApplicationAutoScaling::ScalableTarget&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApplicationAutoScaling::ScalingPolicy&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Backup::BackupPlan&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::CloudFormation::CustomResource&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::CloudFront::CloudFrontOriginAccessIdentity&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::CloudFront::Distribution&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::CloudFront::Function&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::CloudFront::OriginRequestPolicy&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::CloudTrail::Trail&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Cognito::IdentityPool&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Cognito::IdentityPoolRoleAttachment&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Cognito::UserPool&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Cognito::UserPoolClient&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Cognito::UserPoolDomain&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Cognito::UserPoolGroup&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Cognito::UserPoolIdentityProvider&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::DocDB::DBCluster&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::DocDB::DBClusterParameterGroup&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::DocDB::DBInstance&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::DocDB::DBSubnetGroup&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::EC2::EIP&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::EC2::SecurityGroupEgress&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::EC2::SecurityGroupIngress&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::EC2::VPCEndpoint&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ECS::Cluster&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ECS::Service&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ECS::TaskDefinition&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ElastiCache::CacheCluster&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ElastiCache::ParameterGroup&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ElastiCache::ReplicationGroup&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ElastiCache::SecurityGroup&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ElastiCache::SubnetGroup&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ElasticLoadBalancingV2::Listener&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ElasticLoadBalancingV2::ListenerRule&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ElasticLoadBalancingV2::LoadBalancer&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ElasticLoadBalancingV2::TargetGroup&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Glue::Classifier&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Glue::Crawler&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Glue::Database&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Glue::Job&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Glue::Table&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Glue::Trigger&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Glue::Workflow&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::IoT::Certificate&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::IoT::Policy&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::IoT::Thing&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::IoT::TopicRule&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::IoTAnalytics::Channel&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::IoTAnalytics::Dataset&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::IoTAnalytics::Datastore&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::IoTAnalytics::Pipeline&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::KinesisAnalytics::Application&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::KinesisAnalytics::ApplicationOutput&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Lambda::Alias&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Lambda::LayerVersion&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Lambda::LayerVersionPermission&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::MSK::Cluster&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::QLDB::Ledger&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::RDS::DBCluster&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::RDS::DBClusterParameterGroup&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::RDS::DBInstance&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::RDS::DBParameterGroup&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::RDS::DBSubnetGroup&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Redshift::ClusterParameterGroup&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Redshift::ClusterSecurityGroup&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Redshift::ClusterSubnetGroup&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Route53::HostedZone&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::SES::ReceiptRule&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::SES::ReceiptRuleSet&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::SES::Template&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ServiceDiscovery::HttpNamespace&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ServiceDiscovery::PrivateDnsNamespace&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ServiceDiscovery::PublicDnsNamespace&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ServiceDiscovery::Service&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Timestream::Database&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Timestream::Table&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>User-Guide: CloudFront</title><link>/user-guide/aws/cloudfront/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/cloudfront/</guid><description>
&lt;p>LocalStack Pro supports creation of local CloudFront distributions, which allows you to transparently access your applications and file artifacts via CloudFront URLs like &lt;code>https://abc123.cloudfront.net&lt;/code>.&lt;/p>
&lt;p>For example, take the following simple example which creates an S3 bucket, puts a small text file &lt;code>hello.txt&lt;/code> to the bucket, and then creates a CloudFront distribution which makes the file accessible via a &lt;code>https://abc123.cloudfront.net/hello.txt&lt;/code> proxy URL (where &lt;code>abc123&lt;/code> is a placeholder for the real distribution ID):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 mb s3://abc123
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>echo &amp;#39;Hello World&amp;#39; &amp;gt; /tmp/hello.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 cp /tmp/hello.txt s3://abc123/hello.txt --acl public-read
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>domain=$(awslocal cloudfront create-distribution \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --origin-domain-name abc123.s3.amazonaws.com | jq -r &amp;#39;.Distribution.DomainName&amp;#39;)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl -k https://$domain/hello.txt&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
In order for CloudFront to be fully functional, your local DNS setup needs to be properly configured. See the section on &lt;a href="/user-guide/tools/transparent-endpoint-injection/dns-server/">configuring the local DNS server&lt;/a> for details.
&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
In the code example above, the last command (&lt;code>curl https://$domain/hello.txt&lt;/code>) may temporarily fail with a warning message &lt;code>Could not resolve host&lt;/code>. This is due to the fact that operating systems use different DNS caching strategies, and it may take some time for the CloudFront distribution&amp;rsquo;s DNS name (e.g., &lt;code>abc123.cloudfront.net&lt;/code>) to become available in the system. Usually after a few retries the command should work, though. Note that a similar behavior can also be observed in the real AWS - CloudFront DNS names can also take up to 10-15 minutes to propagate across the network.
&lt;/div>
&lt;h2 id="using-custom-urls">Using custom URLs&lt;/h2>
&lt;p>LocalStack Pro supports the use of an alternate domain name, also known as a CNAME or as a custom domain name, to access your applications and file artifacts instead of using the domain name that CloudFront generates for your distribution.&lt;/p>
&lt;p>To do so, the custom domain name must be set up in your local DNS server first. You can further add the desired domain name as an alias for the target distribution. To achieve this, you will need to provide the &lt;code>Aliases&lt;/code> field in the &lt;code>--distribution-config&lt;/code> option while creating or updating a distribution. The format of this structure is similar to what is used in &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/cloudfront/create-distribution.html#options">AWS CloudFront options&lt;/a>.&lt;/p>
&lt;p>The following example shows two domains being specified as &lt;code>Aliases&lt;/code> for a distribution.
Please consider that a full configuration would require other values relevant to the
distribution beside these shown in this example. They were omited here for brevity.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>--distribution-config {...&amp;#39;Aliases&amp;#39;:&amp;#39;{&amp;#39;Quantity&amp;#39;:2, &amp;#39;Items&amp;#39;: [&amp;#39;custom.domain.one&amp;#39;, &amp;#39;customDomain.two&amp;#39;]}&amp;#39;...}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
In order for CloudFront to be fully functional, your local DNS setup needs to be properly configured. See the section on &lt;a href="/user-guide/tools/transparent-endpoint-injection/dns-server/">configuring the local DNS server&lt;/a> for details.
&lt;/div></description></item><item><title>User-Guide: CloudWatch</title><link>/user-guide/aws/cloudwatch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/cloudwatch/</guid><description>
&lt;p>CloudWatch is a comprehensive monitoring and observability service that Amazon Web Services (AWS) provides. It allows you to collect and track metrics, collect and monitor log files, and set alarms. CloudWatch provides valuable insights into your AWS resources, applications, and services, enabling you to troubleshoot issues, optimize performance, and make informed decisions.&lt;/p>
&lt;p>LocalStack supports CloudWatch via its Community offering, allowing you to leverage CloudWatch functionalities on your local machine. With LocalStack, you can create and manage CloudWatch resources, such as custom metrics, alarms, and log groups, for local development and testing purposes. The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_cloudwatch/">API coverage page&lt;/a>, which provides information on the extent of CloudWatch&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to CloudWatch and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method and deploy your Lambda functions that will generate some logs. You can get the name for your Lambda Functions using the &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/API_ListFunctions.html">&lt;code>ListFunctions&lt;/code>&lt;/a> API.&lt;/p>
&lt;p>Fetch the Log Groups using the &lt;a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeLogGroups.html">&lt;code>DescribeLogGroups&lt;/code>&lt;/a> API. Run the following command to get the Log Group name:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal logs describe-log-groups&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The output should look similar to the following:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;logGroups&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;logGroupName&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;/aws/lambda/serverless-local-hello&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;creationTime&amp;#34;&lt;/span>: 1683009865348,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;metricFilterCount&amp;#34;&lt;/span>: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;arn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:logs:us-east-1:000000000000:log-group:/aws/lambda/serverless-local-hello:*&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;storedBytes&amp;#34;&lt;/span>: &lt;span style="color:#0000cf;font-weight:bold">262&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;logGroupName&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;/aws/lambda/serverless-local-hello2&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;creationTime&amp;#34;&lt;/span>: 1683009865420,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;metricFilterCount&amp;#34;&lt;/span>: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;arn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:logs:us-east-1:000000000000:log-group:/aws/lambda/serverless-local-hello2:*&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;storedBytes&amp;#34;&lt;/span>: &lt;span style="color:#0000cf;font-weight:bold">262&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Get the log streams for the Log Group using the &lt;a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeLogStreams.html">&lt;code>DescribeLogStreams&lt;/code>&lt;/a> API. Run the following command to get the Log Stream name:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal logs describe-log-streams \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --log-group-name /aws/lambda/serverless-local-hello&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The output should look similar to the following:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;logStreams&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;logStreamName&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;2023/05/02/[&lt;/span>&lt;span style="color:#000">$LATEST&lt;/span>&lt;span style="color:#4e9a06">]853a59d0767cfaf10d6b29a6790d8b03&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;creationTime&amp;#34;&lt;/span>: 1683009968958,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;firstEventTimestamp&amp;#34;&lt;/span>: 1683009968920,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;lastEventTimestamp&amp;#34;&lt;/span>: 1683009968945,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;lastIngestionTime&amp;#34;&lt;/span>: 1683009968979,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;uploadSequenceToken&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;1&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;arn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:logs:us-east-1:000000000000:log-group:/aws/lambda/serverless-local-hello:log-stream:2023/05/02/[&lt;/span>&lt;span style="color:#000">$LATEST&lt;/span>&lt;span style="color:#4e9a06">]853a59d0767cfaf10d6b29a6790d8b03&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;storedBytes&amp;#34;&lt;/span>: &lt;span style="color:#0000cf;font-weight:bold">262&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can now fetch the log events using the &lt;a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_GetLogEvents.html">&lt;code>GetLogEvents&lt;/code>&lt;/a> API. Run the following command to get the logs:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal logs get-log-events \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --log-group-name &amp;#39;/aws/lambda/serverless-local-hello&amp;#39; --log-stream-name &amp;#39;2023/05/02/[$LATEST]853a59d0767cfaf10d6b29a6790d8b03&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The output should look similar to the following:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;events&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;timestamp&amp;#34;&lt;/span>: 1683009968920,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;message&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;START RequestId: 71712856-9f41-4d22-827c-e3883f799f25 Version: &lt;/span>&lt;span style="color:#000">$LATEST&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ingestionTime&amp;#34;&lt;/span>: &lt;span style="color:#0000cf;font-weight:bold">1683009968979&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;timestamp&amp;#34;&lt;/span>: 1683009968932,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;message&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;END RequestId: 71712856-9f41-4d22-827c-e3883f799f25&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ingestionTime&amp;#34;&lt;/span>: &lt;span style="color:#0000cf;font-weight:bold">1683009968979&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;timestamp&amp;#34;&lt;/span>: 1683009968945,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;message&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;REPORT RequestId: 71712856-9f41-4d22-827c-e3883f799f25\tDuration: 1.27 ms\tBilled Duration: 2 ms\tMemory Size: 1024 MB\tMax Memory Used: 1024 MB\t&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ingestionTime&amp;#34;&lt;/span>: &lt;span style="color:#0000cf;font-weight:bold">1683009968979&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;nextForwardToken&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;f/00000000000000000000000000000000000000000000000000000002&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;nextBackwardToken&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;b/00000000000000000000000000000000000000000000000000000000&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can use &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/logs/filter-log-events.html">filters&lt;/a> or &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/logs/get-query-results.html">queries&lt;/a> with LocalStack Pro/Team to refine your results.&lt;/p>
&lt;h2 id="metric-alarms">Metric Alarms&lt;/h2>
&lt;p>Alarms in CloudWatch are crucial in monitoring specific data thresholds and automating actions based on those thresholds. To learn more about how alarms are evaluated in general, please refer to the &lt;a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarm-evaluation">AWS documentation&lt;/a>.&lt;/p>
&lt;p>In LocalStack, you can use metric-alarm evaluation, explicitly utilizing the statistic and comparison-operator functionalities. These features enable you to define and evaluate alarms based on various statistical calculations and comparison operators.&lt;/p>
&lt;h3 id="metric-alarm-examples">Metric Alarm Examples&lt;/h3>
&lt;p>Metric alarms in CloudWatch allow you to evaluate the state of a metric by analyzing its data points over a specified period. With metric alarms, you can create customized thresholds and define actions based on the metric&amp;rsquo;s behavior.&lt;/p>
&lt;p>To get started with creating an alarm in LocalStack using the &lt;code>awslocal&lt;/code> integration, use the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal cloudwatch put-metric-alarm \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --alarm-name my-alarm \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --metric-name Orders \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --namespace test \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --threshold 1 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --comparison-operator LessThanThreshold \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --evaluation-periods 1 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --period 30 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --statistic Minimum \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --treat-missing notBreaching&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>To monitor the status of the alarm, open a separate terminal and execute the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>watch &amp;#34;awslocal cloudwatch describe-alarms --alarm-names my-alarm | jq &amp;#39;.MetricAlarms[0].StateValue&amp;#39;&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Afterward, you can add some data that will cause a breach and set the &lt;code>metric-alarm&lt;/code> state to &lt;strong>ALARM&lt;/strong> using the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal cloudwatch put-metric-data \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --namespace test \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --metric-data &amp;#39;[{&amp;#34;MetricName&amp;#34;: &amp;#34;Orders&amp;#34;, &amp;#34;Value&amp;#34;: -1}]&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Within a few seconds, the alarm state should change to &lt;strong>ALARM&lt;/strong>, and eventually, it will go back to &lt;strong>OK&lt;/strong> as we configured it to treat missing data points as &lt;code>not breaching&lt;/code>. This allows you to observe how the alarm behaves in response to the provided data.&lt;/p>
&lt;h4 id="metric-alarm-with-action">Metric Alarm with Action&lt;/h4>
&lt;p>When the state of an alarm changes, actions can be triggered accordingly. In LocalStack, you can configure &lt;code>alarm-actions&lt;/code>, &lt;code>ok-actions&lt;/code>, and &lt;code>insufficient-data-actions&lt;/code> to specify the actions to be taken. Currently, only SNS Topics are supported as the target for these actions, and it&amp;rsquo;s important to note that the topic must be created beforehand.&lt;/p>
&lt;p>Here&amp;rsquo;s an example demonstrating how to set up an alarm that sends a message to the specified topic when entering the &lt;strong>ALARM&lt;/strong> state. Make sure to replace &lt;code>&amp;lt;topic-arn&amp;gt;&lt;/code> with the valid ARN of an existing SNS topic.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal cloudwatch put-metric-alarm \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --alarm-name my-alarm \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --metric-name Orders \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --namespace test \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --threshold 50 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --comparison-operator GreaterThanThreshold \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --evaluation-periods 1 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --period 300 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --statistic Maximum \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --treat-missing notBreaching \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --alarm-actions &amp;lt;topic-arn&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>By executing this command, you&amp;rsquo;ll create an alarm named &lt;code>my-alarm&lt;/code> that monitors the &lt;code>Orders&lt;/code> metric in the &lt;code>test&lt;/code> namespace. If the metric value exceeds the threshold of 50 (using the &lt;code>GreaterThanThreshold&lt;/code> operator) during a single evaluation period of 300 seconds, the alarm will trigger the specified action on the provided SNS topic.&lt;/p>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Warning&lt;/h4>
&lt;p>Please be aware of the following known limitations in LocalStack:&lt;/p>
&lt;ul>
&lt;li>Anomaly detection and extended statistics are not supported.&lt;/li>
&lt;li>The &lt;code>unit&lt;/code> values specified in the alarm are ignored.&lt;/li>
&lt;li>Composite alarms are not evaluated.&lt;/li>
&lt;li>Metric streams are not supported.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;h2 id="resource-browser">Resource Browser&lt;/h2>
&lt;p>The LocalStack Web Application provides a Resource Browser for managing CloudWatch logs. You can access the Resource Browser by opening the LocalStack Web Application in your browser and navigating to the Resources section, then clicking on &lt;a href="https://app.localstack.cloud/resources/cloudwatch/groups">&lt;strong>CloudWatch Logs&lt;/strong>&lt;/a> and &lt;a href="https://app.localstack.cloud/resources/monitoring">&lt;strong>CloudWatch Metrics&lt;/strong>&lt;/a> under the &lt;strong>Management/Governance&lt;/strong> section.&lt;/p>
&lt;p>The Resource Browser allows you to perform the following actions:&lt;/p>
&lt;img src="cloudwatch-log-groups-resource-browser.png" alt="CloudWatch Logs Resource Browser" title="CloudWatch Logs Resource Browser" width="900" />
&lt;img src="cloudwatch-metrics-resource-browser.png" alt="CloudWatch Metrics Resource Browser" title="CloudWatch Metrics Resource Browser" width="900" />
&lt;ul>
&lt;li>&lt;strong>Create Log Group&lt;/strong>: Create a new log group by specifying the &lt;code>Log Group Name&lt;/code>, &lt;code>KMS Key ID&lt;/code>, and &lt;code>Tags&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Put metric&lt;/strong>: Create a new metric by specifying the &lt;code>Namespace&lt;/code> and &lt;code>Metric Data&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Put Alarm&lt;/strong>: Create a new alarm by specifying the &lt;code>Alarm Name&lt;/code>, &lt;code>Alarm Description&lt;/code>, &lt;code>Actions Enabled&lt;/code>, &lt;code>Metric Name&lt;/code>, &lt;code>Namespace&lt;/code>, &lt;code>Statistic&lt;/code>, &lt;code>Comparison Operator&lt;/code>, &lt;code>Threshold&lt;/code>, &lt;code>Evaluation Periods&lt;/code>, &lt;code>Period&lt;/code>, &lt;code>Unit&lt;/code>, &lt;code>Treat Missing Data&lt;/code>, &lt;code>Tags&lt;/code>, and &lt;code>Alarm Actions&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Check the Resources&lt;/strong>: View and manage existing log groups, metrics, and alarms and perform actions such as &lt;code>Delete&lt;/code>, &lt;code>View&lt;/code>, and &lt;code>Edit&lt;/code>.&lt;/li>
&lt;/ul>
&lt;h2 id="examples">Examples&lt;/h2>
&lt;p>The following code snippets and sample applications provide practical examples of how to use CloudWatch in LocalStack for various use cases:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/localstack/localstack-pro-samples/tree/master/cloudwatch-metrics-aws">Creating Cloudwatch metric alarms&lt;/a> to demonstrate a simple example for creating CloudWatch metric alarm based on the metrics of a failing Lambda function.&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/event-driven-architecture-with-amazon-sns-fifo">Event-driven architecture with Amazon SNS FIFO, DynamoDB, Lambda, and S3&lt;/a> to deploy a recruiting agency application with a job listings website and view the CloudWatch logs.&lt;/li>
&lt;/ul></description></item><item><title>User-Guide: CodeCommit</title><link>/user-guide/aws/codecommit/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/codecommit/</guid><description>
&lt;p>LocalStack Pro contains basic support for CodeCommit code repositories. The CodeCommit API can be used to create Git repositories, clone these repos to local folders, push commits with changes, etc.&lt;/p>
&lt;p>A simple example has been added in &lt;a href="https://github.com/localstack/localstack-pro-samples/tree/master/codecommit-git-repo">this Github repository&lt;/a>. The sample creates an Git repository via the AWS CodeCommit API locally, commits and pushes a test file to the repository, and then checks out the file in a fresh clone of the repository.&lt;/p>
&lt;p>Please note that CodeCommit is a fairly large API and currently not all methods are supported yet, but we are actively extending the implementation on an ongoing basis.&lt;/p></description></item><item><title>User-Guide: Cognito</title><link>/user-guide/aws/cognito/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/cognito/</guid><description>
&lt;p>The &lt;a href="https://aws.amazon.com/cognito/">AWS Cognito&lt;/a> service enables you to manage authentication and access control for AWS-backed apps and resources.&lt;/p>
&lt;p>LocalStack Pro contains basic support for authentication via Cognito. You can create Cognito user pools, sign up and confirm users, set up Lambda triggers, and use the &lt;code>COGNITO_USER_POOLS&lt;/code> authorizer integration with API Gateway.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
By default, local Cognito does not send actual email messages.
To enable this feature, you will require an email address and the corresponding SMTP settings.
Please refer to the &lt;a href="/references/configuration/#emails">Configuration&lt;/a> guide for instructions on how to configure the connection parameters of your SMTP server.
&lt;/div>
&lt;h2 id="user-pools-and-basic-authentication-flows">User pools and basic authentication flows&lt;/h2>
&lt;p>The following subsections illustrate how you can create a user pool and client, and then sign up and authenticate a new user in the pool.&lt;/p>
&lt;h3 id="creating-a-user-pool">Creating a User Pool&lt;/h3>
&lt;p>Just as with AWS, you can create a user pool in LocalStack with the following command:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal cognito-idp create-user-pool --pool-name test&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;p>The response should look similar to this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&amp;#34;UserPool&amp;#34;&lt;/span>&lt;span style="color:#a40000">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Id&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;us-east-1_fd924693e9b04f549f989283123a29c2&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Name&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;test&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Policies&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;PasswordPolicy&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;MinimumLength&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">8&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;RequireUppercase&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;RequireLowercase&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;RequireNumbers&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;RequireSymbols&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;TemporaryPasswordValidityDays&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">7&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;LastModifiedDate&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;2021-10-06T11:57:21.883Z&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;CreationDate&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;2021-10-06T11:57:21.883Z&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;SchemaAttributes&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;VerificationMessageTemplate&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;DefaultEmailOption&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;CONFIRM_WITH_CODE&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;EmailConfiguration&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;EmailSendingAccount&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;COGNITO_DEFAULT&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;AdminCreateUserConfig&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;AllowAdminCreateUserOnly&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Arn&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;arn:aws:cognito-idp:us-east-1:000000000000:userpool/us-east-1_fd924693e9b04f549f989283123a29c2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>We will need the user pool&amp;rsquo;s &lt;code>id&lt;/code> for further operations, so save it in a &lt;code>pool_id&lt;/code> variable:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>pool_id=&amp;lt;your-pool-id&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;p>Alternatively, you can also use a JSON processor like &lt;a href="https://stedolan.github.io/jq/">&lt;code>jq&lt;/code>&lt;/a> to directly extract the necessary information when creating a pool in the first place:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>pool_id=$(awslocal cognito-idp create-user-pool --pool-name test | jq -rc &amp;#34;.UserPool.Id&amp;#34;)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="adding-a-client">Adding a Client&lt;/h3>
&lt;p>Now we add a client to our newly created pool. Again, we will also need the ID of the created client for the next step. The complete command for client creation with subsequent ID extraction is therefore:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>client_id=$(awslocal cognito-idp create-user-pool-client --user-pool-id $pool_id --client-name test-client | jq -rc &amp;#34;.UserPoolClient.ClientId&amp;#34;)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="using-predefined-ids-on-pool-creation">Using predefined IDs on pool creation&lt;/h3>
&lt;p>It is possible to use a predefined ID when creating Cognito user or identity pools, by setting the tag &lt;code>_custom_id_&lt;/code>. This can
be helpful when testing auth flows with LocalStack frequently being restarted and resourced re-created.
For example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal cognito-idp create-user-pool --pool-name p1 --user-pool-tags &amp;#34;_custom_id_=myid123&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;UserPool&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Id&amp;#34;: &amp;#34;myid123&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Name&amp;#34;: &amp;#34;p1&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="signing-up-and-confirming-a-user">Signing up and confirming a user&lt;/h3>
&lt;p>With these steps already taken, we can now sign up a user:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal cognito-idp sign-up --client-id $client_id --username example_user --password 12345678Aa! --user-attributes Name=email,Value=&amp;lt;your.email@address.com&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;p>The response should look similar to this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;UserConfirmed&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;UserSub&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;5fdbe1d5-7901-4fee-9d1d-518103789c94&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After the user is created, a confirmation code is generated. The code is printed in the LocalStack container logs (see below), and can optionally also be sent via email if you have &lt;a href="#smtp-integration">SMTP configured&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span style="display:flex;">&lt;span>INFO:localstack_ext.services.cognito.cognito_idp_api: Confirmation code for Cognito user example_user: 125796
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DEBUG:localstack_ext.bootstrap.email_utils: Sending confirmation code via email to &amp;#34;your.email@address.com&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>We can confirm the user with the activation code, using the following command:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal cognito-idp confirm-sign-up --client-id $client_id --username example_user --confirmation-code &amp;lt;received-confirmation-code&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;p>As the above command doesn&amp;rsquo;t return an answer, we check the pool to see that the request was successful:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;display:grid;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal cognito-idp list-users --user-pool-id $pool_id
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Users&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Username&amp;#34;: &amp;#34;example_user&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Attributes&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Name&amp;#34;: &amp;#34;email&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Value&amp;#34;: &amp;#34;your.email@address.com&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Name&amp;#34;: &amp;#34;sub&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Value&amp;#34;: &amp;#34;5fdbe1d5-7901-4fee-9d1d-518103789c94&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Name&amp;#34;: &amp;#34;cognito:username&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Value&amp;#34;: &amp;#34;example_user&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Enabled&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#dfdfdf">&lt;span> &amp;#34;UserStatus&amp;#34;: &amp;#34;CONFIRMED&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;h3 id="jwt-token-issuer-and-json-web-key-sets-jwks-endpoints">JWT token issuer and JSON Web Key Sets (JWKS) endpoints&lt;/h3>
&lt;p>The JWT tokens created by Cognito contain an issuer (&lt;code>iss&lt;/code>) attribute that represents the endpoint of the corresponding user pool.
The issuer endpoint generally follows this pattern, where &lt;code>&amp;lt;pool_id&amp;gt;&lt;/code> is the ID of the Cognito user pool:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span style="display:flex;">&lt;span>http://localhost:4566/&amp;lt;pool_id&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Under certain circumstances (depending on your configurations), there may be slight nuances of the issuer URL, like:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span style="display:flex;">&lt;span>https://cognito-idp.localhost.localstack.cloud/&amp;lt;pool_id&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can access the JSON Web Key Sets (JWKS) configuration under the following standardized well-known URL for each user pool:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl &amp;#39;http://localhost:4566/&amp;lt;pool_id&amp;gt;/.well-known/jwks.json&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{&amp;#34;keys&amp;#34;: [{&amp;#34;kty&amp;#34;: &amp;#34;RSA&amp;#34;, &amp;#34;alg&amp;#34;: &amp;#34;RS256&amp;#34;, &amp;#34;use&amp;#34;: &amp;#34;sig&amp;#34;, &amp;#34;kid&amp;#34;: &amp;#34;test-key&amp;#34;, &amp;#34;n&amp;#34;: &amp;#34;k6lrbEH...&amp;#34;]}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;p>Additionally, the global region-specific public keys for Cognito Identity Pools can be retrieved under this endpoint:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl http://localhost:4566/.well-known/jwks_uri
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{&amp;#34;keys&amp;#34;: [{&amp;#34;kty&amp;#34;: &amp;#34;RSA&amp;#34;, &amp;#34;alg&amp;#34;: &amp;#34;RS512&amp;#34;, &amp;#34;use&amp;#34;: &amp;#34;sig&amp;#34;, &amp;#34;kid&amp;#34;: &amp;#34;ap-northeast-11&amp;#34;, &amp;#34;n&amp;#34;: &amp;#34;AI7mc1assO5...&amp;#34;]}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;h2 id="cognito-lambda-triggers">Cognito Lambda Triggers&lt;/h2>
&lt;p>Cognito provides a number of lifecycle hooks in the form of Cognito Lambda triggers. These triggers can be used to react to various lifecycle events and customize the behavior of user signup, confirmation, migration, etc.&lt;/p>
&lt;p>For example, to define a &lt;em>user migration&lt;/em> Lambda trigger, we can first create a Lambda function (say, named &lt;code>&amp;quot;f1&amp;quot;&lt;/code>) capable of performing the migration, and then define the corresponding &lt;code>--lambda-config&lt;/code> on the user pool creation:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal cognito-idp create-user-pool --pool-name test2 --lambda-config &amp;#39;{&amp;#34;UserMigration&amp;#34;:&amp;#34;arn:aws:lambda:us-east-1:000000000000:function:f1&amp;#34;}&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Upon authentication of a non-registered user, Cognito will then automatically call the migration Lambda function and finally add the migrated user to the pool.&lt;/p>
&lt;p>More details on Cognito Lambda triggers can be found in the &lt;a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html">AWS documentation&lt;/a>.&lt;/p>
&lt;h2 id="oauth-flows-via-cognito-login-form">OAuth Flows via Cognito Login Form&lt;/h2>
&lt;p>You can also access the local &lt;a href="https://docs.aws.amazon.com/cognito/latest/developerguide/login-endpoint.html">Cognito login form&lt;/a> by entering the following URL in your browser:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span style="display:flex;">&lt;span>https://localhost.localstack.cloud/_aws/cognito-idp/login?response_type=code&amp;amp;client_id=&amp;lt;client_id&amp;gt;&amp;amp;redirect_uri=&amp;lt;redirect_uri&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Please replace &lt;code>&amp;lt;client_id&amp;gt;&lt;/code> with the ID of an existing user pool client ID (in this case, &lt;code>example_user&lt;/code>), and &lt;code>&amp;lt;redirect_uri&amp;gt;&lt;/code> with the redirect URI of your application (e.g., &lt;code>http://example.com&lt;/code>).&lt;/p>
&lt;p>The login form should look similar to the screenshot below:
&lt;figure>
&lt;img src="/user-guide/aws/cognito/cognitoLogin.png" width="320"/>
&lt;/figure>
&lt;/p>
&lt;p>After successful login, the page will redirect to the specified &lt;code>&amp;lt;redirect_uri&amp;gt;&lt;/code>, with a path parameter &lt;code>?code=&amp;lt;code&amp;gt;&lt;/code> appended, e.g., &lt;code>http://example.com?code=test123&lt;/code>.
Obtain a token by submitting that code with &lt;code>grant_type=authorization_code&lt;/code> the LocalStack&amp;rsquo;s implementation of the Cognito OAuth2 TOKEN Endpoint documented &lt;a href="https://docs.aws.amazon.com/cognito/latest/developerguide/token-endpoint.html">here&lt;/a>.
Note that the value of the &lt;code>redirect_uri&lt;/code> parameter must match the value provided during login.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>% curl &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --data-urlencode &lt;span style="color:#4e9a06">&amp;#39;grant_type=authorization_code&amp;#39;&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --data-urlencode &lt;span style="color:#4e9a06">&amp;#39;redirect_uri=http://example.com&amp;#39;&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --data-urlencode &lt;span style="color:#4e9a06">&amp;#34;client_id=&lt;/span>&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">client_id&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --data-urlencode &lt;span style="color:#4e9a06">&amp;#39;code=test123&amp;#39;&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;http://localhost:4566/_aws/cognito-idp/oauth2/token&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;access_token&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;eyJ0eXAi…lKaHx44Q&amp;#34;&lt;/span>, &lt;span style="color:#4e9a06">&amp;#34;expires_in&amp;#34;&lt;/span>: 86400, &lt;span style="color:#4e9a06">&amp;#34;token_type&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;Bearer&amp;#34;&lt;/span>, &lt;span style="color:#4e9a06">&amp;#34;refresh_token&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;e3f08304&amp;#34;&lt;/span>, &lt;span style="color:#4e9a06">&amp;#34;id_token&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;eyJ0eXAi…ADTXv5mA&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="serverless-and-cognito">Serverless and Cognito&lt;/h2>
&lt;p>You can also use Cognito and LocalStack in conjunction with the &lt;a href="https://www.serverless.com/">Serverless framework&lt;/a>.&lt;/p>
&lt;p>For example, take this snippet of a &lt;code>serverless.yml&lt;/code> configuration:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">service&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">test&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">plugins&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">serverless-deployment-bucket&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">serverless-pseudo-parameters&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">serverless-localstack&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">custom&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">localstack&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">stages&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#000">local]&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">functions&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">http_request&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">handler&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">http.request&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">events&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">http&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">path&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">v1/request&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">authorizer&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">arn&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">arn:aws:cognito-idp:us-east-1:#{AWS::AccountId}:userpool/ExampleUserPool&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">resources&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">Resources&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">UserPool&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">Type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">AWS::Cognito::UserPool&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">Properties&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">...&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The serverless configuration can then be deployed using &lt;code>serverless deploy --stage local&lt;/code>.
The example contains a Lambda function &lt;code>http_request&lt;/code> which is connected to an API Gateway endpoint.
Once deployed, the &lt;code>v1/request&lt;/code> API Gateway endpoint will be secured against the Cognito user pool &amp;ldquo;&lt;code>ExampleUserPool&lt;/code>&amp;rdquo;.
You can then register users against that local pool, using the same API calls as for AWS.&lt;/p>
&lt;p>In order to make requests against the secured API Gateway endpoint, use the local Cognito API to retrieve identity credentials which can be sent along as &lt;code>Authentication&lt;/code> HTTP headers (where &lt;code>test-1234567&lt;/code> is the name of the access key ID generated by Cognito):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span style="display:flex;">&lt;span>Authentication: AWS4-HMAC-SHA256 Credential=test-1234567/20190821/us-east-1/cognito-idp/aws4_request ...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="further-reading">Further reading&lt;/h2>
&lt;p>For a more detailed example, please check out our &lt;a href="https://github.com/localstack/localstack-pro-samples/tree/master/cognito-jwt">sample repository&lt;/a>.&lt;/p></description></item><item><title>User-Guide: DocumentDB (DocDB)</title><link>/user-guide/aws/docdb/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/docdb/</guid><description>
&lt;p>LocalStack Pro supports a basic version of &lt;a href="https://aws.amazon.com/documentdb/">Amazon DocumentDB&lt;/a> for testing.
LocalStack starts a MongoDB server, to handle DocumentDB storage, in a separate Docker container and adds port-mapping so that it
can be accessed from localhost. When defining a port to access the container, an available port on the host machine will be selected, that means there
is no pre-defined port range.
By default, a master user named &lt;code>test&lt;/code> will be instantiated without a password.&lt;/p>
&lt;div class="alert alert-success" role="alert">
&lt;h4 class="alert-heading">Information&lt;/h4>
MongoDB is a popular open-source, document-oriented NoSQL database that provides high scalability, flexibility, and performance for modern application development.
It belongs to the family of
non-relational databases, also known as NoSQL databases.
&lt;/div>
&lt;p>DocumentDB currently uses the default configuration of the
latest &lt;a href="https://hub.docker.com/_/mongo">MongoDB Docker image&lt;/a>. It automatically creates a database
named &lt;code>test&lt;/code> upon cluster creation.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Because LocalStack utilizes a MongoDB container to provide DocumentDB storage, LocalStack may not
have exact feature parity with Amazon DocumentDB. The database engine may support additional
features that
Amazon DocumentDB does not and vice versa.
&lt;/div>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>To create a new DocumentDB cluster we use the &lt;code>create-db-cluster&lt;/code> command as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal docdb create-db-cluster --db-cluster-identifier test-docdb-cluster --engine docdb&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>{&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;DBCluster&amp;#34;: &lt;/span>{&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;DBClusterIdentifier&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;test-docdb-cluster&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;DBClusterParameterGroup&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;default.docdb&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;Status&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;available&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;Endpoint&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;localhost:39045&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;MultiAZ&amp;#34;: &lt;/span>&lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;Engine&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;docdb&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;Port&amp;#34;: &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">39045&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;MasterUsername&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;test&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;DBClusterMembers&amp;#34;: &lt;/span>&lt;span style="color:#000;font-weight:bold">[],&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;VpcSecurityGroups&amp;#34;: &lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>{&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;VpcSecurityGroupId&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;sg-a30edea1f7da6ff90&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;Status&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;active&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>}&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">],&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;StorageEncrypted&amp;#34;: &lt;/span>&lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;DBClusterArn&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;arn:aws:rds:us-east-1:000000000000:cluster:test-docdb-cluster&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>}&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>}&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If we break down the previous command, we can identify:&lt;/p>
&lt;ul>
&lt;li>&lt;code>docdb&lt;/code>: The command related to Amazon DocumentDB for the &lt;code>AWS CLI&lt;/code>.&lt;/li>
&lt;li>&lt;code>create-db-cluster&lt;/code>: The command to create an Amazon DocumentDB cluster.&lt;/li>
&lt;li>&lt;code>--db-cluster-identifier test-docdb-cluster&lt;/code>: Specifies the unique identifier for the DocumentDB
cluster. In this case, it is set to &lt;code>test-docdb-cluster&lt;/code>. You can customize this identifier to a
name of your choice.&lt;/li>
&lt;li>&lt;code>--engine docdb&lt;/code>: Specifies the database engine. Here, it is set to &lt;code>docdb&lt;/code>, indicating the use of
Amazon DocumentDB.&lt;/li>
&lt;/ul>
&lt;p>Notice in the &lt;code>DBClusterMembers&lt;/code> field of the cluster description that there are no other databases
created.
To create a new database, we can use the &lt;code>create-db-instance&lt;/code> command, like in this example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal docdb create-db-instance --db-instance-identifier test-company
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>--db-instance-class db.r5.large --engine docdb --db-cluster-identifier test-docdb-cluster&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>{&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;DBInstance&amp;#34;: &lt;/span>{&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;DBInstanceIdentifier&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;test-docdb-instance&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;DBInstanceClass&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;db.r5.large&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;Engine&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;docdb&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;DBInstanceStatus&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;creating&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;Endpoint&amp;#34;: &lt;/span>{&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;Address&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;localhost&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;Port&amp;#34;: &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">50761&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>}&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;InstanceCreateTime&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;2022-10-28T04:27:35.917000+00:00&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;PreferredBackupWindow&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;03:50-04:20&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;BackupRetentionPeriod&amp;#34;: &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;VpcSecurityGroups&amp;#34;: &lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;AvailabilityZone&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;us-east-1a&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;PreferredMaintenanceWindow&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;wed:06:38-wed:07:08&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;EngineVersion&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;12.34&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;AutoMinorVersionUpgrade&amp;#34;: &lt;/span>&lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;PubliclyAccessible&amp;#34;: &lt;/span>&lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;StatusInfos&amp;#34;: &lt;/span>&lt;span style="color:#000;font-weight:bold">[],&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;DBClusterIdentifier&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;test-docdb-cluster&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;StorageEncrypted&amp;#34;: &lt;/span>&lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;DbiResourceId&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;db-M5ENSHXFPU6XHZ4G4ZEI5QIO2U&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;CopyTagsToSnapshot&amp;#34;: &lt;/span>&lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;DBInstanceArn&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;arn:aws:rds:us-east-1:000000000000:db:test-docdb-instance&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;EnabledCloudwatchLogsExports&amp;#34;: &lt;/span>&lt;span style="color:#000;font-weight:bold">[]&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>}&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>}&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Some noticeable fields:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>--db-instance-identifier test-company&lt;/code>: Represents the unique identifier of the newly created
database.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>--db-instance-class db.r5.large&lt;/code>: Is the type or class of the Amazon DocumentDB
instance. It determines the compute and memory capacity allocated to the instance. &lt;code>db.r5.large&lt;/code> refers to a specific instance type in
the R5 family. Although the flag is required for database creation, LocalStack will only mock the &lt;code>DBInstanceClass&lt;/code> attribute.&lt;/p>
&lt;p>You can find out more about instance classes in
the &lt;a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html">AWS documentation&lt;/a>
.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>To obtain detailed information about the cluster, we use the &lt;code>describe-db-cluster&lt;/code> command:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal docdb describe-db-clusters --db-cluster-identifier test-docdb-cluster&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>{&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;DBClusters&amp;#34;: &lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>{&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;DBClusterIdentifier&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;test-docdb-cluster&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;DBClusterParameterGroup&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;default.docdb&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;Status&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;available&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;Endpoint&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;localhost:39045&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;MultiAZ&amp;#34;: &lt;/span>&lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;Engine&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;docdb&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;Port&amp;#34;: &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">39045&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;MasterUsername&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;test&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;DBClusterMembers&amp;#34;: &lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>{&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;DBInstanceIdentifier&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;test-company&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;IsClusterWriter&amp;#34;: &lt;/span>&lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;DBClusterParameterGroupStatus&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;in-sync&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;PromotionTier&amp;#34;: &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>}&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">],&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;VpcSecurityGroups&amp;#34;: &lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>{&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;VpcSecurityGroupId&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;sg-a30edea1f7da6ff90&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;Status&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;active&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>}&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">],&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;StorageEncrypted&amp;#34;: &lt;/span>&lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;DBClusterArn&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;arn:aws:rds:us-east-1:000000000000:cluster:test-docdb-cluster&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>}&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>}&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Interacting with the databases is done using &lt;code>mongosh&lt;/code>, which is an official command-line shell and
interactive MongoDB shell provided by MongoDB.
It is designed to provide a modern and enhanced user experience for interacting with MongoDB
databases.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>mongosh mongodb://localhost:39045
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Current Mongosh Log ID: 64a70b795697bcd4865e1b9a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Connecting to: mongodb://localhost:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>39045/?directConnection=true&amp;amp;serverSelectionTimeoutMS=2000&amp;amp;appName=mongosh+1.10.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Using MongoDB: 6.0.7
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Using Mongosh: 1.10.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>For mongosh info see: https://docs.mongodb.com/mongodb-shell/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>test&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>This command will default to accessing the &lt;code>test&lt;/code> database that was created with the cluster. Notice the port, &lt;code>39045&lt;/code>,
which is the cluster port that appears in the aforementioned description.&lt;/p>
&lt;p>To work with a specific database, the command is:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>mongosh mongodb://localhost:39045/test-company
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Current Mongosh Log ID: 64a71916fae7fdeeb8b43a73
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Connecting to: mongodb://localhost:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>39045/test-company?directConnection=true&amp;amp;serverSelectionTimeoutMS=2000&amp;amp;appName=mongosh+1.10.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Using MongoDB: 6.0.7
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Using Mongosh: 1.10.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>For mongosh info see: https://docs.mongodb.com/mongodb-shell/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>test-company&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>From here on we can manipulate collections
using &lt;a href="https://www.mongodb.com/docs/manual/reference/method/">the JavaScript methods provided&lt;/a>
by &lt;code>mongosh&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>test-company&amp;gt; db.createCollection(&amp;#34;employees&amp;#34;)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{ ok: 1 }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>test-company&amp;gt; db.createCollection(&amp;#34;customers&amp;#34;)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{ ok: 1 }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>test-company&amp;gt; show collections
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>customers
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>employees
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>test-company&amp;gt; exit&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>For more information on how to use MongoDB with &lt;code>mongosh&lt;/code> please refer to
the &lt;a href="https://www.mongodb.com/docs/">MongoDB documentation&lt;/a>.&lt;/p></description></item><item><title>User-Guide: DynamoDB</title><link>/user-guide/aws/dynamodb/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/dynamodb/</guid><description>
&lt;p>DynamoDB on LocalStack is powered by &lt;a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DynamoDBLocal.html">DynamoDB Local&lt;/a>.&lt;/p>
&lt;h2 id="global-tables">Global tables&lt;/h2>
&lt;p>LocalStack has support for global tables (version 2019).
These are tables belonging to the same account and replicated across different regions.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
LocalStack does not support legacy global tables (version 2017).
Operations like &lt;code>CreateGlobalTable&lt;/code>, &lt;code>UpdateGlobalTable&lt;/code>, &lt;code>DescribeGlobalTable&lt;/code> etc. will not emulate global replications.
&lt;/div>
&lt;p>Following example illustrates the use of global tables:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix"># &lt;/span>Create a table
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal dynamodb create-table \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --table-name global01 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --key-schema AttributeName=id,KeyType=HASH \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --attribute-definitions AttributeName=id,AttributeType=S \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --billing-mode PAY_PER_REQUEST \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --region ap-south-1&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix"># &lt;/span>Create replicas
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal dynamodb update-table \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --table-name global01 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --replica-updates &amp;#39;[{&amp;#34;Create&amp;#34;: {&amp;#34;RegionName&amp;#34;: &amp;#34;eu-central-1&amp;#34;}}, {&amp;#34;Create&amp;#34;: {&amp;#34;RegionName&amp;#34;: &amp;#34;us-west-1&amp;#34;}}]&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --region ap-south-1&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix"># &lt;/span>Table can be operated on in all replicated regions
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal dynamodb list-tables --region eu-central-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;TableNames&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;global01&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal dynamodb put-item --table-name global01 --item &amp;#39;{&amp;#34;id&amp;#34;:{&amp;#34;S&amp;#34;:&amp;#34;foo&amp;#34;}}&amp;#39; --region eu-central-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal dynamodb describe-table --table-name global01 --query &amp;#39;Table.ItemCount&amp;#39; --region ap-south-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix"># &lt;/span>Get all replicas
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal dynamodb describe-table --table-name global01 --query &amp;#39;Table.Replicas&amp;#39; --region us-west-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;RegionName&amp;#34;: &amp;#34;ap-south-1&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ReplicaStatus&amp;#34;: &amp;#34;ACTIVE&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;RegionName&amp;#34;: &amp;#34;eu-central-1&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ReplicaStatus&amp;#34;: &amp;#34;ACTIVE&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>]&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Warning&lt;/h4>
It is currently not possible to remove the original table region from the replication set while keeping the replicas.
Deleting the original table will also remove all the replicas.
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Warning&lt;/h4>
DynamoDB Streams are only supported for original tables and not for replicated tables.
Please see &lt;a href="https://github.com/localstack/localstack/issues/7405">https://github.com/localstack/localstack/issues/7405&lt;/a> for more information.
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Warning&lt;/h4>
Batch operations (&lt;code>BatchWriteItem&lt;/code>, &lt;code>BatchGetItem&lt;/code>, etc.) are currently not supported on replicated tables.
&lt;/div>
&lt;!--
## SSE specifications
## Kinesis streams
--></description></item><item><title>User-Guide: Elastic Compute Cloud (EC2)</title><link>/user-guide/aws/elastic-compute-cloud/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/elastic-compute-cloud/</guid><description>
&lt;p>LocalStack Pro supports the Docker backend for running instances.&lt;/p>
&lt;p>The Docker backend uses the &lt;a href="https://docs.docker.com/engine/">Docker Engine&lt;/a> to emulate EC2 instances.
All limitations that apply to containers apply to EC2 instances backed by the Docker manager, including root access and networking.
Access to the Docker socket is required which can be made available to LocalStack by mounting the socket file during launch.&lt;/p>
&lt;p>Instances have the Docker socket (&lt;code>/var/run/docker.sock&lt;/code>) mounted inside them, making Docker-in-Docker use cases possible.&lt;/p>
&lt;h2 id="base-images">Base Images&lt;/h2>
&lt;p>LocalStack uses a naming scheme to recognise and manage the containers and images associated with it.
Containers are named &lt;code>localstack-ec2.&amp;lt;InstanceId&amp;gt;&lt;/code>, while images are tagged &lt;code>localstack-ec2/&amp;lt;AmiName&amp;gt;:&amp;lt;AmiId&amp;gt;&lt;/code>.&lt;/p>
&lt;p>The Docker backend treats Docker images with the above naming scheme as AMIs.
For example, the following command can be used to associate the Ubuntu Focal image as &lt;code>ami-000001&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>docker tag ubuntu:focal localstack-ec2/ubuntu-focal-ami:ami-000001&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>These Docker-backed AMIs have the resource tag &lt;code>ec2_vm_manager:docker&lt;/code> and can be listed with the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal ec2 describe-images --filters Name=tag:ec2_vm_manager,Values=docker&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>All other AMIs are &amp;lsquo;mocked&amp;rsquo; and are based off the community edition of LocalStack.
Attempting to launch Dockerised instances with these AMIs will return &lt;code>InvalidAMIID.NotFound&lt;/code> error.&lt;/p>
&lt;h2 id="networking">Networking&lt;/h2>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
LocalStack daemon is deprecated and will be removed in an upcoming major release.
&lt;/div>
&lt;p>LocalStack supports assignment of unique private IP addresses for Dockerised instances.
To leverage this feature, it is necessary to run the LocalStack daemon process on the host which takes care of creating and managing networking on the host system.&lt;/p>
&lt;p>Make sure this command is available by first logging in using &lt;code>localstack login&lt;/code> with your Pro credentials (the same ones used for &lt;a href="https://app.localstack.cloud">https://app.localstack.cloud&lt;/a>).
To verify this, use &lt;code>localstack --help&lt;/code> and check if &lt;code>daemons&lt;/code> is part of the command list.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>pip install localstack[runtime]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>export LOCALSTACK_API_KEY=...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack daemons start&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The address for SSH access to the instance is printed in the logs when the instance is initialised.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span style="display:flex;">&lt;span>2022-03-21T14:46:49.540 INFO Instance i-1d6327abf04e31be6 will be accessible via SSH at: 127.0.0.1:55705, 172.17.0.4:22
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The LocalStack daemon is supported on Linux and MacOS.&lt;/p>
&lt;p>If the LocalStack daemon is not running, the instance will be only accessible at &lt;code>127.0.0.1&lt;/code> and an available port on the host.&lt;/p>
&lt;p>To expose additional ports to the host system, update the default security group and add the required ingress ports.
Security group ingress rules are only applied to the Dockerised instance at the time of creating.
Updating a security group will not open any ports of a running instance.&lt;/p>
&lt;p>Up to 32 ingress ports are supported.
This limitation exists to prevent the host from running out of free ports.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal ec2 authorize-security-group-ingress --group-id default --protocol tcp --port 8080
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal ec2 describe-security-groups --group-names default&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The port mapping is printed in the logs as when the instance is intialised.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span style="display:flex;">&lt;span>2022-12-20T19:43:44.544 INFO Instance i-1d6327abf04e31be6 port mappings (container -&amp;gt; host): {&amp;#39;8080/tcp&amp;#39;: 51747, &amp;#39;22/tcp&amp;#39;: 55705}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="key-pairs">Key pairs&lt;/h2>
&lt;p>You can specify a key pair at startup and LocalStack will copy it into the container and enable it for SSH authentication.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal ec2 create-key-pair --key-name alice
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal ec2 run-instances --image-id ami-df5de72bdb3b --key-name alice&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="user-data">User data&lt;/h2>
&lt;p>It is possible to run commands on a instance at startup using &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html">user data&lt;/a>.
The script can be passed to the &lt;code>UserData&lt;/code> argument of &lt;code>RunInstances&lt;/code> operation.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal ec2 run-instances --image-id ami-df5de72bdb3b --user-data &amp;#39;#!/bin/bash
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> whoami | tee /myname &amp;amp;&amp;amp; echo localstack; echo &amp;#34;not printed&amp;#34;&amp;gt;/dev/null;&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Like production AWS, the contents of user data is saved at &lt;code>/var/lib/cloud/instances/&amp;lt;instance_id&amp;gt;/user-data.txt&lt;/code> on the instance.
Its execution is logged at &lt;code>/var/log/cloud-init-output.log&lt;/code>.&lt;/p>
&lt;h2 id="passing-additional-flags-to-docker">Passing additional flags to Docker&lt;/h2>
&lt;p>Use the &lt;a href="/references/configuration/#ec2">&lt;code>EC2_DOCKER_FLAGS&lt;/code>&lt;/a> LocalStack configuration variable to pass additional flags to Docker when starting containerised instances.
For example, this can be used to start the container in privileged mode with &lt;code>--privileged&lt;/code>, or use a different CPU platform with &lt;code>--platform&lt;/code>, etc.
Note that this affects all instances that are launched in the LocalStack session.&lt;/p>
&lt;h2 id="operations">Operations&lt;/h2>
&lt;p>The Docker backend supports following operations:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">Operation&lt;/th>
&lt;th style="text-align:left">Notes&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">CreateImage&lt;/td>
&lt;td style="text-align:left">Uses Docker commit to take a snapshot of a running instance into a new AMI&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">DescribeImages&lt;/td>
&lt;td style="text-align:left">Retrieve a list of Docker images available for use within LocalStack&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">DescribeInstances&lt;/td>
&lt;td style="text-align:left">Describe &amp;lsquo;mock&amp;rsquo; instances as well as Docker-backed instances. Docker-backed instances have the resource tag &lt;code>ec2_vm_manager:docker&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">RunInstances&lt;/td>
&lt;td style="text-align:left">Corresponds to starting a container&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">StopInstances&lt;/td>
&lt;td style="text-align:left">Corresponds to pausing a container&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">StartInstances&lt;/td>
&lt;td style="text-align:left">Corresponds to unpausing a container&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">TerminateInstances&lt;/td>
&lt;td style="text-align:left">Corresponds to stopping a container&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>User-Guide: Elastic Container Registry (ECR)</title><link>/user-guide/aws/elastic-container-registry/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/elastic-container-registry/</guid><description>
&lt;p>A basic version of Elastic Container Registry (ECR) is available to store application images. ECR is often used in combination with other APIs that deploy containerized apps, like ECS or EKS.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal ecr create-repository --repository-name repo1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;repository&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;repositoryArn&amp;#34;: &amp;#34;arn:aws:ecr:us-east-1:000000000000:repository/repo1&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;registryId&amp;#34;: &amp;#34;abc898c8&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;repositoryName&amp;#34;: &amp;#34;repo1&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;repositoryUri&amp;#34;: &amp;#34;localhost:4510/repo1&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can then build and tag a new Docker image, and push it to the repository URL (&lt;code>localhost:4510/repo1&lt;/code> in the example above):
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>cat Dockerfile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>FROM nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ENV foo=bar&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>docker build -t localhost:4510/repo1 .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Successfully built e2cfb3cf012d
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Successfully tagged localhost:4510/repo1:latest&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>docker push localhost:4510/repo1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>The push refers to repository [localhost:4510/repo1]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>318be7aea8fc: Pushed
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fe08d5d042ab: Pushed
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>f2cb0ecef392: Pushed
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>latest: digest: sha256:4dd893a43df24c8f779a5ab343b7ef172fb147c69ed5e1278d95b97fe0f584a5 size: 948
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>User-Guide: Elastic Container Service (ECS)</title><link>/user-guide/aws/elastic-container-service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/elastic-container-service/</guid><description>
&lt;p>LocalStack Pro version provides a basic support for creating and deploying containerized apps using &lt;a href="https://aws.amazon.com/ecs">Amazon ECS&lt;/a>. LocalStack offers the basic APIs locally, including creation of ECS task definitions, services, and tasks.&lt;/p>
&lt;p>By default, the &lt;strong>ECS Fargate&lt;/strong> launch type is assumed, i.e., the local Docker engine is used for deployment of applications, and there is no need to create and manage EC2 virtual machines to run the containers.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
More complex features like integration of application load balancers (ALBs) are currently not available. Nonetheless, they are being developed and will be available in the near future.
&lt;/div>
&lt;h2 id="executing-ecs-tasks-in-docker">Executing ECS tasks in Docker&lt;/h2>
&lt;p>Task instances are started in a local Docker engine, which needs to be accessible to the LocalStack container. The name pattern for task containers is &lt;code>localstack_&amp;lt;family&amp;gt;_&amp;lt;revision&amp;gt;&lt;/code>, where &lt;code>&amp;lt;family&amp;gt;&lt;/code> refers to the task family and &lt;code>&amp;lt;revision&amp;gt;&lt;/code> refers to a task revision (for example, &lt;code>localstack_nginx_1&lt;/code>).&lt;/p>
&lt;p>You can use the configuration option &lt;code>LAMBDA_DOCKER_NETWORK&lt;/code> to specify the network the ECS containers are started in.
If your ECS containers depend on LocalStack services, this should be the network the LocalStack container is located in.
For more information regarding the configuration of LocalStack, please check the &lt;a href="/references/configuration/">LocalStack configuration&lt;/a> section.&lt;/p>
&lt;p>If you are running LocalStack through a &lt;code>docker run&lt;/code> command, do not forget to enable the communication from the container to the Docker Engine API. You can provide the access by adding the following option &lt;code>-v /var/run/docker.sock:/var/run/docker.sock&lt;/code>.&lt;/p>
&lt;h2 id="mounting-local-directories-for-ecs-tasks">Mounting local directories for ECS tasks&lt;/h2>
&lt;p>In some cases, it can be useful to mount code from the host filesystem into the ECS container. For example, to enable a quick debugging loop where you can test changes without having to build and redeploy the task&amp;rsquo;s Docker image each time - similar to the &lt;a href="/user-guide/tools/lambda-tools/hot-reloading/">Lambda Hot Reloading&lt;/a> feature in LocalStack.&lt;/p>
&lt;p>In order to leverage code mounting, we can use the ECS bind mounts feature, which is covered in the &lt;a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/bind-mounts.html">AWS Bind mounts documentation&lt;/a>.&lt;/p>
&lt;p>For example, the Python sample code below registers a task definition, mounting a host path &lt;code>/host/path&lt;/code> into the container under &lt;code>/container/path&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">ecs_client&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> boto3.client&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;ecs&amp;#34;&lt;/span>, &lt;span style="color:#000">endpoint_url&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;http://localhost:4566&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ecs_client.register_task_definition&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">family&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;...&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">containerDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;...&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;image&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;alpine&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;command&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;...&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;mountPoints&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;containerPath&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;/container/path&amp;#34;&lt;/span>, &lt;span style="color:#4e9a06">&amp;#34;sourceVolume&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;test-volume&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">volumes&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=[{&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;host&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;sourcePath&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;/host/path&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>, &lt;span style="color:#4e9a06">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;test-volume&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">}]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>User-Guide: Elastic Kubernetes Service (EKS)</title><link>/user-guide/aws/elastic-kubernetes-service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/elastic-kubernetes-service/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Elastic Kubernetes Service (EKS) is a managed Kubernetes service that makes it easy to run Kubernetes on AWS without installing, operating, and maintaining your own Kubernetes control plane or worker nodes. Kubernetes is an open-source system for automating containerized applications&amp;rsquo; deployment, scaling, and management.&lt;/p>
&lt;p>LocalStack supports Elastic Kubernetes Service via the Pro/Team offering, allowing you to use the EKS APIs in your local environment to spin up embedded Kubernetes clusters in your local Docker engine or use an existing Kubernetes installation you can access from your local machine (defined in &lt;code>$HOME/.kube/config&lt;/code>). The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_eks/">API coverage page&lt;/a>, which provides information on the extent of EKS&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to Elastic Kubernetes Service and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script. To interact with the Kubernetes cluster, you should also install &lt;a href="https://kubernetes.io/docs/tasks/tools/">&lt;code>kubectl&lt;/code>&lt;/a>.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method. We will demonstrate how you can auto-install an embedded Kubernetes cluster, configure ingress, and deploy a sample service with ECR.&lt;/p>
&lt;h3 id="create-an-embedded-kubernetes-cluster">Create an embedded Kubernetes cluster&lt;/h3>
&lt;p>The default approach for creating Kubernetes clusters using the local EKS API is by setting up an embedded &lt;a href="https://k3d.io/">k3d&lt;/a> kube cluster within Docker. LocalStack seamlessly manages the download and installation process, making it hassle-free for users. In most cases, the installation is automatic, eliminating the need for any manual customizations.&lt;/p>
&lt;p>A new cluster can be created using the following command:&lt;/p>
&lt;p>You can create a new cluster using the &lt;a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_CreateCluster.html">&lt;code>CreateCluster&lt;/code>&lt;/a> API. Run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal eks create-cluster \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --name cluster1 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --role-arn &amp;#34;arn:aws:iam::000000000000:role/eks-role&amp;#34; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --resources-vpc-config &amp;#34;{}&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can see an output similar to the following:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;cluster&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;cluster1&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;arn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:eks:us-east-1:000000000000:cluster/cluster1&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;createdAt&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;2022-04-13T16:38:24.850000+02:00&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;roleArn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:iam::000000000000:role/eks-role&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;resourcesVpcConfig&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;identity&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;oidc&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;issuer&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;https://localhost.localstack.cloud/eks-oidc&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;status&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;CREATING&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;clientRequestToken&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;cbdf2bb6-fd3b-42b1-afe0-3c70980b5959&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can use the &lt;code>docker&lt;/code> CLI to check that some containers have been created:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>docker ps
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>b335f7f089e4 rancher/k3d-proxy:5.0.1-rc.1 &amp;#34;/bin/sh -c nginx-pr…&amp;#34; 1 minute ago Up 1 minute 0.0.0.0:8081-&amp;gt;80/tcp, 0.0.0.0:44959-&amp;gt;6443/tcp k3d-cluster1-serverlb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>f05770ec8523 rancher/k3s:v1.21.5-k3s2 &amp;#34;/bin/k3s server --t…&amp;#34; 1 minute ago Up 1 minute
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>After successfully creating and initializing the cluster, we can easily find the server endpoint, using the &lt;a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeCluster.html">&lt;code>DescribeCluster&lt;/code>&lt;/a> API. Run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal eks describe-cluster --name cluster1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;cluster&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;name&amp;#34;: &amp;#34;cluster1&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;arn&amp;#34;: &amp;#34;arn:aws:eks:us-east-1:000000000000:cluster/cluster1&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;createdAt&amp;#34;: &amp;#34;2022-04-13T17:12:39.738000+02:00&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;endpoint&amp;#34;: &amp;#34;https://localhost.localstack.cloud:4511&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;roleArn&amp;#34;: &amp;#34;arn:aws:iam::000000000000:role/eks-role&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;resourcesVpcConfig&amp;#34;: {},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;identity&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;oidc&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;issuer&amp;#34;: &amp;#34;https://localhost.localstack.cloud/eks-oidc&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;status&amp;#34;: &amp;#34;ACTIVE&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;certificateAuthority&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;data&amp;#34;: &amp;#34;...&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;clientRequestToken&amp;#34;: &amp;#34;d188f578-b353-416b-b309-5d8c76ecc4e2&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="utilizing-ecr-images-within-eks">Utilizing ECR Images within EKS&lt;/h3>
&lt;p>You can now use ECR (Elastic Container Registry) images within your EKS environment.&lt;/p>
&lt;h4 id="initial-configuration">Initial configuration&lt;/h4>
&lt;p>To modify the return value of resource URIs for most services, including ECR, you can utilize the &lt;code>HOSTNAME_EXTERNAL&lt;/code> variable in the &lt;a href="/references/configuration/">configuration&lt;/a>. By default, ECR returns a &lt;code>repositoryUri&lt;/code> starting with &lt;code>localhost&lt;/code>, such as: &lt;code>localhost:&amp;lt;port&amp;gt;/&amp;lt;repository-name&amp;gt;&lt;/code>. However, if you set the &lt;code>HOSTNAME_EXTERNAL&lt;/code> to &lt;code>localhost.localstack.cloud&lt;/code>, the ECR will provide a &lt;code>repositoryUri&lt;/code> like &lt;code>localhost.localstack.cloud:&amp;lt;port&amp;gt;/&amp;lt;repository_name&amp;gt;&lt;/code>.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Notes&lt;/h4>
&lt;p>In this section, we assume that &lt;code>localhost.localstack.cloud&lt;/code> resolves in your environment, and LocalStack is connected to a non-default bridge network. For more information, refer to the article about &lt;a href="/user-guide/tools/transparent-endpoint-injection/dns-server/#dns-rebind-protection">DNS rebind protection&lt;/a>.&lt;/p>
&lt;p>If the domain &lt;code>localhost.localstack.cloud&lt;/code> does not resolve on your host, you can still proceed without setting &lt;code>HOSTNAME_EXTERNAL&lt;/code>. However it is suggested to use &lt;code>localhost.localstack.cloud&lt;/code> as the registry in your pod configuration.&lt;/p>
&lt;p>LocalStack will take care of the DNS resolution of &lt;code>localhost.localstack.cloud&lt;/code> within ECR itself, allowing you to use the &lt;code>localhost:&amp;lt;port&amp;gt;/&amp;lt;repository_name&amp;gt;&lt;/code> URI for tagging and pushing the image on your host.&lt;/p>
&lt;/div>
&lt;p>Once you have configured this correctly, you can seamlessly use your ECR image within EKS as expected.&lt;/p>
&lt;h4 id="deploying-a-sample-application-from-an-ecr-image">Deploying a sample application from an ECR image&lt;/h4>
&lt;p>To showcase this behavior, let&amp;rsquo;s go through a concise step-by-step guide that will lead us to the successful pulling of an image from local ECR. For the purpose of this guide, we will retag the &lt;code>nginx&lt;/code> image to be pushed to a local ECR repository under a different name, and then utilize it for a pod configuration.&lt;/p>
&lt;p>You can create a new ECR repository using the &lt;a href="https://docs.aws.amazon.com/AmazonECR/latest/APIReference/API_CreateRepository.html">&lt;code>CreateRepository&lt;/code>&lt;/a> API. Run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal ecr create-repository --repository-name &amp;#34;fancier-nginx&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;repository&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;repositoryArn&amp;#34;: &amp;#34;arn:aws:ecr:us-east-1:000000000000:repository/fancier-nginx&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;registryId&amp;#34;: &amp;#34;c75fd0e2&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;repositoryName&amp;#34;: &amp;#34;fancier-nginx&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;repositoryUri&amp;#34;: &amp;#34;localhost.localstack.cloud:4510/fancier-nginx&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;createdAt&amp;#34;: &amp;#34;2022-04-13T14:22:47+02:00&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;imageTagMutability&amp;#34;: &amp;#34;MUTABLE&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;imageScanningConfiguration&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;scanOnPush&amp;#34;: false
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;encryptionConfiguration&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;encryptionType&amp;#34;: &amp;#34;AES256&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
&lt;p>When creating an ECR repository, a port from the &lt;a href="/references/external-ports/">external service port range&lt;/a> is dynamically assigned. As a result, the port can differ from the static value &lt;code>4510&lt;/code> used in the examples below.&lt;/p>
&lt;p>To ensure the correct URL and port, it&amp;rsquo;s important to use the &lt;code>repositoryUrl&lt;/code> obtained from the &lt;code>create-repository&lt;/code> request. This ensures that you have the accurate endpoint to access the repository.&lt;/p>
&lt;/div>
&lt;p>You can now pull the &lt;code>nginx&lt;/code> image from Docker Hub using the &lt;code>docker&lt;/code> CLI:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>docker pull nginx&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can further tag the image to be pushed to ECR:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>docker tag nginx localhost.localstack.cloud:4510/fancier-nginx&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Finally, you can push the image to local ECR:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>docker push localhost.localstack.cloud:4510/fancier-nginx&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Now, let us set up the EKS cluster using the image pushed to local ECR.&lt;/p>
&lt;p>Next, we can configure &lt;code>kubectl&lt;/code> to use the EKS cluster, using the &lt;a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_UpdateClusterConfig.html">&lt;code>UpdateKubeconfig&lt;/code>&lt;/a> API. Run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal eks update-kubeconfig --name cluster1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;amp; kubectl config use-context arn:aws:eks:us-east-1:000000000000:cluster/cluster1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Added new context arn:aws:eks:us-east-1:000000000000:cluster/cluster1 to /home/localstack/.kube/config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Switched to context &amp;#34;arn:aws:eks:us-east-1:000000000000:cluster/cluster1&amp;#34;.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can now go ahead and add a deployment configuration for the &lt;code>fancier-nginx&lt;/code> image.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>cat &amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apiVersion: apps/v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Deployment
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: fancier-nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> labels:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> app: fancier-nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> replicas: 1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> selector:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> matchLabels:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> app: fancier-nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> template:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> labels:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> app: fancier-nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> containers:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: fancier-nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> image: localhost.localstack.cloud:4510/fancier-nginx:latest
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ports:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - containerPort: 80
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>EOF&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can now describe the pod to see if the image was pulled successfully:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>kubectl describe pod fancier-nginx&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>In the events, we can see that the pull from ECR was successful:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span> Normal Pulled 10s kubelet Successfully pulled image &lt;span style="color:#4e9a06">&amp;#34;localhost.localstack.cloud:4510/fancier-nginx:latest&amp;#34;&lt;/span> in 2.412775896s
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="configuring-an-ingress-for-your-services">Configuring an Ingress for your services&lt;/h3>
&lt;p>To make an EKS service externally accessible, it is necessary to create an Ingress configuration, which exposes the service on a specific path to the load balancer.&lt;/p>
&lt;p>For our sample deployment, we can create an &lt;code>nginx&lt;/code> Kubernetes service by applying the following configuration:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>cat &amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apiVersion: v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> selector:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> app: fancier-nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ports:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: http
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> protocol: TCP
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> port: 80
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> targetPort: 80
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>EOF&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Use the following ingress configuration to expose the &lt;code>nginx&lt;/code> service on path &lt;code>/test123&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>cat &amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apiVersion: networking.k8s.io/v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Ingress
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> annotations:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ingress.kubernetes.io/ssl-redirect: &amp;#34;false&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> rules:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - http:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> paths:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - path: /test123
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pathType: Prefix
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> backend:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> service:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> port:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> number: 80
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>EOF&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You will be able to send a request to &lt;code>nginx&lt;/code> via the load balancer port &lt;code>8081&lt;/code> from the host:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl http://localhost:8081/test123
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;html&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;hr&amp;gt;&amp;lt;center&amp;gt;nginx/1.21.6&amp;lt;/center&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
You can customize the Load Balancer port by configuring &lt;code>EKS_LOADBALANCER_PORT&lt;/code> in your environment.
&lt;/div>
&lt;h3 id="enabling-https-with-local-ssltls-certificate-for-the-ingress">Enabling HTTPS with local SSL/TLS certificate for the Ingress&lt;/h3>
&lt;p>To enable HTTPS for your endpoints, you can configure Kubernetes to use SSL/TLS with the &lt;a href="https://github.com/localstack/localstack-artifacts/blob/master/local-certs/server.key">certificate for local domain names&lt;/a> &lt;code>*.localhost.localstack.cloud&lt;/code>.&lt;/p>
&lt;p>The local EKS cluster comes pre-configured with a secret named &lt;code>ls-secret-tls&lt;/code>, which can be conveniently utilized to define the &lt;code>tls&lt;/code> section in the ingress configuration:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">networking.k8s.io/v1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Ingress&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">test-ingress&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">annotations&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">ingress.kubernetes.io/ssl-redirect&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;false&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">traefik.ingress.kubernetes.io/router.entrypoints&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">web,websecure&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">traefik.ingress.kubernetes.io/router.tls&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;true&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">tls&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">secretName&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">ls-secret-tls&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">hosts&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">myservice.localhost.localstack.cloud&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">...&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Once you have deployed your service using the mentioned ingress configuration, it will be accessible via the HTTPS endpoint &lt;code>https://myservice.localhost.localstack.cloud&lt;/code>.&lt;/p>
&lt;p>Remember that the ingress controller does not support HTTP/HTTPS multiplexing within the same Ingress. Consequently, if you want your service to be accessible via HTTP and HTTPS, you must create two separate Ingress definitions — one Ingress for HTTP and another for HTTPS.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
The &lt;code>ls-secret-tls&lt;/code> secret is created in the &lt;code>default&lt;/code> namespace. If your ingress and services are residing in a custom namespace, it is essential to copy the secret to that custom namespace to make use of it.
&lt;/div>
&lt;h2 id="use-an-existing-kubernetes-installation">Use an existing Kubernetes installation&lt;/h2>
&lt;p>You can also access the EKS API using your existing local Kubernetes installation. This can be achieved by mounting the &lt;code>$HOME/.kube/config&lt;/code> file into the LocalStack container, especially when using a &lt;code>docker-compose.yml&lt;/code> file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">volumes&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;${HOME}/.kube/config:/root/.kube/config&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In recent versions of Docker, you can enable Kubernetes as an embedded service running inside Docker. The picture below illustrates the Kubernetes settings in Docker for macOS (similar configurations apply for Linux/Windows). By default, the Kubernetes API is assumed to run on the local TCP port &lt;code>6443&lt;/code>.&lt;/p>
&lt;img src="kubernetes.png" alt="Kubernetes in Docker" title="Kubernetes in Docker" width="450" />
&lt;p>You can create an EKS Cluster configuration using the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal eks create-cluster --name cluster1 --role-arn arn:aws:iam::000000000000:role/eks-role --resources-vpc-config &amp;#39;{}&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;cluster&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;name&amp;#34;: &amp;#34;cluster1&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;arn&amp;#34;: &amp;#34;arn:aws:eks:eu-central-1:000000000000:cluster/cluster1&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;createdAt&amp;#34;: &amp;#34;Sat, 05 Oct 2019 12:29:26 GMT&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;endpoint&amp;#34;: &amp;#34;https://172.17.0.1:6443&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;status&amp;#34;: &amp;#34;ACTIVE&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal eks list-clusters
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;clusters&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;cluster1&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>To interact with your Kubernetes cluster, configure your Kubernetes client (such as &lt;code>kubectl&lt;/code> or other SDKs) to point to the &lt;code>endpoint&lt;/code> provided in the &lt;code>create-cluster&lt;/code> output mentioned earlier. However, depending on whether you&amp;rsquo;re calling the Kubernetes API from your local machine or from within a Lambda function, you might need to use different endpoint URLs.&lt;/p>
&lt;p>For local machine interactions, use &lt;code>https://localhost:6443&lt;/code> as the endpoint URL. If you are accessing the Kubernetes API from within a Lambda function, you should use &lt;code>https://172.17.0.1:6443&lt;/code> as the endpoint URL, assuming that &lt;code>172.17.0.1&lt;/code> is the IP address of the Docker network bridge.&lt;/p>
&lt;p>By using the appropriate endpoint URL based on your context, you can effectively communicate with your Kubernetes cluster and manage your resources as needed.&lt;/p>
&lt;h2 id="customizing-the-kubernetes-load-balancer-ports">Customizing the Kubernetes Load Balancer Ports&lt;/h2>
&lt;p>By default, the Kubernetes load balancer (LB) is exposed on port &lt;code>8081&lt;/code>. If you need to customize the port or expose the load balancer on multiple ports, you can utilize the special tag name &lt;code>_lb_ports_&lt;/code> during the cluster creation process.&lt;/p>
&lt;p>For instance, if you want to expose the load balancer on ports 8085 and 8086, you can use the following tag definition when creating the cluster:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal eks create-cluster \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --name cluster1 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --role-arn arn:aws:iam::000000000000:role/eks-role \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --resources-vpc-config &amp;#39;{}&amp;#39; --tags &amp;#39;{&amp;#34;_lb_ports_&amp;#34;:&amp;#34;8085,8086&amp;#34;}&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="routing-traffic-to-services-on-different-endpoints">Routing Traffic to Services on Different Endpoints&lt;/h2>
&lt;p>When working with EKS, a common scenario is to access multiple Kubernetes services behind different endpoints.&lt;/p>
&lt;p>For instance, you might have multiple microservices, each following a common path versioning scheme, such as API request paths starting with &lt;code>/v1/...&lt;/code>. In such cases, path-based routing may not be ideal if you need the services to be accessible in a uniform manner.&lt;/p>
&lt;p>To address this requirement, we recommend utilizing host-based routing rules, as demonstrated in the example below:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>cat &amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apiVersion: networking.k8s.io/v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Ingress
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: multi-services
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> annotations:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ingress.kubernetes.io/ssl-redirect: &amp;#34;false&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> rules:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - host: eks-service-1.localhost.localstack.cloud
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> http:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> paths:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - path: /v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pathType: Prefix
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> backend:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> service:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: service-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> port:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> number: 80
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - host: eks-service-2.localhost.localstack.cloud
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> http:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> paths:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - path: /v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pathType: Prefix
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> backend:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> service:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: service-2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> port:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> number: 80
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>EOF&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The example defines routing rules for two local endpoints - the first rule points to a service &lt;code>service-1&lt;/code> accessible under &lt;code>/v1&lt;/code>, and the second rule points to a service &lt;code>service-2&lt;/code> accessible under the same path &lt;code>/v1&lt;/code>.&lt;/p>
&lt;p>In the provided example, we define routing rules for two local endpoints. The first rule directs traffic to a service named &lt;code>service-1&lt;/code>, accessible under the path &lt;code>/v1&lt;/code>. Similarly, the second rule points to a service named &lt;code>service-2&lt;/code>, also accessible under the same path &lt;code>/v1&lt;/code>.&lt;/p>
&lt;p>This approach enables us to access the two distinct services using the same path and port number, but with different host names. This host-based routing mechanism ensures that each service is uniquely identified based on its designated host name, allowing for a uniform and organized way of accessing multiple services within the EKS cluster.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl http://eks-service-1.localhost.localstack.cloud:8081/v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>... [output of service 1]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl http://eks-service-2.localhost.localstack.cloud:8081/v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>... [output of service 2]&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>It is important to note that the host names &lt;code>eks-service-1.localhost.localstack.cloud&lt;/code> and &lt;code>eks-service-2.localhost.localstack.cloud&lt;/code> both resolve to &lt;code>127.0.0.1&lt;/code> (localhost). Consequently, you can utilize them to communicate with your service endpoints and distinguish between different services within the Kubernetes load balancer.&lt;/p>
&lt;p>However, it might encounter issues in scenarios where you intend to run your Load Balancer (LB) on standard ports such as 80/443 since some of these ports may already be occupied on your local machine. For instance, by default, LocalStack allocates port 443 to expose APIs via the HTTPS endpoint (&lt;code>https://localhost.localstack.cloud&lt;/code>). Hence, it&amp;rsquo;s crucial to ensure that you expose your LB on a custom, non-standard port to prevent conflicts.&lt;/p>
&lt;p>Additionally, note that LocalStack EKS employs &lt;a href="https://doc.traefik.io/traefik/providers/kubernetes-ingress">Traefik&lt;/a> as the Kubernetes ingress controller internally.&lt;/p>
&lt;h2 id="mounting-directories-from-host-to-pod">Mounting directories from host to pod&lt;/h2>
&lt;p>If you have specific directories which you want to mount from your local dev machine into one of your pods, you can do this with two simple steps:&lt;/p>
&lt;p>If you have specific directories that you want to mount from your local development machine into one of your pods, you can achieve this in two simple steps.&lt;/p>
&lt;p>When creating your cluster, include the special tag &lt;code>_volume_mount_&lt;/code>, which allows you to define the desired volume mounting configuration from your local development machine to the cluster nodes.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal eks create-cluster \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --name cluster1 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --role-arn arn:aws:iam::000000000000:role/eks-role \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --resources-vpc-config &amp;#39;{}&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --tags &amp;#39;{&amp;#34;_volume_mount_&amp;#34;:&amp;#34;/path/on/host:/path/on/node&amp;#34;}&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;cluster&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;name&amp;#34;: &amp;#34;cluster1&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;arn&amp;#34;: &amp;#34;arn:aws:eks:eu-central-1:000000000000:cluster/cluster1&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;createdAt&amp;#34;: &amp;#34;Sat, 05 Oct 2019 12:29:26 GMT&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;endpoint&amp;#34;: &amp;#34;https://172.17.0.1:6443&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;status&amp;#34;: &amp;#34;ACTIVE&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;tags&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;_volume_mount_&amp;#34; : &amp;#34;/path/on/host:/path/on/node&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Notes&lt;/h4>
Note that the tag was previously referred to as &lt;code>__k3d_volume_mount__&lt;/code>, but it has now been renamed to &lt;code>_volume_mount_&lt;/code>. As a result, the tag name &lt;code>__k3d_volume_mount__&lt;/code> is considered deprecated and will be removed in an upcoming release.
&lt;/div>
&lt;p>After creating your cluster with the &lt;code>_volume_mount_&lt;/code> tag, you can create your path with volume mounts as usual. The configuration for the volume mounts can be set up similar to this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">v1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Pod&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">test&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">volumes&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example-volume&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">hostPath&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">path&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">/path/on/node&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">containers&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">image&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">alpine:3.12&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">command&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;/bin/sh&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;-c&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">args&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">echo &amp;#34;Starting the update command&amp;#34;;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">apk update;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">echo &amp;#34;Adding the openssh command&amp;#34;;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">apk add openssh;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">echo &amp;#34;openssh completed&amp;#34;;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">sleep 240m;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">imagePullPolicy&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">IfNotPresent&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">alpine&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">volumeMounts&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">mountPath&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;/path/on/pod&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example-volume&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">restartPolicy&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Always&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>User-Guide: Elastic Load Balancing</title><link>/user-guide/aws/elastic-load-balancing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/elastic-load-balancing/</guid><description>
&lt;p>LocalStack Pro supports Elastic Load Balancing operations for both version 1 and 2.&lt;/p>
&lt;p>Application load balancers also support request forwarding to IP address and Lambda targets.&lt;/p>
&lt;h3 id="ip-targets">IP Targets&lt;/h3>
&lt;p>This example illustrates a load balancer configured for an IP target.&lt;/p>
&lt;p>Start an HTTP server which will serve as the target of our load balancer.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>docker run --rm -itd -p 5678:80 ealen/echo-server&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Create the load balancer, target group and register the target, which is the above Docker container in this case.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>subnet=$(awslocal ec2 describe-subnets --filters Name=availability-zone,Values=us-east-1f | jq -r &amp;#39;.Subnets[].SubnetId&amp;#39;)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>loadBalancer=$(awslocal elbv2 create-load-balancer --name example-lb --subnets $subnet \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | jq -r &amp;#39;.LoadBalancers[]|.LoadBalancerArn&amp;#39;)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>targetGroup=$(awslocal elbv2 create-target-group --name example-target-group --protocol HTTP --target-type ip \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | jq -r &amp;#39;.TargetGroups[].TargetGroupArn&amp;#39;)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal elbv2 register-targets --targets Id=127.0.0.1,Port=5678,AvailabilityZone=all --target-group-arn $targetGroup&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Create a listener and a rule so that incoming requests are forwarded to the target.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>listenerArn=$(awslocal elbv2 create-listener \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --default-actions &amp;#39;{&amp;#34;Type&amp;#34;:&amp;#34;forward&amp;#34;,&amp;#34;TargetGroupArn&amp;#34;:&amp;#34;&amp;#39;$targetGroup&amp;#39;&amp;#34;,&amp;#34;ForwardConfig&amp;#34;:{&amp;#34;TargetGroups&amp;#34;:[{&amp;#34;TargetGroupArn&amp;#34;:&amp;#34;&amp;#39;$targetGroup&amp;#39;&amp;#34;,&amp;#34;Weight&amp;#34;:11}]}}&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --load-balancer-arn $loadBalancer | jq -r &amp;#39;.Listeners[]|.ListenerArn&amp;#39;)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>listenerRule=$(awslocal elbv2 create-rule \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --conditions Field=path-pattern,Values=/ \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --priority 1 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --actions &amp;#39;{&amp;#34;Type&amp;#34;:&amp;#34;forward&amp;#34;,&amp;#34;TargetGroupArn&amp;#34;:&amp;#34;&amp;#39;$targetGroup&amp;#39;&amp;#34;,&amp;#34;ForwardConfig&amp;#34;:{&amp;#34;TargetGroups&amp;#34;:[{&amp;#34;TargetGroupArn&amp;#34;:&amp;#34;&amp;#39;$targetGroup&amp;#39;&amp;#34;,&amp;#34;Weight&amp;#34;:11}]}}&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --listener-arn $listenerArn \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | jq -r &amp;#39;.Rules[].RuleArn&amp;#39;)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Finally, we issue an HTTP request to the &lt;code>DNSName&lt;/code> parameter of &lt;code>CreateLoadBalancer&lt;/code> operation, and &lt;code>Port&lt;/code> parameter of &lt;code>CreateListener&lt;/code> command.
In the above example, these parameters are filtered using &lt;code>jq&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl example-lb.elb.localhost.localstack.cloud:4566
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{&amp;#34;host&amp;#34;:{&amp;#34;hostname&amp;#34;:&amp;#34;...&amp;#34;},&amp;#34;http&amp;#34;:{&amp;#34;method&amp;#34;:&amp;#34;GET&amp;#34;,&amp;#34;baseUrl&amp;#34;:&amp;#34;&amp;#34;,&amp;#34;originalUrl&amp;#34;:&amp;#34;/&amp;#34;,&amp;#34;protocol&amp;#34;:&amp;#34;http&amp;#34;},...}}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="limitations">Limitations&lt;/h3>
&lt;ul>
&lt;li>The Aplication Load Balancer currently supports only the &lt;code>forward&lt;/code> and &lt;code>redirect&lt;/code> action types.&lt;/li>
&lt;li>When opting for Route53 CNAMEs to direct requests towards the ALBs, it&amp;rsquo;s important to remember that explicit configuration of the &lt;code>Host&lt;/code> header to match the resource record might be necessary while making calls.&lt;/li>
&lt;/ul></description></item><item><title>User-Guide: Elastic MapReduce (EMR)</title><link>/user-guide/aws/elastic-mapreduce/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/elastic-mapreduce/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Amazon EMR (Elastic MapReduce) is a fully managed big data processing service that allows developers to effortlessly create, deploy, and manage big data applications. EMR supports various big data processing frameworks, including Hadoop MapReduce, Apache Spark, Apache Hive, and Apache Pig. Developers can leverage these frameworks and their rich ecosystem of tools and libraries to perform complex data transformations, machine learning tasks, and real-time data processing.&lt;/p>
&lt;p>LocalStack Pro supports EMR and allows developers to run data analytics workloads locally. EMR utilizes various tools in the &lt;a href="https://hadoop.apache.org/">Hadoop&lt;/a> and &lt;a href="https://spark.apache.org">Spark&lt;/a> ecosystem, and your EMR instance is automatically configured to connect seamlessly to LocalStack&amp;rsquo;s S3 API. LocalStack also supports EMR Serverless to create applications and job runs, to run your Spark/PySpark jobs locally.&lt;/p>
&lt;p>The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_emr/">API coverage page&lt;/a>, which provides information on the extent of EMR&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
To utilize the EMR API, certain additional dependencies need to be downloaded from the network (including Hadoop, Hive, Spark, etc). These dependencies are fetched automatically during service startup, hence it is important to ensure a reliable internet connection when retrieving the dependencies for the first time. Alternatively, you can use one of our &lt;code>*-bigdata&lt;/code> Docker image tags which already ship with the required libraries baked in and may provide better stability (see &lt;a href="https://docs.localstack.cloud/user-guide/ci/#ci-images">here&lt;/a> for more details).
&lt;/div>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to EMR and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method. We will create a virtual EMR cluster using the AWS CLI. To create an EMR cluster, run the following command:&lt;/p>
&lt;p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal emr create-cluster \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --release-label emr-5.9.0 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --instance-groups InstanceGroupType=MASTER,InstanceCount=1,InstanceType=m4.large InstanceGroupType=CORE,InstanceCount=1,InstanceType=m4.large&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
You will see a response similar to the following:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ClusterId&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;j-A2KF3EKLAOWRI&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can also specify startup commands using the &lt;code>--steps=...&lt;/code> command line argument to the &lt;code>CreateCluster&lt;/code> API.&lt;/p>
&lt;h2 id="examples">Examples&lt;/h2>
&lt;p>The following code snippets and sample applications provide practical examples of how to use EMR in LocalStack for various use cases:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/localstack/localstack-pro-samples/tree/master/sample-archive/emr-hadoop-spark-jobs">Running data analytics jobs using EMR&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/localstack-pro-samples/tree/master/emr-serverless-sample">Running EMR Serverless Jobs with Java&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>User-Guide: ElastiCache</title><link>/user-guide/aws/elasticache/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/elasticache/</guid><description>
&lt;p>A basic version of &lt;a href="https://aws.amazon.com/elasticache/">ElastiCache&lt;/a> is provided. By default, the API is started on http://localhost:4598 and supports running a local Redis instance (Memcached support coming soon).&lt;/p>
&lt;p>After starting LocalStack Pro, you can test the following commands:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal elasticache create-cache-cluster --cache-cluster-id i1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;CacheCluster&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;CacheClusterId&amp;#34;: &amp;#34;i1&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ConfigurationEndpoint&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Address&amp;#34;: &amp;#34;localhost&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Port&amp;#34;: 4510
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;p>Then use the returned port number (&lt;code>4510&lt;/code>) to connect to the Redis instance:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>redis-cli -p 4510 ping
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>PONG
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>redis-cli -p 4510 set foo bar
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>OK
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>redis-cli -p 4510 get foo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;#34;bar&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;p>We also support the &lt;code>create-replication-group&lt;/code> API which supports the replication groups in ElastiCache clusters. With the API, you can now have a Redis cluster, a Redis replication group with cluster mode disabled, and a Redis replication group with cluster mode enabled.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Redis requires at least 3+ nodes to form a Redis replication group with cluster mode enabled. Hence, if the user requests only 2 node groups, we transparently upgrade to 3 nodes behind the scenes, to avoid raising an error.
&lt;/div></description></item><item><title>User-Guide: Elasticsearch Service</title><link>/user-guide/aws/elasticsearch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/elasticsearch/</guid><description>
&lt;p>The Elasticsearch Service in LocalStack lets you create one or more single-node Elasticsearch/OpenSearch cluster that behaves like the &lt;a href="https://aws.amazon.com/opensearch-service/the-elk-stack/what-is-elasticsearch/">Amazon Elasticsearch Service&lt;/a>.
This service is, like its AWS counterpart, heavily linked with the &lt;a href="../opensearch">OpenSearch Service&lt;/a>.
Any cluster created with the Elasticsearch Service will show up in the OpenSearch Service and vice versa.&lt;/p>
&lt;h2 id="creating-an-elasticsearch-cluster">Creating an Elasticsearch cluster&lt;/h2>
&lt;p>You can go ahead and use &lt;a href="/user-guide/integrations/aws-cli/#localstack-aws-cli-awslocal">awslocal&lt;/a> to create a new elasticsearch domain via the &lt;code>aws es create-elasticsearch-domain&lt;/code> command.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Unless you use the Elasticsearch default version, the first time you create a cluster with a specific version, the Elasticsearch binary is downloaded, which may take a while to download.
&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
The default Elasticsearch version used is 7.10.0. This is a slight deviation from the default version used in AWS (Elasticsearch 1.5), which is not supported in LocalStack.
&lt;/div>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal es create-elasticsearch-domain --domain-name my-domain
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DomainStatus&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DomainId&amp;#34;: &amp;#34;000000000000/my-domain&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DomainName&amp;#34;: &amp;#34;my-domain&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ARN&amp;#34;: &amp;#34;arn:aws:es:us-east-1:000000000000:domain/my-domain&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Created&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Deleted&amp;#34;: false,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Endpoint&amp;#34;: &amp;#34;my-domain.us-east-1.es.localhost.localstack.cloud:4566&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Processing&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ElasticsearchVersion&amp;#34;: &amp;#34;7.10.0&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ElasticsearchClusterConfig&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;InstanceType&amp;#34;: &amp;#34;m3.medium.elasticsearch&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;InstanceCount&amp;#34;: 1,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DedicatedMasterEnabled&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ZoneAwarenessEnabled&amp;#34;: false,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DedicatedMasterType&amp;#34;: &amp;#34;m3.medium.elasticsearch&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DedicatedMasterCount&amp;#34;: 1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;EBSOptions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;EBSEnabled&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;VolumeType&amp;#34;: &amp;#34;gp2&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;VolumeSize&amp;#34;: 10,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Iops&amp;#34;: 0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;CognitoOptions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Enabled&amp;#34;: false
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>In the LocalStack log you will see something like the following, where you can see the cluster starting up in the background.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span style="display:flex;">&lt;span>2021-11-08T16:29:28:INFO:localstack.services.es.cluster: starting elasticsearch: /opt/code/localstack/localstack/localstack/infra/elasticsearch/bin/elasticsearch -E http.port=57705 -E http.publish_port=57705 -E transport.port=0 -E network.host=127.0.0.1 -E http.compression=false -E path.data=&amp;#34;/var/lib/localstack/lib//elasticsearch/arn:aws:es:us-east-1:000000000000:domain/my-domain/data&amp;#34; -E path.repo=&amp;#34;/var/lib/localstack/lib//elasticsearch/arn:aws:es:us-east-1:000000000000:domain/my-domain/backup&amp;#34; -E xpack.ml.enabled=false with env {&amp;#39;ES_JAVA_OPTS&amp;#39;: &amp;#39;-Xms200m -Xmx600m&amp;#39;, &amp;#39;ES_TMPDIR&amp;#39;: &amp;#39;/var/lib/localstack/lib//elasticsearch/arn:aws:es:us-east-1:000000000000:domain/my-domain/tmp&amp;#39;}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2021-11-08T16:29:28:INFO:localstack.services.es.cluster: registering an endpoint proxy for http://my-domain.us-east-1.es.localhost.localstack.cloud:4566 =&amp;gt; http://127.0.0.1:57705
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2021-11-08T16:29:30:INFO:localstack.services.es.cluster: OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2021-11-08T16:29:32:INFO:localstack.services.es.cluster: [2021-11-08T16:29:32,502][INFO ][o.e.n.Node ] [noctua] version[7.10.0], pid[22403], build[default/tar/51e9d6f22758d0374a0f3f5c6e8f3a7997850f96/2020-11-09T21:30:33.964949Z], OS[Linux/5.4.0-89-generic/amd64], JVM[Ubuntu/OpenJDK 64-Bit Server VM/11.0.11/11.0.11+9-Ubuntu-0ubuntu2.20.04]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2021-11-08T16:29:32:INFO:localstack.services.es.cluster: [2021-11-08T16:29:32,510][INFO ][o.e.n.Node ] [noctua] JVM home [/usr/lib/jvm/java-11-openjdk-amd64], using bundled JDK [false]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2021-11-08T16:29:32:INFO:localstack.services.es.cluster: [2021-11-08T16:29:32,511][INFO ][o.e.n.Node ] [noctua] JVM arguments [-Xshare:auto, -Des.networkaddress.cache.ttl=60, -Des.networkaddress.cache.negative.ttl=10, -XX:+AlwaysPreTouch, -Xss1m, -Djava.awt.headless=true, -Dfile.encoding=UTF-8, -Djna.nosys=true, -XX:-OmitStackTraceInFastThrow, -Dio.netty.noUnsafe=true, -Dio.netty.noKeySetOptimization=true, -Dio.netty.recycler.maxCapacityPerThread=0, -Dio.netty.allocator.numDirectArenas=0, -Dlog4j.shutdownHookEnabled=false, -Dlog4j2.disable.jmx=true, -Djava.locale.providers=SPI,COMPAT, -XX:+UseConcMarkSweepGC, -XX:CMSInitiatingOccupancyFraction=75, -XX:+UseCMSInitiatingOccupancyOnly, -Djava.io.tmpdir=/var/lib/localstack/lib//elasticsearch/arn:aws:es:us-east-1:000000000000:domain/my-domain/tmp, -XX:+HeapDumpOnOutOfMemoryError, -XX:HeapDumpPath=data, -XX:ErrorFile=logs/hs_err_pid%p.log, -Xlog:gc*,gc+age=trace,safepoint:file=logs/gc.log:utctime,pid,tags:filecount=32,filesize=64m, -Xms200m, -Xmx600m, -XX:MaxDirectMemorySize=314572800, -Des.path.home=/opt/code/localstack/localstack/localstack/infra/elasticsearch, -Des.path.conf=/opt/code/localstack/localstack/localstack/infra/elasticsearch/config, -Des.distribution.flavor=default, -Des.distribution.type=tar, -Des.bundled_jdk=true]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2021-11-08T16:29:36:INFO:localstack.services.es.cluster: [2021-11-08T16:29:36,258][INFO ][o.e.p.PluginsService ] [noctua] loaded module [aggs-matrix-stats]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2021-11-08T16:29:36:INFO:localstack.services.es.cluster: [2021-11-08T16:29:36,259][INFO ][o.e.p.PluginsService ] [noctua] loaded module [analysis-common]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2021-11-08T16:29:36:INFO:localstack.services.es.cluster: [2021-11-08T16:29:36,260][INFO ][o.e.p.PluginsService ] [noctua] loaded module [constant-keyword]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>and after some time, you should see that the &lt;code>Processing&lt;/code> state of the domain is set to &lt;code>false&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal es describe-elasticsearch-domain --domain-name my-domain | jq &amp;#34;.DomainStatus.Processing&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>false&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="interact-with-the-cluster">Interact with the cluster&lt;/h2>
&lt;p>You can now interact with the cluster at the cluster API endpoint for the domain,
in this case &lt;code>http://my-domain.us-east-1.es.localhost.localstack.cloud:4566&lt;/code>.&lt;/p>
&lt;p>For example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl http://my-domain.us-east-1.es.localhost.localstack.cloud:4566
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;name&amp;#34; : &amp;#34;localstack&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;cluster_name&amp;#34; : &amp;#34;elasticsearch&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;cluster_uuid&amp;#34; : &amp;#34;IC7E9daNSiepRBB9Ksul7w&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;version&amp;#34; : {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;number&amp;#34; : &amp;#34;7.10.0&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;build_flavor&amp;#34; : &amp;#34;default&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;build_type&amp;#34; : &amp;#34;tar&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;build_hash&amp;#34; : &amp;#34;51e9d6f22758d0374a0f3f5c6e8f3a7997850f96&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;build_date&amp;#34; : &amp;#34;2020-11-09T21:30:33.964949Z&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;build_snapshot&amp;#34; : false,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;lucene_version&amp;#34; : &amp;#34;8.7.0&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;minimum_wire_compatibility_version&amp;#34; : &amp;#34;6.8.0&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;minimum_index_compatibility_version&amp;#34; : &amp;#34;6.0.0-beta1&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;tagline&amp;#34; : &amp;#34;You Know, for Search&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Or the health endpoint:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl -s http://my-domain.us-east-1.es.localhost.localstack.cloud:4566/_cluster/health | jq .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;cluster_name&amp;#34;: &amp;#34;elasticsearch&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;status&amp;#34;: &amp;#34;green&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;timed_out&amp;#34;: false,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;number_of_nodes&amp;#34;: 1,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;number_of_data_nodes&amp;#34;: 1,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;active_primary_shards&amp;#34;: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;active_shards&amp;#34;: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;relocating_shards&amp;#34;: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;initializing_shards&amp;#34;: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;unassigned_shards&amp;#34;: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;delayed_unassigned_shards&amp;#34;: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;number_of_pending_tasks&amp;#34;: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;number_of_in_flight_fetch&amp;#34;: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;task_max_waiting_in_queue_millis&amp;#34;: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;active_shards_percent_as_number&amp;#34;: 100
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="advanced-topics">Advanced topics&lt;/h2>
&lt;h3 id="endpoints">Endpoints&lt;/h3>
&lt;p>There are three configurable strategies that govern how domain endpoints are created, and can be configured via the &lt;code>OPENSEARCH_ENDPOINT_STRATEGY&lt;/code> (previously &lt;code>ES_ENDPOINT_STRATEGY&lt;/code>) environment variable.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Value&lt;/th>
&lt;th>Format&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>domain&lt;/code>&lt;/td>
&lt;td>&lt;code>&amp;lt;domain-name&amp;gt;.&amp;lt;region&amp;gt;.es.localhost.localstack.cloud:4566&lt;/code>&lt;/td>
&lt;td>This is the default strategy that uses the &lt;code>localhost.localstack.cloud&lt;/code> domain to route to your localhost&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>path&lt;/code>&lt;/td>
&lt;td>&lt;code>localhost:4566/es/&amp;lt;region&amp;gt;/&amp;lt;domain-name&amp;gt;&lt;/code>&lt;/td>
&lt;td>An alternative that can be useful if you cannot resolve LocalStack&amp;rsquo;s localhost domain&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>port&lt;/code>&lt;/td>
&lt;td>&lt;code>localhost:&amp;lt;port-from-range&amp;gt;&lt;/code>&lt;/td>
&lt;td>Exposes the cluster(s) directly with ports from the &lt;a href="/references/external-ports/">external service port range&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>off&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;em>Deprecated&lt;/em>. This value now reverts to the &lt;code>port&lt;/code> setting, using a port from the given range instead of &lt;code>4571&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Regardless of the service from which the clusters were created, the domain of the cluster always corresponds to the engine type (OpenSearch or Elasticsearch) of the cluster.
OpenSearch cluster therefore have &lt;code>opensearch&lt;/code> in their domain (e.g. &lt;code>my-domain.us-east-1.opensearch.localhost.localstack.cloud:4566&lt;/code>) and Elasticsearch clusters have &lt;code>es&lt;/code> in their domain (e.g. &lt;code>my-domain.us-east-1.es.localhost.localstack.cloud:4566&lt;/code>)&lt;/p>
&lt;h4 id="custom-endpoints">Custom Endpoints&lt;/h4>
&lt;p>LocalStack allows you to set arbitrary custom endpoints for your clusters in the domain endpoint options.
This can be used to overwrite the behavior of the endpoint strategies described above.
You can also choose custom domains, however it is important to add the edge port (&lt;code>80&lt;/code>/&lt;code>443&lt;/code> or by default &lt;code>4566&lt;/code>).&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal es create-elasticsearch-domain --domain-name my-domain \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --elasticsearch-version 7.10 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --domain-endpoint-options &amp;#39;{ &amp;#34;CustomEndpoint&amp;#34;: &amp;#34;http://localhost:4566/my-custom-endpoint&amp;#34;, &amp;#34;CustomEndpointEnabled&amp;#34;: true }&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Once the domain processing is complete, you can access the cluster:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl http://localhost:4566/my-custom-endpoint/_cluster/health&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="re-using-a-single-cluster-instance">Re-using a single cluster instance&lt;/h3>
&lt;p>In some cases, you may not want to create a new cluster instance for each domain,
for example when you are only interested in testing API interactions instead of actual Elasticsearch functionality.
In this case, you can set &lt;code>OPENSEARCH_MULTI_CLUSTER=0&lt;/code> (previously &lt;code>ES_MULTI_CLUSTER&lt;/code>).
This will multiplex all domains to the same cluster, or return the same port every time when using the &lt;code>port&lt;/code> endpoint strategy.
This can however lead to unexpected behavior when persisting data into Elasticsearch, or creating clusters with different versions, so we do not recommend it.&lt;/p>
&lt;h3 id="storage-layout">Storage Layout&lt;/h3>
&lt;p>Elasticsearch will be organized in your state directory as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span style="display:flex;">&lt;span>localstack@machine % tree -L 4 volume/state
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── elasticsearch
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── arn:aws:es:us-east-1:000000000000:domain
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── my-cluster-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ ├── backup
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ ├── data
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └── tmp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── my-cluster-2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ ├── backup
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ ├── data
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └── tmp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="advanced-security-options">Advanced Security Options&lt;/h3>
&lt;p>Since LocalStack 1.4.0, the OpenSearch and ElasticSearch services support &amp;ldquo;Advanced Security Options&amp;rdquo;.
This feature is currently only supported for OpenSearch domains (which can also be created by the elasticsearch service).
More info can be found on &lt;a href="../opensearch#advanced-security-options">the OpenSearch Service docs page&lt;/a>.&lt;/p>
&lt;h2 id="custom-elasticsearch-backends">Custom Elasticsearch backends&lt;/h2>
&lt;p>LocalStack downloads elasticsearch asynchronously the first time you run the &lt;code>aws es create-elasticsearch-domain&lt;/code>, so you will get the response from localstack first and then (after download/install) you will have your elasticsearch cluster running locally.
You may not want this, and instead use your already running elasticsearch cluster.
This can also be useful when you want to run a cluster with a custom configuration that localstack does not support.&lt;/p>
&lt;p>To customize the elasticsearch backend, you can your own elasticsearch cluster locally and point localstack to it using the &lt;code>OPENSEARCH_CUSTOM_BACKEND&lt;/code> (previously &lt;code>ES_CUSTOM_BACKEND&lt;/code>) environment variable.
Note that only a single backend can be configured, meaning that you will get a similar behavior as when you &lt;a href="#re-using-a-single-cluster-instance">re-use a single cluster instance&lt;/a>.&lt;/p>
&lt;h3 id="example">Example&lt;/h3>
&lt;p>The following shows a sample docker-compose file that contains a single-noded elasticsearch cluster and a basic localstack setp.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">version&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;3.9&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">services&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">elasticsearch&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">container_name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">elasticsearch&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">image&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">docker.elastic.co/elasticsearch/elasticsearch:7.10.2&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">environment&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">node.name=elasticsearch&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">cluster.name=es-docker-cluster&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">discovery.type=single-node&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">bootstrap.memory_lock=true&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;ES_JAVA_OPTS=-Xms512m -Xmx512m&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">ports&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;9200:9200&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">ulimits&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">memlock&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">soft&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>-&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">hard&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>-&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">volumes&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">data01:/usr/share/elasticsearch/data&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">localstack&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">container_name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;${LOCALSTACK_DOCKER_NAME-localstack-main}&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">image&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">localstack/localstack&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">ports&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;4566:4566&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">depends_on&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">elasticsearch&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">environment&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">ES_CUSTOM_BACKEND=http://elasticsearch:9200&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">DEBUG=${DEBUG- }&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">PERSISTENCE=${PERSISTENCE- }&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">DOCKER_HOST=unix:///var/run/docker.sock&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">volumes&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;/var/run/docker.sock:/var/run/docker.sock&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">volumes&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">data01&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">driver&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">local&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol>
&lt;li>
&lt;p>Run docker compose:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>docker-compose up -d&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Create the Elasticsearch domain:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal es create-elasticsearch-domain \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --domain-name mylogs-2 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --elasticsearch-version 7.10 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --elasticsearch-cluster-config &amp;#39;{ &amp;#34;InstanceType&amp;#34;: &amp;#34;m3.xlarge.elasticsearch&amp;#34;, &amp;#34;InstanceCount&amp;#34;: 4, &amp;#34;DedicatedMasterEnabled&amp;#34;: true, &amp;#34;ZoneAwarenessEnabled&amp;#34;: true, &amp;#34;DedicatedMasterType&amp;#34;: &amp;#34;m3.xlarge.elasticsearch&amp;#34;, &amp;#34;DedicatedMasterCount&amp;#34;: 3}&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DomainStatus&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DomainId&amp;#34;: &amp;#34;000000000000/mylogs-2&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DomainName&amp;#34;: &amp;#34;mylogs-2&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ARN&amp;#34;: &amp;#34;arn:aws:es:us-east-1:000000000000:domain/mylogs-2&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Created&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Deleted&amp;#34;: false,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Endpoint&amp;#34;: &amp;#34;mylogs-2.us-east-1.es.localhost.localstack.cloud:4566&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Processing&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ElasticsearchVersion&amp;#34;: &amp;#34;7.10&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ElasticsearchClusterConfig&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;InstanceType&amp;#34;: &amp;#34;m3.xlarge.elasticsearch&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;InstanceCount&amp;#34;: 4,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DedicatedMasterEnabled&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ZoneAwarenessEnabled&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DedicatedMasterType&amp;#34;: &amp;#34;m3.xlarge.elasticsearch&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DedicatedMasterCount&amp;#34;: 3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;EBSOptions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;EBSEnabled&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;VolumeType&amp;#34;: &amp;#34;gp2&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;VolumeSize&amp;#34;: 10,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Iops&amp;#34;: 0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;CognitoOptions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Enabled&amp;#34;: false
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>If the &lt;code>Processing&lt;/code> status is true, it means that the cluster is not yet healthy. You can run &lt;code>describe-elasticsearch-domain&lt;/code> to receive the status:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal es describe-elasticsearch-domain --domain-name mylogs-2&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Check the cluster health endpoint and create indices:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl mylogs-2.us-east-1.es.localhost.localstack.cloud:4566/_cluster/health
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{&amp;#34;cluster_name&amp;#34;:&amp;#34;es-docker-cluster&amp;#34;,&amp;#34;status&amp;#34;:&amp;#34;green&amp;#34;,&amp;#34;timed_out&amp;#34;:false,&amp;#34;number_of_nodes&amp;#34;:1,&amp;#34;number_of_data_nodes&amp;#34;:1,&amp;#34;active_primary_shards&amp;#34;:0,&amp;#34;active_shards&amp;#34;:0,&amp;#34;relocating_shards&amp;#34;:0,&amp;#34;initializing_shards&amp;#34;:0,&amp;#34;unassigned_shards&amp;#34;:0,&amp;#34;delayed_unassigned_shards&amp;#34;:0,&amp;#34;number_of_pending_tasks&amp;#34;:0,&amp;#34;number_of_in_flight_fetch&amp;#34;:0,&amp;#34;task_max_waiting_in_queue_millis&amp;#34;:0,&amp;#34;active_shards_percent_as_number&amp;#34;:100.0}[~]&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Create an example index:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl -X PUT mylogs-2.us-east-1.es.localhost.localstack.cloud:4566/my-index
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{&amp;#34;acknowledged&amp;#34;:true,&amp;#34;shards_acknowledged&amp;#34;:true,&amp;#34;index&amp;#34;:&amp;#34;my-index&amp;#34;}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="differences-to-aws">Differences to AWS&lt;/h2>
&lt;ul>
&lt;li>By default, AWS only sets the &lt;code>Endpoint&lt;/code> attribute of the cluster status once the cluster is up.
LocalStack will return the endpoint immediately, but keep &lt;code>Processing = &amp;quot;true&amp;quot;&lt;/code> until the cluster has been started.&lt;/li>
&lt;li>The &lt;code>CustomEndpointOptions&lt;/code> allows arbitrary endpoint URLs, which is not allowed in AWS&lt;/li>
&lt;/ul></description></item><item><title>User-Guide: EventBridge</title><link>/user-guide/aws/eventbridge/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/eventbridge/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>EventBridge provides a centralized mechanism to discover and communicate events across various AWS services and applications. EventBridge allows you to register, track, and resolve events, which indicates a change in the environment and then applies a rule to route the event to a target. EventBridge rules are tied to an Event Bus to manage event-driven workflows. You can use either identity-based or resource-based policies to control access to EventBridge resources, where the former can be attached to IAM users, groups, and roles, and the latter can be attached to specific AWS resources.&lt;/p>
&lt;p>LocalStack supports EventBridge via the Community offering, allowing you to use the EventBridge APIs in your local environment to create rules that route events to a target. The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_events/">API coverage page&lt;/a>, which provides information on the extent of EventBridge&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;h2 id="getting-started">Getting Started&lt;/h2>
&lt;p>This guide is designed for users new to EventBridge and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method. We will demonstrate creating an EventBridge rule to run a Lambda function on a schedule.&lt;/p>
&lt;h3 id="create-a-lambda-function">Create a Lambda Function&lt;/h3>
&lt;p>To create a new Lambda function, create a new file called &lt;code>index.js&lt;/code> with the following code:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&amp;#39;use strict&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">exports&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">handler&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">event&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">context&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">callback&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">=&amp;gt;&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">console&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">log&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;LogScheduledEvent&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">console&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">log&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;Received event:&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">JSON&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">stringify&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">event&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">callback&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;Finished&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Run the following command to create a new Lambda function using the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/lambda/create-function.html">&lt;code>CreateFunction&lt;/code>&lt;/a> API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>zip function.zip index.js
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal lambda create-function \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --function-name events-example \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --runtime nodejs16.x \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --zip-file fileb://function.zip \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --handler index.handler \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --role arn:aws:iam::000000000000:role/cool-stacklifter&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The output will consist of the &lt;code>FunctionArn&lt;/code>, which you will need to add the Lambda function to the EventBridge target.&lt;/p>
&lt;h3 id="create-an-eventbridge-rule">Create an EventBridge Rule&lt;/h3>
&lt;p>Run the following command to create a new EventBridge rule using the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/events/put-rule.html">&lt;code>PutRule&lt;/code>&lt;/a> API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal events put-rule \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --name my-scheduled-rule \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --schedule-expression &amp;#39;rate(2 minutes)&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>In the above command, we have specified a schedule expression of &lt;code>rate(2 minutes)&lt;/code>, which will run the rule every two minutes. It means that the Lambda function will be invoked every two minutes.&lt;/p>
&lt;p>Next, grant the EventBridge service principal (&lt;code>events.amazonaws.com&lt;/code>) permission to run the rule, using the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/events/add-permission.html">&lt;code>AddPermission&lt;/code>&lt;/a> API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal lambda add-permission \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --function-name events-example \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --statement-id my-scheduled-event \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --action &amp;#39;lambda:InvokeFunction&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --principal events.amazonaws.com \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --source-arn arn:aws:events:us-east-1:000000000000:rule/my-scheduled-rule&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="add-the-lambda-function-as-a-target">Add the Lambda Function as a Target&lt;/h3>
&lt;p>Create a file named &lt;code>targets.json&lt;/code> with the following content:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Id&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;1&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Arn&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;arn:aws:lambda:us-east-1:000000000000:function:events-example&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Finally, add the Lambda function as a target to the EventBridge rule using the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/events/put-targets.html">&lt;code>PutTargets&lt;/code>&lt;/a> API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal events put-targets \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --rule my-scheduled-rule \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --targets file://targets.json&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="verify-the-lambda-invocation">Verify the Lambda invocation&lt;/h3>
&lt;p>You can verify the Lambda invocation by checking the CloudWatch logs. However, wait at least 2 minutes after running the last command before checking the logs.&lt;/p>
&lt;p>Run the following command to list the CloudWatch log groups:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal logs describe-log-groups&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The output will contain the log group name, which you can use to list the log streams:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal logs describe-log-streams \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --log-group-name /aws/lambda/events-example&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Alternatively, you can fetch LocalStack logs to verify the Lambda invocation:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack logs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-07-17T09:37:52.028 INFO --- [ asgi_gw_0] localstack.request.aws : AWS lambda.Invoke =&amp;gt; 202
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-07-17T09:37:52.106 INFO --- [ asgi_gw_0] localstack.request.http : POST /_localstack_lambda/97e08ac50c18930f131d9dd9744b8df4/invocations/ecb744d0-b3f2-400f-9e49-c85cf12b1e00/logs =&amp;gt; 202
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-07-17T09:37:52.114 INFO --- [ asgi_gw_0] localstack.request.http : POST /_localstack_lambda/97e08ac50c18930f131d9dd9744b8df4/invocations/ecb744d0-b3f2-400f-9e49-c85cf12b1e00/response =&amp;gt; 202
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="resource-browser">Resource Browser&lt;/h2>
&lt;p>The LocalStack Web Application provides a Resource Browser for managing EventBridge Buses. You can access the Resource Browser by opening the LocalStack Web Application in your browser, navigating to the &lt;strong>Resources&lt;/strong> section, and then clicking on &lt;strong>EventBridge&lt;/strong> under the &lt;strong>App Integration&lt;/strong> section.&lt;/p>
&lt;p>The Resource Browser allows you to perform the following actions:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>View the Event Buses&lt;/strong>: You can view the list of EventBridge Buses running locally, alongside their Amazon Resource Names (ARNs) and Policies.&lt;/li>
&lt;li>&lt;strong>Create Event Rule&lt;/strong>: You can create a new Event Rule by specifying &lt;strong>Name&lt;/strong>, &lt;strong>Description&lt;/strong>, &lt;strong>Event Pattern&lt;/strong>, &lt;strong>Schedule Expressions&lt;/strong>, &lt;strong>State&lt;/strong>, &lt;strong>Role ARN&lt;/strong>, and &lt;strong>Tags&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Trigger Event&lt;/strong>: You can trigger an Event by specifying the &lt;strong>Entries&lt;/strong> and &lt;strong>Endpoint Id&lt;/strong>. While creating an Entry, you must specify &lt;strong>Source&lt;/strong>, &lt;strong>Event Bus Name&lt;/strong>, &lt;strong>Detail&lt;/strong>, &lt;strong>Resources&lt;/strong>, &lt;strong>Detail Type&lt;/strong>, and &lt;strong>Trace Header&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Remove Selected&lt;/strong>: You can remove the selected EventBridge Bus.&lt;/li>
&lt;/ul></description></item><item><title>User-Guide: Fault Injection Simulator (FIS)</title><link>/user-guide/aws/fis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/fis/</guid><description>
&lt;p>Basic support for the Fault Injection Simulator (FIS) service is included in LocalStack Pro. The local FIS API allows you to introduce faults to other services - in order to check how your setup behaves when parts of it stop working.
The full list of such possible fault injections - called &amp;ldquo;actions&amp;rdquo; - is available in the &lt;a href="https://docs.aws.amazon.com/fis/latest/userguide/fis-actions-reference.html">AWS docs&lt;/a>.&lt;/p>
&lt;p>In general, calls to FIS contain the following information:&lt;/p>
&lt;ol>
&lt;li>What kind of fault to introduce - &amp;ldquo;action&amp;rdquo;.&lt;/li>
&lt;li>What kind of resources to affect - &amp;ldquo;target&amp;rdquo;.&lt;/li>
&lt;li>(sometimes) Duration of the interruption. After the specified amount of time FIS is supposed to revert systems to their original state or to stop introducing faults.&lt;/li>
&lt;/ol>
&lt;p>FIS actions come in roughly two types:&lt;/p>
&lt;ol>
&lt;li>A single-time event, e.g., &lt;code>aws:ec2:stop-instances&lt;/code> FIS action is a &lt;code>stop-instances&lt;/code> command sent to target EC2 instances. Results of some of these single-time events can be automatically reverted after a specified period of time, e.g., by sending &lt;code>start-instances&lt;/code> command to the affected instances.&lt;/li>
&lt;li>Generation of API errors in response to a specified percentage of API calls, e.g., &lt;code>aws:fis:inject-api-unavailable-error&lt;/code> to inject an HTTP 503 error. Currently AWS only supports this for EC2 API calls.&lt;/li>
&lt;/ol>
&lt;h1 id="most-notable-current-fis-limitations-in-localstack">Most notable current FIS limitations in LocalStack&lt;/h1>
&lt;ol>
&lt;li>Only a subset of FIS actions available in AWS are currently supported in LocalStack (unsupported actions generate an error). The set of supported actions is extended on an ongoing basis, and new actions can easily be added on demand.&lt;/li>
&lt;li>LocalStack doesn&amp;rsquo;t support target selection mechanism used by AWS. See &lt;a href="https://docs.aws.amazon.com/fis/latest/userguide/targets.html#target-selection-mode">selection mode documentation for more info&lt;/a>&lt;/li>
&lt;li>LocalStack currently ignores &lt;a href="https://docs.aws.amazon.com/fis/latest/APIReference/API_ExperimentTemplate.html#fis-Type-ExperimentTemplate-roleArn">&lt;code>roleArn&lt;/code>s&lt;/a>. In AWS FIS performs actions under permissions granted to given &lt;code>roleArn&lt;/code>s.&lt;/li>
&lt;/ol>
&lt;h1 id="what-fis-in-localstack-offers-in-addition-to-what-fis-in-aws-does">What FIS in LocalStack offers in addition to what FIS in AWS does&lt;/h1>
&lt;p>Localstack offers &lt;code>localstack:generic:api-error&lt;/code> action. The action is similar to actions like &lt;code>aws:fis:inject-api-unavailable-error&lt;/code> that are supported in AWS - it allows a user to introduce errors to API calls. The difference with AWS is that AWS FIS currently supports this only for EC2 API calls and then is only able to generate a few errors there, while &lt;code>localstack:generic:api-error&lt;/code> in LocalStack FIS allows a user to configure any desired faults for any API calls. In its &lt;code>parameters&lt;/code> section it is possible to set the following:&lt;/p>
&lt;ul>
&lt;li>&lt;code>region&lt;/code> - A name of a region to introduce faults to, e.g. &amp;ldquo;us-west-1&amp;rdquo;. Default: the region you are starting your experiment in.&lt;/li>
&lt;li>&lt;code>service&lt;/code> - A name of a service to limit the faults to, e.g. &amp;ldquo;kms&amp;rdquo;. Default: all services.&lt;/li>
&lt;li>&lt;code>operation&lt;/code> - A name of an operation for the specified service to limit the faults to, e.g. &amp;ldquo;ListKeys&amp;rdquo;. Default: all operations.&lt;/li>
&lt;li>&lt;code>percentage&lt;/code> - A percentage of all calls to matching API calls to fail. Default: &amp;ldquo;100&amp;rdquo;.&lt;/li>
&lt;li>&lt;code>exception&lt;/code> - A name of an exception to raise for API calls affected by FIS. Default: &amp;ldquo;InternalError&amp;rdquo;.&lt;/li>
&lt;li>&lt;code>errorCode&lt;/code> - An HTTP error code to return for an API call affected by FIS. Default: &amp;ldquo;500&amp;rdquo;.&lt;/li>
&lt;/ul>
&lt;h1 id="tutorial">Tutorial&lt;/h1>
&lt;p>First, let&amp;rsquo;s create a file (named &lt;code>create-experiment.json&lt;/code> in this case) with the following JSON configuration for a later call to FIS &lt;code>CreateExperimentTemplate&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;actions&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Some test action&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;actionId&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;localstack:generic:api-error&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;parameters&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;service&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;kms&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;operation&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;ListKeys&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;percentage&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;100&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;exception&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;SomeTerribleException&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;errorCode&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;400&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;description&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;template for a test action&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;stopConditions&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;source&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;none&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;roleArn&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;arn:aws:iam:123456789012:role/ExperimentRole&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This config is going to make 100% of KMS ListKeys API calls fail with a 400 HTTP code. Settings for &lt;code>stopConditions&lt;/code> and &lt;code>roleArn&lt;/code> here do not matter, as LocalStack doesn&amp;rsquo;t currently act on them in any way. But they have to be present, as these are required fields by the AWS specifications.&lt;/p>
&lt;p>The next step is to create a FIS experiment template using our file. Keep in mind that &lt;code>file://&lt;/code> here is required, without it you are going to get an error.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>awslocal fis create-experiment-template --cli-input-json file://create-experiment.json
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The output is going to be something like:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;experimentTemplate&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;id&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;7b9ec603-1d20-4a8f-8eda-b1c3e7b28540&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;description&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;template for a test action&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;actions&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Some test action&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;actionId&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;localstack:generic:api-error&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;parameters&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;service&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;kms&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;operation&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;ListKeys&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;percentage&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;100&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;exception&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;SomeTerribleException&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;errorCode&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;400&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;stopConditions&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;source&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;none&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;creationTime&amp;#34;&lt;/span>: 1661772176.772892,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;lastUpdateTime&amp;#34;&lt;/span>: 1661772176.772892,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;roleArn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:iam:123456789012:role/ExperimentRole&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You are going to need the ID (&lt;code>7b9ec603-1d20-4a8f-8eda-b1c3e7b28540&lt;/code> in this case) to start an actual experiment. And if you lose the ID, you can always list all available experiment templates with&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>awslocal fis list-experiment-templates
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You also can check all the details for the template later using:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>awslocal fis get-experiment-template --id 7b9ec603-1d20-4a8f-8eda-b1c3e7b28540
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now let&amp;rsquo;s check that KMS ListKeys actually works before we introduce our API disruprions:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>awslocal kms list-keys
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Your output might differ, but for a fresh start of LocalStack the output should just be an empty list:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Keys&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Time to start our experiment:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>awslocal fis start-experiment --experiment-template-id 7b9ec603-1d20-4a8f-8eda-b1c3e7b28540
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Keep in mind the ID of the experiment in the output (&lt;code>8b98db02-1c46-49fd-8075-8ff3368fb0a3&lt;/code> in this example), as you would need it to stop the experiment:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;experiment&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;id&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;8b98db02-1c46-49fd-8075-8ff3368fb0a3&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;experimentTemplateId&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;7b9ec603-1d20-4a8f-8eda-b1c3e7b28540&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;roleArn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:iam:123456789012:role/ExperimentRole&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;state&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;status&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;running&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;actions&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Some test action&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;actionId&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;localstack:generic:api-error&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;parameters&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;service&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;kms&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;operation&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;ListKeys&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;percentage&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;100&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;exception&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;SomeTerribleException&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;errorCode&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;400&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;stopConditions&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;source&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;none&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;creationTime&amp;#34;&lt;/span>: 1661772189.015712,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;startTime&amp;#34;&lt;/span>: 1661772189.015712
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>As with the templates, you can use the following command to list all experiments:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>awslocal fis list-experiments
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Use the following command to get the details about the experiment again.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>awslocal fis get-experiment --id 8b98db02-1c46-49fd-8075-8ff3368fb0a3
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Let&amp;rsquo;s check if this has affected our KMS:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>awslocal kms list-keys
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If everything worked (or rather failed) as expected, you should see the following:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>An error occurred &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>SomeTerribleException&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> when calling the ListKeys operation: Failing as per Fault Injection Simulator configuration
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Let&amp;rsquo;s check just in case if other API calls to KMS or other services are affected. For example, can use&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>awslocal kms list-aliases
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>awslocal sqs list-queues
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Both should succeed.&lt;/p>
&lt;p>To stop the experiment and to let everything get back to normal we can run:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>awslocal fis stop-experiment --id 8b98db02-1c46-49fd-8075-8ff3368fb0a3
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After that &lt;code>awslocal kms list-keys&lt;/code> is supposed to succeed again.&lt;/p></description></item><item><title>User-Guide: Glacier</title><link>/user-guide/aws/glacier/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/glacier/</guid><description>
&lt;p>Glacier is a data storage service provided by Amazon Web Services to suit the long-term storage of archives and backup of infrequently accessed data. It offers various retrieval options, different levels of retrieval speed, and more. Glacier uses a Vault container to store your data, similar to how S3 stores data in Buckets. A Vault further holds the data in an Archive, which can contain text, images, video, and audio files. Glacier uses Jobs to retrieve, update, or delete the data in an Archive.&lt;/p>
&lt;p>LocalStack provides Glacier support via our Pro offering. You can use the Glacier API to configure and set up data archive backup, restore and delete operations. The supported APIs are available over our &lt;a href="/user-guide/aws/feature-coverage/">feature coverage page&lt;/a>.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>In this getting started guide, you&amp;rsquo;ll learn how to make a basic usage of Glacier over LocalStack. This guide is intended for users who wish to get more acquainted with Glacier, and assumes you have basic knowledge of the AWS CLI (and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script). First, start your LocalStack instance using your preferred method, then run the following commands:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Create a vault with the &lt;code>create-vault&lt;/code> command using the &lt;code>awslocal&lt;/code> CLI:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glacier create-vault --account-id - --vault-name &amp;lt;VAULT-NAME&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Get the details of the vault using the &lt;code>describe-vault&lt;/code> command:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glacier describe-vault --account-id - --vault-name &amp;lt;VAULT-NAME&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>List out the current and previous processes, called Jobs, to monitor the requests sent to the Glacier API:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glacier list-jobs --account-id - --vault-name &amp;lt;VAULT-NAME&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Initiate a job of the specified type to get the details of the individual inventory items inside a Vault using the &lt;code>initiate-job&lt;/code> command:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glacier initiate-job --account-id - --vault-name &amp;lt;VAULT-NAME&amp;gt; --vault-name &amp;lt;VAULT-NAME&amp;gt; --job-parameters &amp;lt;JSON-CONFIGURATION-FILE&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
JSON Configuration Options can be found &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/glacier/initiate-job.html">on the official AWS documentation&lt;/a>. The following setting can be used in case of Inventory retrieval: &lt;code>{ &amp;quot;Type&amp;quot;: &amp;quot;inventory-retrieval&amp;quot;, &amp;quot;ArchiveId&amp;quot;: &amp;lt;ARCHIVE-ID&amp;gt; }&lt;/code>. Archive ID can be got as an output of the Data Upload/List Jobs request.
&lt;/div>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Use the &lt;code>upload-archive&lt;/code> command to upload an archive to a vault:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glacier upload-archive --account-id - --vault-name &amp;lt;VAULT_NAME&amp;gt; --body &amp;lt;FILE-TO-UPLOAD&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
Data upload to Glacier can accept only Individual files or Archives.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Download the required archive based on the Archive ID using the &lt;code>initiate-job&lt;/code> command:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glacier initiate-job --account-id - --vault-name &amp;lt;VAULT-NAME&amp;gt; --job-parameters &amp;lt;JSON-CONFIGURATION-FILE&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
JSON Configuration Options can be found &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/glacier/initiate-job.html">on the official AWS documentation&lt;/a>. The following setting can be used in case of Inventory retrieval: &lt;code>{ &amp;quot;Type&amp;quot;: &amp;quot;archive-retrieval&amp;quot;, &amp;quot;ArchiveId&amp;quot;: &amp;lt;ARCHIVE-ID&amp;gt; }&lt;/code>. Archive ID can be got as an output of the Data Upload/List Jobs request.
&lt;/div>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The data download process can be verified through the List Jobs command to check progress. Once the Job is complete the data can be downloaded to the current location using the following command:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glacier get-job-output --account-id - --vault-name &amp;lt;VAULT-NAME&amp;gt; --job-id &amp;lt;JOB-ID&amp;gt; &amp;lt;OUTPUT-FILE-NAME.OUTPUT-FILE-TYPE&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Delete the archive using the &lt;code>delete-archive&lt;/code> command:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glacier delete-archive --account-id - --vault-name &amp;lt;VAULT-NAME&amp;gt; --archive-id &amp;lt;ARCHIVE-ID&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>User-Guide: Glue</title><link>/user-guide/aws/glue/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/glue/</guid><description>
&lt;p>The Glue API in LocalStack Pro allows you to run ETL (Extract-Transform-Load) jobs locally, maintaining table metadata in the local Glue data catalog, and using the Spark ecosystem (PySpark/Scala) to run data processing workflows.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
In order to run Glue jobs, some additional dependencies have to be fetched from the network, including a Docker image of apprx. 1.5GB which includes Spark, Presto, Hive and other tools. These dependencies are automatically fetched when you start up the service, so please make sure you&amp;rsquo;re on a decent internet connection when pulling the dependencies for the first time.
&lt;/div>
&lt;h2 id="creating-databases-and-table-metadata">Creating Databases and Table Metadata&lt;/h2>
&lt;p>The commands below illustrate the creation of some very basic entries (databases, tables) in the Glue data catalog:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue create-database --database-input &amp;#39;{&amp;#34;Name&amp;#34;:&amp;#34;db1&amp;#34;}&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue create-table --database db1 --table-input &amp;#39;{&amp;#34;Name&amp;#34;:&amp;#34;table1&amp;#34;}&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue get-tables --database db1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;TableList&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Name&amp;#34;: &amp;#34;table1&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DatabaseName&amp;#34;: &amp;#34;db1&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;h2 id="running-scripts-with-scala-and-pyspark">Running Scripts with Scala and PySpark&lt;/h2>
&lt;p>Assuming we would like to deploy a simple PySpark script &lt;code>job.py&lt;/code> in the local folder, we can first copy the script to an S3 bucket:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 mb s3://glue-test
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 cp job.py s3://glue-test/job.py&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;p>Next, we can create a job definition:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue create-job --name job1 --role arn:aws:iam::000000000000:role/glue-role \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --command &amp;#39;{&amp;#34;Name&amp;#34;: &amp;#34;pythonshell&amp;#34;, &amp;#34;ScriptLocation&amp;#34;: &amp;#34;s3://glue-test/job.py&amp;#34;}&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&amp;hellip; and finally start the job:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue start-job-run --job-name job1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;JobRunId&amp;#34;: &amp;#34;733b76d0&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
The returned &lt;code>JobRunId&lt;/code> can be used to query the status job the job execution, until it becomes &lt;code>SUCCEEDED&lt;/code>:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue get-job-run --job-name job1 --run-id 733b76d0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;JobRun&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Id&amp;#34;: &amp;#34;733b76d0&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Attempt&amp;#34;: 1,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;JobRunState&amp;#34;: &amp;#34;SUCCEEDED&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;p>For a more detailed example illustrating how to run a local Glue PySpark job, please refer to this &lt;a href="https://github.com/localstack/localstack-pro-samples/tree/master/glue-etl-jobs">sample repository&lt;/a>.&lt;/p>
&lt;h2 id="importing-athena-tables-into-glue-data-catalog">Importing Athena Tables into Glue Data Catalog&lt;/h2>
&lt;p>The Glue data catalog is integrated with Athena, and the database/table definitions can be imported via the &lt;code>import-catalog-to-glue&lt;/code> API.&lt;/p>
&lt;p>Assume you are running the following Athena queries to create databases and table definitions:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">CREATE&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">DATABASE&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">db2&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">CREATE&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">EXTERNAL&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">TABLE&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">db2&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">table1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">a1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87">Date&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">a2&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">STRING&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">a3&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87">INT&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">LOCATION&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#39;s3://test/table1&amp;#39;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">CREATE&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">EXTERNAL&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">TABLE&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">db2&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">table2&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">a1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87">Date&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">a2&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">STRING&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">a3&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87">INT&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">LOCATION&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#39;s3://test/table2&amp;#39;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then this command will import these DB/table definitions into the Glue data catalog:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue import-catalog-to-glue&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;p>&amp;hellip; and finally they will be available in Glue:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue get-databases
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DatabaseList&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Name&amp;#34;: &amp;#34;db2&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Description&amp;#34;: &amp;#34;Database db2 imported from Athena&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;TargetDatabase&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;CatalogId&amp;#34;: &amp;#34;000000000000&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DatabaseName&amp;#34;: &amp;#34;db2&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue get-tables --database-name db2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;TableList&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Name&amp;#34;: &amp;#34;table1&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DatabaseName&amp;#34;: &amp;#34;db2&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Description&amp;#34;: &amp;#34;Table db2.table1 imported from Athena&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;CreateTime&amp;#34;: ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Name&amp;#34;: &amp;#34;table2&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DatabaseName&amp;#34;: &amp;#34;db2&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Description&amp;#34;: &amp;#34;Table db2.table2 imported from Athena&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;CreateTime&amp;#34;: ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;h2 id="crawlers">Crawlers&lt;/h2>
&lt;p>Glue crawlers allow extracting metadata from structured data sources.&lt;/p>
&lt;p>LocalStack Glue currently supports S3 targets (configurable via &lt;code>S3Targets&lt;/code>), as well as JDBC targets (configurable via &lt;code>JdbcTargets&lt;/code>). Support for other target types is in our pipeline and will be added soon.&lt;/p>
&lt;h3 id="s3-crawler-example">S3 Crawler Example&lt;/h3>
&lt;p>The example below illustrates crawling tables and partition metadata from S3 buckets.&lt;/p>
&lt;p>First, we create an S3 bucket with a couple of items:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 mb s3://test
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>printf &amp;#34;1, 2, 3, 4\n5, 6, 7, 8&amp;#34; &amp;gt; /tmp/file.csv
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 cp /tmp/file.csv s3://test/table1/year=2021/month=Jan/day=1/file.csv
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 cp /tmp/file.csv s3://test/table1/year=2021/month=Jan/day=2/file.csv
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 cp /tmp/file.csv s3://test/table1/year=2021/month=Feb/day=1/file.csv
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 cp /tmp/file.csv s3://test/table1/year=2021/month=Feb/day=2/file.csv&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;p>Then we can create and trigger the crawler:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue create-database --database-input &amp;#39;{&amp;#34;Name&amp;#34;:&amp;#34;db1&amp;#34;}&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue create-crawler --name c1 --database-name db1 --role arn:aws:iam::000000000000:role/glue-role --targets &amp;#39;{&amp;#34;S3Targets&amp;#34;: [{&amp;#34;Path&amp;#34;: &amp;#34;s3://test/table1&amp;#34;}]}&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue start-crawler --name c1&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;p>Finally, we can query the table and partitions metadata that has been created by the crawler:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue get-tables --database-name db1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;TableList&amp;#34;: [{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Name&amp;#34;: &amp;#34;table1&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DatabaseName&amp;#34;: &amp;#34;db1&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;PartitionKeys&amp;#34;: [ ... ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue get-partitions --database-name db1 --table-name table1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Partitions&amp;#34;: [{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Values&amp;#34;: [&amp;#34;2021&amp;#34;, &amp;#34;Jan&amp;#34;, &amp;#34;1&amp;#34;],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DatabaseName&amp;#34;: &amp;#34;db1&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;TableName&amp;#34;: &amp;#34;table1&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;h3 id="jdbc-crawler-example">JDBC Crawler Example&lt;/h3>
&lt;p>When using JDBC crawlers, you can point your crawler towards a Redshift database created in LocalStack.&lt;/p>
&lt;p>Below is a rough outline of the steps required to get the integration for the JDBC crawler working. We can first create the local Redshift cluster via:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal redshift create-cluster --cluster-identifier c1 --node-type dc1.large --master-username test --master-user-password test --db-name db1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Endpoint&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Address&amp;#34;: &amp;#34;localhost.localstack.cloud&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Port&amp;#34;: 4510
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;p>Then we can use any JDBC or Postgres client to create a table &lt;code>mytable1&lt;/code> in the Redshift database, and fill the table with some data.&lt;/p>
&lt;p>Next, we&amp;rsquo;re creating the Glue database, the JDBC connection, as well as the crawler:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue create-database --database-input &amp;#39;{&amp;#34;Name&amp;#34;:&amp;#34;gluedb1&amp;#34;}&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue create-connection --connection-input \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&amp;#34;Name&amp;#34;:&amp;#34;conn1&amp;#34;,&amp;#34;ConnectionType&amp;#34;:&amp;#34;JDBC&amp;#34;,&amp;#34;ConnectionProperties&amp;#34;:{&amp;#34;USERNAME&amp;#34;:&amp;#34;test&amp;#34;,&amp;#34;PASSWORD&amp;#34;:&amp;#34;test&amp;#34;,&amp;#34;JDBC_CONNECTION_URL&amp;#34;:&amp;#34;jdbc:redshift://localhost.localstack.cloud:4510/db1&amp;#34;}}&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue create-crawler --name c1 --database-name gluedb1 --role arn:aws:iam::000000000000:role/glue-role --targets &amp;#39;{&amp;#34;JdbcTargets&amp;#34;:[{&amp;#34;ConnectionName&amp;#34;:&amp;#34;conn1&amp;#34;,&amp;#34;Path&amp;#34;:&amp;#34;db1/%/mytable1&amp;#34;}]}&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue start-crawler --name c1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue get-crawler --name c1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;State&amp;#34;: &amp;#34;RUNNING&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue get-crawler --name c1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;State&amp;#34;: &amp;#34;READY&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;p>Once the crawler has finished running and is back in &lt;code>READY&lt;/code> state, the Glue table within the &lt;code>gluedb1&lt;/code> DB should have been populated and can be queried via the API.&lt;/p>
&lt;h2 id="schema-registry">Schema Registry&lt;/h2>
&lt;p>The Glue Schema Registry allows you to centrally discover, control, and evolve data stream schemas.
With the Schema Registry, you can manage and enforce schemas and schema compatibilities in your streaming applications.
It integrates nicely with &lt;a href="../managed-streaming-for-kafka">Managed Streaming for Kafka (MSK)&lt;/a>.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Currently, LocalStack supports the AVRO dataformat for the Glue Schema Registry. Support for other dataformats will be added in the future.
&lt;/div>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue create-registry --registry-name demo-registry
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;RegistryArn&amp;#34;: &amp;#34;arn:aws:glue:us-east-1:000000000000:file-registry/demo-registry&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;RegistryName&amp;#34;: &amp;#34;demo-registry&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue create-schema --schema-name demo-schema --registry-id RegistryName=demo-registry --data-format AVRO --compatibility FORWARD \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --schema-definition &amp;#39;{&amp;#34;type&amp;#34;:&amp;#34;record&amp;#34;,&amp;#34;namespace&amp;#34;:&amp;#34;Demo&amp;#34;,&amp;#34;name&amp;#34;:&amp;#34;Person&amp;#34;,&amp;#34;fields&amp;#34;:[{&amp;#34;name&amp;#34;:&amp;#34;Name&amp;#34;,&amp;#34;type&amp;#34;:&amp;#34;string&amp;#34;}]}&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;RegistryName&amp;#34;: &amp;#34;demo-registry&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;RegistryArn&amp;#34;: &amp;#34;arn:aws:glue:us-east-1:000000000000:file-registry/demo-registry&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;SchemaName&amp;#34;: &amp;#34;demo-schema&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;SchemaArn&amp;#34;: &amp;#34;arn:aws:glue:us-east-1:000000000000:schema/demo-registry/demo-schema&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DataFormat&amp;#34;: &amp;#34;AVRO&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Compatibility&amp;#34;: &amp;#34;FORWARD&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;SchemaCheckpoint&amp;#34;: 1,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;LatestSchemaVersion&amp;#34;: 1,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;NextSchemaVersion&amp;#34;: 2,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;SchemaStatus&amp;#34;: &amp;#34;AVAILABLE&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;SchemaVersionId&amp;#34;: &amp;#34;546d3220-6ab8-452c-bb28-0f1f075f90dd&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;SchemaVersionStatus&amp;#34;: &amp;#34;AVAILABLE&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue register-schema-version --schema-id SchemaName=demo-schema,RegistryName=demo-registry \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --schema-definition &amp;#39;{&amp;#34;type&amp;#34;:&amp;#34;record&amp;#34;,&amp;#34;namespace&amp;#34;:&amp;#34;Demo&amp;#34;,&amp;#34;name&amp;#34;:&amp;#34;Person&amp;#34;,&amp;#34;fields&amp;#34;:[{&amp;#34;name&amp;#34;:&amp;#34;Name&amp;#34;,&amp;#34;type&amp;#34;:&amp;#34;string&amp;#34;}, {&amp;#34;name&amp;#34;:&amp;#34;Address&amp;#34;,&amp;#34;type&amp;#34;:&amp;#34;string&amp;#34;}]}&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;SchemaVersionId&amp;#34;: &amp;#34;ee38732b-b299-430d-a88b-4c429d9e1208&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;VersionNumber&amp;#34;: 2,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Status&amp;#34;: &amp;#34;AVAILABLE&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can find a more advanced sample in our &lt;a href="https://github.com/localstack/localstack-pro-samples/tree/master/glue-msk-schema-registry">localstack-pro-samples repository on GitHub&lt;/a>, which showcases the integration with AWS MSK and automatic schema registrations (including schema rejections based on the compatibilities).&lt;/p>
&lt;h2 id="further-reading">Further Reading&lt;/h2>
&lt;p>The AWS Glue API is a fairly comprehensive service - more details can be found in the official &lt;a href="https://docs.aws.amazon.com/glue/latest/dg/what-is-glue.html">AWS Glue Developer Guide&lt;/a>.&lt;/p>
&lt;h2 id="current-limitations">Current Limitations&lt;/h2>
&lt;p>Support for triggers is currently limited - the basic API endpoints are implemented, but triggers are currently still under development (more details coming soon).&lt;/p></description></item><item><title>User-Guide: Identity and Access Management (IAM)</title><link>/user-guide/aws/iam/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/iam/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Identity and Access Management (IAM) is a web service provided by Amazon Web Services (AWS) that enables users to control access to AWS resources securely. IAM allows organizations to create and manage AWS users, groups, and roles, defining granular permissions to access specific AWS services and resources. By centralizing access control, administrators can enforce the principle of least privilege, ensuring users have only the necessary permissions for their tasks.&lt;/p>
&lt;p>LocalStack supports IAM via the Community offering, allowing you to use the IAM APIs in your local environment to create and manage users, groups, and roles, granting permissions that adhere to the principle of least privilege. The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_iam/">API coverage page&lt;/a>, which provides information on the extent of IAM&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to IAM and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method. We will demonstrate how you can create a new user named &lt;code>test&lt;/code>, create an access key pair for the user, and assert that the user is recognized after the access keys are configured in the environment.&lt;/p>
&lt;p>By default, in the absence of custom credentials configuration, all requests to LocalStack run under the administrative root user. Run the following command to use the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/sts/get-caller-identity.html">&lt;code>GetCallerIdentity&lt;/code>&lt;/a> API to confirm that the request is running under the root user:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal sts get-caller-identity&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can see an output similar to the following:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;UserId&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;AKIAIOSFODNN7EXAMPLE&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Account&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;000000000000&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Arn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:iam::000000000000:root&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can now create a new user named &lt;code>test&lt;/code> using the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/iam/create-user.html">&lt;code>CreateUser&lt;/code>&lt;/a> API. Run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal iam create-user --user-name test&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can now create an access key pair for the user using the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/iam/create-access-key.html">&lt;code>CreateAccessKey&lt;/code>&lt;/a> API. Run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal iam create-access-key --user-name test&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can see an output similar to the following:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;AccessKey&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;UserName&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;test&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;AccessKeyId&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;LKIAQAAAAAAAGFWKCM5F&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Status&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;Active&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;SecretAccessKey&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;DUulXk2N2yD6rgoBBR9A/5iXa6dBcLyDknr925Q5&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;CreateDate&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;2023-07-25T09:36:51+00:00&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can save te &lt;code>AccessKeyId&lt;/code> and &lt;code>SecretAccessKey&lt;/code> values, and export them in the environment to run commands under the &lt;code>test&lt;/code> user. Run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>export AWS_ACCESS_KEY_ID=LKIAQAAAAAAAGFWKCM5F AWS_SECRET_ACCESS_KEY=DUulXk2N2yD6rgoBBR9A/5iXa6dBcLyDknr925Q5
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal sts get-caller-identity
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;UserId&amp;#34;: &amp;#34;b2yxf5g824zklfx5ry8o&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Account&amp;#34;: &amp;#34;000000000000&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Arn&amp;#34;: &amp;#34;arn:aws:iam::000000000000:user/test&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can see that the request is now running under the &lt;code>test&lt;/code> user.&lt;/p>
&lt;h2 id="enforcing-iam-policies">Enforcing IAM Policies&lt;/h2>
&lt;p>The Pro/Team offering provides the IAM security enforcement feature that can be used to test your security policies and create a more realistic environment that more closely resembles real AWS. The environment configuration &lt;code>ENFORCE_IAM=1&lt;/code> is required while starting LocalStack to enable this feature. In LocalStack, IAM enforcement is disabled, and all APIs can be accessed without authentication.&lt;/p>
&lt;p>Presented below is a straightforward example showcasing the implementation of IAM policy enforcement. Initially, it involves creating a user and obtaining access/secret keys. Subsequently, an attempt is made to create a bucket using that user&amp;rsquo;s credentials, which inevitably fails due to insufficient permissions. Lastly, a policy is attached to the user, granting the necessary &lt;code>s3:CreateBucket&lt;/code> permission, thereby enabling the successful creation of the bucket.&lt;/p>
&lt;p>To follow this example, please open two separate terminal sessions: &lt;strong>Terminal 1&lt;/strong> for the administrative IAM commands, which will utilize the default root IAM user, and &lt;strong>Terminal 2&lt;/strong> for executing the commands under the test IAM user we&amp;rsquo;re about to create. This way, we can demonstrate the differentiation in access permissions between the administrative and test users in real-time.&lt;/p>
&lt;p>In &lt;strong>Terminal 1&lt;/strong>, execute the following commands:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal iam create-user --user-name test
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal iam create-access-key --user-name test
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;AccessKeyId&amp;#34;: &amp;#34;AKIA4HPFP0TZHP3Z5VI6&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;SecretAccessKey&amp;#34;: &amp;#34;mwi/8Zhg8ypkJQmkdBq87UA3MbSa3x0HWnkcC/Ua&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Navigate to &lt;strong>Terminal 2&lt;/strong>, where we will configure the access keys for the user &lt;code>test&lt;/code> in the environment. Once the access keys are set, you will attempt to create an S3 bucket using these credentials.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>export AWS_ACCESS_KEY_ID=AKIA4HPFP0TZHP3Z5VI6 AWS_SECRET_ACCESS_KEY=mwi/8Zhg8ypkJQmkdBq87UA3MbSa3x0HWnkcC/Ua
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 mb s3://mybucket
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>make_bucket failed: s3://mybucket An error occurred (AccessDeniedException) when calling the CreateBucket operation: Access to the specified resource is denied&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>As anticipated, the attempt to create the bucket fails with an &lt;code>AccessDeniedException&lt;/code> error, confirming that user &lt;code>test&lt;/code> lacks the necessary permissions for this action.&lt;/p>
&lt;p>Let&amp;rsquo;s now return to &lt;strong>Terminal 1&lt;/strong> and execute the following commands:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal iam create-policy --policy-name p1 --policy-document &amp;#39;{&amp;#34;Version&amp;#34;:&amp;#34;2012-10-17&amp;#34;,&amp;#34;Statement&amp;#34;:[{&amp;#34;Effect&amp;#34;:&amp;#34;Allow&amp;#34;,&amp;#34;Action&amp;#34;:&amp;#34;s3:CreateBucket&amp;#34;,&amp;#34;Resource&amp;#34;:&amp;#34;*&amp;#34;}]}&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal iam attach-user-policy --user-name test --policy-arn arn:aws:iam::000000000000:policy/p1&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Now, let&amp;rsquo;s switch back to &lt;strong>Terminal 2&lt;/strong> and observe how the bucket creation succeeds with the &lt;code>test&lt;/code> IAM user:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix"># &lt;/span>confirm that we&amp;#39;re using the credentials of the `test` user
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal sts get-caller-identity
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Arn&amp;#34;: &amp;#34;arn:aws:iam::000000000000:user/test&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 mb s3://mybucket
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>make_bucket: mybucket&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Currently, credentials are extracted from the request, typically from the &lt;code>Authorization&lt;/code> HTTP header. However, it&amp;rsquo;s important to note that the request signature is not fully validated, with a few exceptions, such as S3-presigned URLs.
&lt;/div>
&lt;h2 id="explainable-iam">Explainable IAM&lt;/h2>
&lt;p>The IAM policy engine logs output related to failed policy evaluation directly to the LocalStack log. You can enable &lt;code>DEBUG=1&lt;/code> to gain visibility into these log messages, allowing you to identify the additional policies required for your request to succeed.&lt;/p>
&lt;p>For instance, if you attempt to add a policy for creating Lambda functions but only permit &lt;code>lambda:CreateFunction&lt;/code> as an allowed action while overlooking the necessity of &lt;code>iam:PassRole&lt;/code>, the policy engine&amp;rsquo;s log will highlight this missing permission.&lt;/p>
&lt;p>Create a policy document named &lt;code>policy_1.json&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Version&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;2012-10-17&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Statement&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Sid&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;FirstStatement&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Effect&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Allow&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Action&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;lambda:CreateFunction&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Resource&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You will now proceed with creating a new user, attaching the necessary policies, generating access keys, and attempting to create a function using the newly created user&amp;rsquo;s credentials.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal iam create-user --user-name test-user
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;User&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Path&amp;#34;: &amp;#34;/&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;UserName&amp;#34;: &amp;#34;test-user&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;UserId&amp;#34;: &amp;#34;x8a2eu4mc91yqtjazvhp&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Arn&amp;#34;: &amp;#34;arn:aws:iam::000000000000:user/test-user&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;CreateDate&amp;#34;: &amp;#34;2022-07-05T16:08:25.741000+00:00&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal iam put-user-policy --user-name test-user --policy-name policy1 --policy-document file://policy_1.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal iam create-access-key --user-name test-user
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>export AWS_ACCESS_KEY_ID=...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>export AWS_SECRET_ACCESS_KEY=...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal lambda create-function --function-name test-function --role arn:aws:iam::000000000000:role/lambda-role --runtime python3.8 --handler handler.handler --zip-file fileb://function.zip
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>An error occurred (AccessDeniedException) when calling the CreateFunction operation: Access to the specified resource is denied&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Upon inspecting the LocalStack logs, we can now observe the presence of five log entries directly related to the denied request.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>INFO:localstack_ext.services.iam.policy_engine.handler: Request &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> service lambda &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> operation CreateFunction denied.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DEBUG:localstack_ext.services.iam.policy_engine.handler: Necessary permissions &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> this action: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Action &amp;#39;lambda:CreateFunction&amp;#39; for &amp;#39;arn:aws:lambda:us-east-1:000000000000:function:test-function&amp;#39;&amp;#34;&lt;/span>, &lt;span style="color:#4e9a06">&amp;#34;Action &amp;#39;iam:PassRole&amp;#39; for &amp;#39;arn:aws:iam::000000000000:role/lambda-role&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DEBUG:localstack_ext.services.iam.policy_engine.handler: &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> permissions have been explicitly denied: &lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DEBUG:localstack_ext.services.iam.policy_engine.handler: &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> permissions have been explicitly allowed: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Action &amp;#39;lambda:CreateFunction&amp;#39; for &amp;#39;arn:aws:lambda:us-east-1:000000000000:function:test-function&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DEBUG:localstack_ext.services.iam.policy_engine.handler: &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> permissions have been implicitly denied: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Action &amp;#39;iam:PassRole&amp;#39; for &amp;#39;arn:aws:iam::000000000000:role/lambda-role&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>So we can see the action &lt;code>iam:PassRole&lt;/code> is not allowed but implicitly denied (meaning there is no explicit deny statement in the applicable policies, but no allow either) for your user for resource &lt;code>arn:aws:iam::000000000000:role/lambda-role&lt;/code>.
If we now add this to our policy (since it is an example let&amp;rsquo;s do it very simple with the same wildcard resource):&lt;/p>
&lt;p>Upon examination, it becomes apparent that the action &lt;code>iam:PassRole&lt;/code> is not allowed; rather, it is implicitly denied for your user concerning the resource &lt;code>arn:aws:iam::000000000000:role/lambda-role&lt;/code>. This implies that there is no explicit deny statement in the relevant policies, but there is also no allow statement, resulting in the implicit denial of the action.&lt;/p>
&lt;p>You can incorporate this action into the policy. For illustrative purposes, we will keep the example straightforward, using the same wildcard resource.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Version&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;2012-10-17&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Statement&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Sid&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;FirstStatement&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Effect&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Allow&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Action&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;lambda:CreateFunction&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;iam:PassRole&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Resource&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You will notice that the request is now successful, and the function is created.&lt;/p>
&lt;h3 id="soft-mode">Soft Mode&lt;/h3>
&lt;p>Enabling &lt;code>IAM_SOFT_MODE=1&lt;/code> allows you to review the logs and assess whether your requests would have been denied or granted while executing your entire stack without disruptions. You can avoid the need for redeployment to address each missing permission individually, streamlining the debugging process and enhancing the efficiency of your IAM configurations.&lt;/p>
&lt;h2 id="resource-browser">Resource Browser&lt;/h2>
&lt;p>The LocalStack Web Application provides a Resource Browser for managing IAM users, groups, and roles. You can access the Resource Browser by opening the LocalStack Web Application in your browser, navigating to the &lt;strong>Resources&lt;/strong> section, and then clicking on &lt;strong>IAM&lt;/strong> under the &lt;strong>Security Identity Compliance&lt;/strong> section.&lt;/p>
&lt;img src="iam-resource-browser.png" alt="IAM Resource Browser" title="IAM Resource Browser" width="900" />
&lt;p>The Resource Browser allows you to perform the following actions:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Create User, Group, Role, and Policy&lt;/strong>: Create a new IAM user, group, or role by clicking the top-level &lt;strong>Create&lt;/strong> button and filling out the form.&lt;/li>
&lt;li>&lt;strong>View User, Group, Role, and Policy Details&lt;/strong>: Click on any of the listed resources to view its details by clicking on the desired User, Group, Role, or Policy.&lt;/li>
&lt;li>&lt;strong>Edit User, Group, Role, and Policy Details&lt;/strong>: Click on any listed resources to edit its details by clicking on the desired User, Group, Role, or Policy.&lt;/li>
&lt;li>&lt;strong>Delete User, Group, Role, and Policy&lt;/strong>: Select any listed resources to delete them by clicking the &lt;strong>Actions&lt;/strong> button and selecting &lt;strong>Remove Selected&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;h2 id="supported-apis">Supported APIs&lt;/h2>
&lt;p>IAM security enforcement is comprehensively available for all AWS APIs in LocalStack and has undergone thorough testing across multiple services. The services that have been rigorously tested include:&lt;/p>
&lt;ul>
&lt;li>ACM&lt;/li>
&lt;li>API Gateway&lt;/li>
&lt;li>CloudFormation&lt;/li>
&lt;li>CloudWatch (metrics/events/logs)&lt;/li>
&lt;li>DynamoDB&lt;/li>
&lt;li>DynamoDB Streams&lt;/li>
&lt;li>Elasticsearch Service&lt;/li>
&lt;li>EventBus, Kinesis&lt;/li>
&lt;li>KMS&lt;/li>
&lt;li>Lambda&lt;/li>
&lt;li>Redshift&lt;/li>
&lt;li>S3&lt;/li>
&lt;li>SecretsManager&lt;/li>
&lt;li>SNS&lt;/li>
&lt;li>SQS&lt;/li>
&lt;/ul>
&lt;h2 id="examples">Examples&lt;/h2>
&lt;p>The following code snippets and sample applications provide practical examples of how to use IAM in LocalStack for various use cases:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/localstack/serverless-api-ecs-apigateway-sample">Serverless Container-based APIs with Amazon ECS &amp;amp; API Gateway&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/event-driven-architecture-with-amazon-sns-fifo">Event-driven architecture with Amazon SNS FIFO, DynamoDB, Lambda, and S3&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/shipment-list-demo">Full-Stack application with AWS Lambda, DynamoDB &amp;amp; S3 for shipment validation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/localstack-pro-samples/tree/master/iam-policy-enforcement">Enforcement of IAM policies when working with local cloud APIs&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>User-Guide: IoT</title><link>/user-guide/aws/iot/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/iot/</guid><description>
&lt;p>LocalStack Pro supports IoT Core, IoT Data, IoT Analytics and related APIs.
Common operations for creating and updating things, groups, policies, certificates and other entities are implemented with full CloudFormation support.&lt;/p>
&lt;h2 id="mqtt-broker">MQTT Broker&lt;/h2>
&lt;p>LocalStack ships with a built-in MQTT broker.
To retrieve the MQTT endpoint, use the &lt;a href="https://docs.aws.amazon.com/iot/latest/apireference/API_DescribeEndpoint.html">&lt;code>DescribeEndpoint&lt;/code>&lt;/a> operation.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal iot describe-endpoint
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;endpointAddress&amp;#34;: &amp;#34;localhost.localstack.cloud:4510&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>This endpoint can then be used with any MQTT client to publish and subscribe to topics.&lt;/p>
&lt;h2 id="lifecycle-events">Lifecycle Events&lt;/h2>
&lt;p>LocalStack also publishes the &lt;a href="https://docs.aws.amazon.com/iot/latest/developerguide/life-cycle-events.html">lifecycle events&lt;/a> to the standard endpoints.&lt;/p>
&lt;ul>
&lt;li>&lt;code>$aws/events/presence/connected/clientId&lt;/code>: when a client connects&lt;/li>
&lt;li>&lt;code>$aws/events/presence/disconnected/clientId&lt;/code>: when a client disconnects&lt;/li>
&lt;li>&lt;code>$aws/events/subscriptions/subscribed/clientId&lt;/code>: when a client subscribes to a topic&lt;/li>
&lt;li>&lt;code>$aws/events/subscriptions/unsubscribed/clientId&lt;/code>: when a client unsubscribes from a topic&lt;/li>
&lt;/ul>
&lt;p>Currently the &lt;code>principalIdentifier&lt;/code> and &lt;code>sessionIdentifier&lt;/code> fields in event payload contain dummy values.&lt;/p>
&lt;h2 id="registry-events-for-things">Registry Events for Things&lt;/h2>
&lt;p>LocalStack can publish the &lt;a href="https://docs.aws.amazon.com/iot/latest/developerguide/registry-events.html">registry events&lt;/a>, if &lt;a href="https://docs.aws.amazon.com/iot/latest/developerguide/iot-events.html#iot-events-enable">you enable it&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal iot update-event-configurations --event-configurations &amp;#34;{\&amp;#34;THING\&amp;#34;:{\&amp;#34;Enabled\&amp;#34;: true}}&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can then subscribe or use topic rules on the follow topics:&lt;/p>
&lt;ul>
&lt;li>&lt;code>$aws/events/thing/&amp;lt;thingName&amp;gt;/created&lt;/code>: when a new Thing is created&lt;/li>
&lt;li>&lt;code>$aws/events/thing/&amp;lt;thingName&amp;gt;/updated&lt;/code>: when a Thing is updated&lt;/li>
&lt;li>&lt;code>$aws/events/thing/&amp;lt;thingName&amp;gt;/deleted&lt;/code>: when a Thing is deleted&lt;/li>
&lt;/ul>
&lt;h2 id="topic-rules">Topic Rules&lt;/h2>
&lt;p>It is also possible to use advanced features like SQL queries for IoT topic rules.&lt;/p>
&lt;p>For example, you can use the &lt;a href="https://docs.aws.amazon.com/iot/latest/apireference/API_CreateTopicRule.html">&lt;code>CreateTopicRule&lt;/code>&lt;/a> operation to define a topic rule with a SQL query &lt;code>SELECT * FROM 'my/topic' where attr=123&lt;/code> which will execute a trigger whenever a message with attribute &lt;code>attr=123&lt;/code> is received on the MQTT topic &lt;code>my/topic&lt;/code>.&lt;/p>
&lt;p>Supported triggers include Kinesis, Lambda, SQS, Firehose and DynamoDB v2.&lt;/p></description></item><item><title>User-Guide: Key Management Service (KMS)</title><link>/user-guide/aws/kms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/kms/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Key Management Service (KMS) is a managed service that allows users to handle encryption keys within the Amazon Web Services ecosystem. KMS allows users to create, control, and utilize keys to encrypt and decrypt data, as well as to sign and verify messages. KMS allows you to create, delete, list, and update aliases, friendly names for your KMS keys, and tag them for identification and automation. You can check &lt;a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html">the official AWS documentation&lt;/a> to understand the basic terms and concepts used in the KMS.&lt;/p>
&lt;p>LocalStack supports Resource Groups via the Community offering, allowing you to use the KMS APIs in your local environment to create, edit, and view symmetric and asymmetric KMS keys, including HMAC keys. The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_kms/">API coverage page&lt;/a>, which provides information on the extent of KMS&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to KMS and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method. We will demonstrate how to create a simple symmetric encryption key and use it to encrypt/decrypt data.&lt;/p>
&lt;h3 id="create-a-key">Create a key&lt;/h3>
&lt;p>To generate a new key within the KMS, you can use the &lt;a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_CreateKey.html">&lt;code>CreateKey&lt;/code>&lt;/a> API. Execute the following command to create a new key:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal kms create-key&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>By default, this command generates a symmetric encryption key, eliminating the need for any additional arguments. You can take a look at the &lt;code>KeyId&lt;/code> of the freshly generated key in the output, and save it for future use.&lt;/p>
&lt;p>In case the key ID is misplaced, it is possible to retrieve a comprehensive list of IDs and &lt;a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names&lt;/a> (ARNs) for all available keys through the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal kms list-keys&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Additionally, if needed, you can obtain extensive details about a specific key by providing its key ID or ARN using the subsequent command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal kms describe-key --key-id &amp;lt;KEY_ID&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="encrypt-the-data">Encrypt the data&lt;/h3>
&lt;p>You can now leverage the generated key for encryption purposes. For instance, let&amp;rsquo;s consider encrypting &amp;ldquo;&lt;em>some important stuff&lt;/em>&amp;rdquo;. To do so, you can use the &lt;a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_Encrypt.html">&lt;code>Encrypt&lt;/code>&lt;/a> API. Execute the following command to encrypt the data:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal kms encrypt \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --key-id 010a4301-4205-4df8-ae52-4c2895d47326 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --plaintext &amp;#34;some important stuff&amp;#34; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --output text \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --query CiphertextBlob \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | base64 --decode &amp;gt; my_encrypted_data&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You will notice that a new file named &lt;code>my_encrypted_data&lt;/code> has been created in your current directory. This file contains the encrypted data, which can be decrypted using the same key.&lt;/p>
&lt;h3 id="decrypt-the-data">Decrypt the data&lt;/h3>
&lt;p>To decrypt the data, you can use the &lt;a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_Decrypt.html">&lt;code>Decrypt&lt;/code>&lt;/a> API. You don&amp;rsquo;t need to specify the &lt;code>KEY_ID&lt;/code> while decrypting the file, since AWS includes the Key ID into the encrypted data. However, with asymmetric keys the &lt;code>KEY_ID&lt;/code> has to be specified.&lt;/p>
&lt;p>Execute the following command to decrypt the data:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal kms decrypt \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --ciphertext-blob fileb://my_encrypted_data \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --output text \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --query Plaintext \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | base64 --decode&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Similar to the previous &lt;code>Encrypt&lt;/code> operation, to retrieve the actual data, it&amp;rsquo;s necessary to decode the Base64-encoded output. To achieve this, employ the &lt;code>output&lt;/code> and &lt;code>query&lt;/code> parameters along with the &lt;code>base64&lt;/code> tool as before. Upon successful execution, the output will correspond to our original text:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>some important stuff
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="resource-browser">Resource Browser&lt;/h2>
&lt;p>The LocalStack Web Application provides a Resource Browser for managing KMS keys. You can access the Resource Browser by opening the LocalStack Web Application in your browser, navigating to the &lt;strong>Resources&lt;/strong> section, and then clicking on &lt;strong>KMS&lt;/strong> under the &lt;strong>Security Identity Compliance&lt;/strong> section.&lt;/p>
&lt;img src="kms-resource-browser.png" alt="KMS Resource Browser" title="KMS Resource Browser" width="900" />
&lt;br>
&lt;br>
The Resource Browser allows you to perform the following actions:
&lt;ul>
&lt;li>&lt;strong>Create Key&lt;/strong>: Create a new KMS key by specifying the &lt;strong>Policy&lt;/strong>, &lt;strong>Key Usage&lt;/strong>, &lt;strong>Tags&lt;/strong>, &lt;strong>Multi Region&lt;/strong>, &lt;strong>Customer Master Key Spec&lt;/strong>, and more.&lt;/li>
&lt;li>&lt;strong>Edit Key&lt;/strong>: Edit an existing KMS key by specifying the &lt;strong>Description&lt;/strong>, after clicking the key in the list and clicking &lt;strong>EDIT KEY&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>View Key&lt;/strong>: View the details of an existing KMS key by clicking the key in the list.&lt;/li>
&lt;li>&lt;strong>Enable &amp;amp; Disable Key&lt;/strong>: Select any listed keys to enable or disable them by clicking the &lt;strong>Actions&lt;/strong> button and select &lt;strong>Enable Selected&lt;/strong> or &lt;strong>Disable Selected&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Delete Key&lt;/strong>: Select any listed keys to delete them by clicking the &lt;strong>Actions&lt;/strong> button and selecting &lt;strong>Schedule Deletion&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;h2 id="custom-ids-for-kms-keys-via-tags">Custom IDs for KMS keys via tags&lt;/h2>
&lt;p>You can assign custom IDs to KMS keys using the &lt;code>_custom_id_&lt;/code> tag during key creation. This can be useful to pre-seed a test environment and use a static &lt;code>KeyId&lt;/code> for your keys.&lt;/p>
&lt;p>Below is a simple example to create a key with a custom &lt;code>KeyId&lt;/code> (note that the &lt;code>KeyId&lt;/code> should have the format of a UUID):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal kms create-key --tags &amp;#39;[{&amp;#34;TagKey&amp;#34;:&amp;#34;_custom_id_&amp;#34;,&amp;#34;TagValue&amp;#34;:&amp;#34;00000000-0000-0000-0000-000000000001&amp;#34;}]&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;KeyMetadata&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;AWSAccountId&amp;#34;: &amp;#34;000000000000&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;KeyId&amp;#34;: &amp;#34;00000000-0000-0000-0000-000000000001&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="limitations">Limitations&lt;/h2>
&lt;h3 id="encryption-data-format">Encryption data format&lt;/h3>
&lt;p>In LocalStack&amp;rsquo;s KMS implementation, the encryption process is uniformly symmetric, even when an asymmetric key is requested. Furthermore, LocalStack utilizes an encrypted data format distinct from that employed by AWS.&lt;/p>
&lt;p>This could lead to decryption failures if a key is manually generated outside the local KMS environment, imported to KMS using the &lt;a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_ImportKeyMaterial.html">ImportKeyMaterial&lt;/a> API, utilized for encryption within local KMS, and later decryption is attempted externally using the self-generated key. However, conventional setups are likely to function seamlessly.&lt;/p>
&lt;h3 id="key-states">Key states&lt;/h3>
&lt;p>In AWS KMS, cryptographic keys exhibit &lt;a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">multiple states&lt;/a>. However, LocalStack&amp;rsquo;s KMS implementation provides only a subset of these states&lt;/p>
&lt;ul>
&lt;li>&lt;code>Enabled&lt;/code>&lt;/li>
&lt;li>&lt;code>Disabled&lt;/code>&lt;/li>
&lt;li>&lt;code>Creating&lt;/code>&lt;/li>
&lt;li>&lt;code>PendingImport&lt;/code>&lt;/li>
&lt;li>&lt;code>PendingDeletion&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="multi-region-keys">Multi-region keys&lt;/h3>
&lt;p>LocalStack&amp;rsquo;s KMS implementation is equipped to facilitate &lt;a href="https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-overview.html">multi-region keys&lt;/a>, but there&amp;rsquo;s a distinct behavior compared to AWS KMS. Unlike AWS KMS, the replication of multi-region key replicas in LocalStack KMS isn&amp;rsquo;t automatically synchronized with their corresponding primary key. Consequently, adjustments made to the primary key&amp;rsquo;s settings won&amp;rsquo;t propagate automatically to the replica.&lt;/p>
&lt;h3 id="key-aliases">Key aliases&lt;/h3>
&lt;p>While AWS KMS conveniently establishes &lt;a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-alias.html">aliases&lt;/a>, LocalStack follows suit by supporting these pre-configured aliases. However, it&amp;rsquo;s important to note that in LocalStack, these aliases come into picture after the initial access attempt. Until that point, they are not visible.&lt;/p></description></item><item><title>User-Guide: Kinesis</title><link>/user-guide/aws/kinesis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/kinesis/</guid><description>
&lt;p>AWS Kinesis is a data streaming service, which enables your application to ingest, buffer, and process data in real-time.
Kinesis in LocalStack Community is powered by &lt;a href="https://github.com/etspaceman/kinesis-mock">Kinesis Mock&lt;/a> and has an &lt;a href="/user-guide/aws/feature-coverage/">extensively supported API&lt;/a>.&lt;/p>
&lt;h2 id="quickstart">Quickstart&lt;/h2>
&lt;p>Trying to run the example applications from the &lt;a href="https://docs.aws.amazon.com/streams/latest/dev/examples.html">official AWS developer guide&lt;/a> against LocalStack is a great place to start.
Assuming you have &lt;code>awslocal&lt;/code> installed you can also try out the following commands:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal kinesis create-stream --stream-name samplestream --shard-count 1&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal kinesis list-streams
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;StreamNames&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;samplestream&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal kinesis put-record --stream-name samplestream --data &amp;#39;{&amp;#34;symbol&amp;#34;:&amp;#34;TEST&amp;#34;,&amp;#34;sampleno&amp;#34;:42}&amp;#39; --partition-key test1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ShardId&amp;#34;: &amp;#34;shardId-000000000001&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;SequenceNumber&amp;#34;: &amp;#34;49622467803485029265018102167378141645049970239670845458&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;EncryptionType&amp;#34;: &amp;#34;NONE&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="configuration">Configuration&lt;/h2>
&lt;p>Regardless of which provider you&amp;rsquo;re working with, Kinesis can be further configured with the following environment variables:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Variable&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>KINESIS_ERROR_PROBABILITY&lt;/code>&lt;/td>
&lt;td>Decimal value between &lt;code>0.0&lt;/code> (default) and &lt;code>1.0&lt;/code>. Typically, it is difficult to know beforehand whether your application can handle the throughput and whether it can deal with backpressure. By setting this environment variable the application will randomly inject &lt;code>ProvisionedThroughputException&lt;/code>. While this won&amp;rsquo;t tell you whether your application can handle sufficient throughput, it does help you to test whether your application can handle exceptions gracefully.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>KINESIS_SHARD_LIMIT&lt;/code>&lt;/td>
&lt;td>Integer value (default: &lt;code>100&lt;/code>) or &lt;code>Infinity&lt;/code> (to disable). This variable can help you to test whether your application adheres to the allocated shard limit. This behavior can only be disabled by explicitly setting the environment variable as &lt;code>KINESIS_SHARD_LIMIT=Infinity&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>KINESIS_LATENCY&lt;/code>&lt;/td>
&lt;td>Integer value of milliseconds (default: &lt;code>500&lt;/code>) or &lt;code>0&lt;/code> (to disable). Especially important for testing latency-critical applications. Since latency cannot be tested with the local Kinesis service, you can use this variable to introduce artificial latency into your AWS calls. This behavior can only be disabled by explicitly setting the environment variable as &lt;code>KINESIS_LATENCY=0&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>KINESIS_INITIALIZE_STREAMS&lt;/code>&lt;/td>
&lt;td>&lt;strong>Deprecated.&lt;/strong> A comma-delimited string of stream names, its corresponding shard count and an optional region to initialize during startup. If the region is not provided, the default region is used. For instance, &lt;code>KINESIS_INITIALIZE_STREAMS=my-first-stream:1,my-other-stream:2:us-west-2,my-last-stream:1&lt;/code>. In multi-account setups, the streams will be created for all accounts.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="limitations">Limitations&lt;/h2>
&lt;p>In multi-account setups, each AWS account launches a separate instance of Kinesis Mock.
This is very resource intensive when a large number of AWS accounts are used.&lt;/p>
&lt;p>This will be addressed in a future update.
Follow up with &lt;a href="https://github.com/etspaceman/kinesis-mock/issues/377">this Kinesis Mock issue&lt;/a> to keep track of this feature.&lt;/p></description></item><item><title>User-Guide: Kinesis Data Analytics</title><link>/user-guide/aws/kinesis-analytics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/kinesis-analytics/</guid><description>
&lt;p>The Kinesis Data Analytics API allows you to run continuous SQL queries directly over your Kinesis data streams. A basic support is included in LocalStack Pro which allows you to create Kinesis Analytics applications, define input and output streams and schema types, and run continuous queries locally.&lt;/p></description></item><item><title>User-Guide: Kinesis Data Firehose</title><link>/user-guide/aws/kinesis-firehose/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/kinesis-firehose/</guid><description>
&lt;p>Kinesis Data Firehose is a service to extract, transform and load (ETL service) data to multiple destinations.
LocalStack supports Firehose with Kinesis as source, and S3, Elasticsearch or HttpEndpoints as targets.&lt;/p>
&lt;h2 id="examples">Examples&lt;/h2>
&lt;p>We will provide some examples to illustrate the possibilities of Firehose in LocalStack.&lt;/p>
&lt;h3 id="using-firehose-to-load-kinesis-data-into-elasticsearch-with-s3-backup">Using Firehose to load Kinesis data into Elasticsearch with S3 Backup&lt;/h3>
&lt;p>As example, we want to deliver data sent to a Kinesis stream into Elasticsearch via Firehose, while making a full backup into a S3 bucket.
We will assume LocalStack is already &lt;a href="/getting-started/">started correctly&lt;/a> and we have &lt;code>awslocal&lt;/code> &lt;a href="/user-guide/integrations/aws-cli/">installed&lt;/a>.&lt;/p>
&lt;p>First we will create our Elasticsearch domain:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal es create-elasticsearch-domain --domain-name es-local
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DomainStatus&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DomainId&amp;#34;: &amp;#34;000000000000/es-local&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DomainName&amp;#34;: &amp;#34;es-local&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ARN&amp;#34;: &amp;#34;arn:aws:es:us-east-1:000000000000:domain/es-local&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Created&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Deleted&amp;#34;: false,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Endpoint&amp;#34;: &amp;#34;es-local.us-east-1.es.localhost.localstack.cloud:443&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Processing&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ElasticsearchVersion&amp;#34;: &amp;#34;7.10.0&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ElasticsearchClusterConfig&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;InstanceType&amp;#34;: &amp;#34;m3.medium.elasticsearch&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;InstanceCount&amp;#34;: 1,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DedicatedMasterEnabled&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ZoneAwarenessEnabled&amp;#34;: false,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DedicatedMasterType&amp;#34;: &amp;#34;m3.medium.elasticsearch&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DedicatedMasterCount&amp;#34;: 1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;EBSOptions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;EBSEnabled&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;VolumeType&amp;#34;: &amp;#34;gp2&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;VolumeSize&amp;#34;: 10,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Iops&amp;#34;: 0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;CognitoOptions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Enabled&amp;#34;: false
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>We need the &lt;code>Endpoint&lt;/code> returned here later for the confirmation of our setup.&lt;/p>
&lt;p>Now let us create our target S3 bucket and our source Kinesis stream:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 mb s3://kinesis-activity-backup-local
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>make_bucket: kinesis-activity-backup-local&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal kinesis create-stream --stream-name kinesis-es-local-stream --shard-count 2&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Next, we will create our Firehose delivery stream with Elasticsearch as destination, and S3 as target for our AllDocuments backup.
We set the ARN of our Kinesis stream in the &lt;code>kinesis-stream-source-configuration&lt;/code> as well as the role we want to use for accessing the stream.
In the &lt;code>elasticsearch-destination-configuration&lt;/code> we set (again) the access role, the &lt;code>DomainARN&lt;/code> of the Elasticsearch domain we want to publish to, as well as &lt;code>IndexName&lt;/code> and &lt;code>TypeName&lt;/code> for Elasticsearch.
Since we want to backup all documents to S3, we also set &lt;code>S3BackupMode&lt;/code> to &lt;code>AllDocuments&lt;/code> and provide a &lt;code>S3Configuration&lt;/code> pointing to our created bucket.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
In LocalStack, per default, the IAM roles will not be verified, so you can provide any ARN here. In AWS, you need to check the access rights of the specified role for the task.
&lt;/div>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal firehose create-delivery-stream --delivery-stream-name activity-to-elasticsearch-local --delivery-stream-type KinesisStreamAsSource --kinesis-stream-source-configuration &amp;#34;KinesisStreamARN=arn:aws:kinesis:us-east-1:000000000000:stream/kinesis-es-local-stream,RoleARN=arn:aws:iam::000000000000:role/Firehose-Reader-Role&amp;#34; --elasticsearch-destination-configuration &amp;#34;RoleARN=arn:aws:iam::000000000000:role/Firehose-Reader-Role,DomainARN=arn:aws:es:us-east-1:000000000000:domain/es-local,IndexName=activity,TypeName=activity,S3BackupMode=AllDocuments,S3Configuration={RoleARN=arn:aws:iam::000000000000:role/Firehose-Reader-Role,BucketARN=arn:aws:s3:::kinesis-activity-backup-local}&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DeliveryStreamARN&amp;#34;: &amp;#34;arn:aws:firehose:us-east-1:000000000000:deliverystream/activity-to-elasticsearch-local&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Before testing the integration, we should check whether the Elasticsearch cluster is already started up.
We can do this using the following command (for more information about this, check out the &lt;a href="/user-guide/aws/elasticsearch/">docs page about Elasticsearch&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal es describe-elasticsearch-domain --domain-name es-local | jq &amp;#34;.DomainStatus.Processing&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>false&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Once this command returns &lt;code>false&lt;/code>, we are ready to proceed with ingesting our data.
We can input our data into our source Kinesis stream, our put it directly into the Firehose delivery stream.&lt;/p>
&lt;p>To put it into Kinesis, run:&lt;/p>
&lt;p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal kinesis put-record --stream-name kinesis-es-local-stream --data &amp;#39;{ &amp;#34;target&amp;#34;: &amp;#34;barry&amp;#34; }&amp;#39; --partition-key partition
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ShardId&amp;#34;: &amp;#34;shardId-000000000001&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;SequenceNumber&amp;#34;: &amp;#34;49625461294598302663271645332877318906244481566013128722&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;EncryptionType&amp;#34;: &amp;#34;NONE&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
If you are using aws cli v2, you can add &lt;code>--cli-binary-format raw-in-base64-out&lt;/code> to the above command
&lt;/div>
&lt;/p>
&lt;p>Or directly into the Firehose delivery stream:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal firehose put-record --delivery-stream-name activity-to-elasticsearch-local --record &amp;#39;{ &amp;#34;Data&amp;#34;: &amp;#34;eyJ0YXJnZXQiOiAiSGVsbG8gd29ybGQifQ==&amp;#34; }&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;RecordId&amp;#34;: &amp;#34;00333086-7581-48a2-bc7c-8ac1ed97ed3d&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>If we now check the entries we made in Elasticsearch (we will use curl for simplicity). Note to replace the url with the &amp;ldquo;Endpoint&amp;rdquo; field of our &lt;code>create-elasticsearch-domain&lt;/code> operation at the beginning.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl -s http://es-local.us-east-1.es.localhost.localstack.cloud:443/activity/_search | jq &amp;#39;.hits.hits&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;_index&amp;#34;: &amp;#34;activity&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;_type&amp;#34;: &amp;#34;activity&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;_id&amp;#34;: &amp;#34;f38e2c49-d101-46aa-9ce2-0d2ea8fcd133&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;_score&amp;#34;: 1,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;_source&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;target&amp;#34;: &amp;#34;Hello world&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;_index&amp;#34;: &amp;#34;activity&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;_type&amp;#34;: &amp;#34;activity&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;_id&amp;#34;: &amp;#34;d2f1c125-b3b0-4c7c-ba90-8acf4075a682&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;_score&amp;#34;: 1,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;_source&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;target&amp;#34;: &amp;#34;barry&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>]&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>If you get a similar output, you have correctly set up a Firehose delivery stream!
Also checkout the specified S3 bucket to check if your backup is working correctly.&lt;/p></description></item><item><title>User-Guide: Lambda</title><link>/user-guide/aws/lambda/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/lambda/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>AWS Lambda is a Serverless Function as a Service (FaaS) platform that lets you run code in your preferred programming language on the AWS ecosystem. AWS Lambda automatically scales your code to meet demand and handles server provisioning, management, and maintenance. AWS Lambda allows you to break down your application into smaller, independent functions that integrate seamlessly with AWS services.&lt;/p>
&lt;p>LocalStack supports Lambda via the Community &amp;amp; Pro/Team offering, allowing you to use the Lambda API to create, deploy, and test your Lambda functions. The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_lambda/">Lambda coverage page&lt;/a>, which provides information on the extent of Lambda&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to Lambda and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method. We will demonstrate how to create a Lambda function with a Function URL. With the Function URL property, you can call a Lambda Function via an HTTP API call.&lt;/p>
&lt;h3 id="create-a-lambda-function">Create a Lambda function&lt;/h3>
&lt;p>To create a new Lambda function, create a new file called &lt;code>index.js&lt;/code> with the following code:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">exports&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">handler&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">async&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">event&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">=&amp;gt;&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">let&lt;/span> &lt;span style="color:#000">body&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">JSON&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">parse&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">event&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">body&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">const&lt;/span> &lt;span style="color:#000">product&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">body&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">num1&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span> &lt;span style="color:#000">body&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">num2&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">const&lt;/span> &lt;span style="color:#000">response&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">statusCode&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">200&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">body&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;The product of &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">body&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">num1&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34; and &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">body&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">num2&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34; is &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">product&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">response&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Enter the following command to create a new Lambda function:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>zip function.zip index.js
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal lambda create-function \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --function-name localstack-lambda-url-example \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --runtime nodejs18.x \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --zip-file fileb://function.zip \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --handler index.handler \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --role arn:aws:iam::000000000000:role/lambda-role&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
In the old Lambda provider, you could create a function with any arbitrary string as the role, such as &lt;code>r1&lt;/code>. However, the new provider requires the role ARN to be in the format &lt;code>arn:aws:iam::000000000000:role/lambda-role&lt;/code> and validates it using an appropriate regex. However, it currently does not check whether the role exists.
&lt;/div>
&lt;h3 id="invoke-the-function">Invoke the Function&lt;/h3>
&lt;p>To invoke the Lambda function, you can use the &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html">&lt;code>Invoke&lt;/code> API&lt;/a>. Run the following command to invoke the function:&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-2" role="tablist">
&lt;li class="nav-item">
&lt;a class="nav-link active"
id="tabs-02-00-tab" data-toggle="tab" href="#tabs-02-00" role="tab"
aria-controls="tabs-02-00" aria-selected="false">
AWS CLI v1
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link"
id="tabs-02-01-tab" data-toggle="tab" href="#tabs-02-01" role="tab"
aria-controls="tabs-02-01" aria-selected="false">
AWS CLI v2
&lt;/a>
&lt;/li>
&lt;/ul>
&lt;div class="tab-content" id="tabs-2-content">
&lt;div class="tab-body tab-pane fade show active"
id="tabs-02-00" role="tabpanel" aria-labelled-by="tabs-02-00-tab">
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal lambda invoke --function-name localstack-lambda-url-example \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --payload &amp;#39;{&amp;#34;body&amp;#34;: &amp;#34;{\&amp;#34;num1\&amp;#34;: \&amp;#34;10\&amp;#34;, \&amp;#34;num2\&amp;#34;: \&amp;#34;10\&amp;#34;}&amp;#34; }&amp;#39; output.txt&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;div class="tab-body tab-pane fade"
id="tabs-02-01" role="tabpanel" aria-labelled-by="tabs-02-01-tab">
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal lambda invoke --function-name localstack-lambda-url-example \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --cli-binary-format raw-in-base64-out \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --payload &amp;#39;{&amp;#34;body&amp;#34;: &amp;#34;{\&amp;#34;num1\&amp;#34;: \&amp;#34;10\&amp;#34;, \&amp;#34;num2\&amp;#34;: \&amp;#34;10\&amp;#34;}&amp;#34; }&amp;#39; output.txt&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="create-a-function-url">Create a Function URL&lt;/h3>
&lt;p>With the Function URL property, there is now a new way to call a Lambda Function via HTTP API call using the &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/API_CreateFunctionUrlConfig.html">&lt;code>CreateFunctionURLConfig&lt;/code> API&lt;/a>. To create a URL for invoking the function, run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal lambda create-function-url-config \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --function-name localstack-lambda-url-example \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --auth-type NONE&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>This will generate a HTTP URL that can be used to invoke the Lambda function. The URL will be in the format &lt;code>http://&amp;lt;XXXXXXXX&amp;gt;.lambda-url.us-east-1.localhost.localstack.cloud:4566&lt;/code>.&lt;/p>
&lt;h3 id="trigger-the-lambda-function-url">Trigger the Lambda function URL&lt;/h3>
&lt;p>You can now trigger the Lambda function by sending a HTTP POST request to the URL using &lt;code>cURL&lt;/code> or your REST HTTP client:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl -X POST \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;http://&amp;lt;XXXXXXXX&amp;gt;.lambda-url.us-east-1.localhost.localstack.cloud:4566/&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -H &amp;#39;Content-Type: application/json&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -d &amp;#39;{&amp;#34;num1&amp;#34;: &amp;#34;10&amp;#34;, &amp;#34;num2&amp;#34;: &amp;#34;10&amp;#34;}&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>The product of &lt;span style="color:#0000cf;font-weight:bold">10&lt;/span> and &lt;span style="color:#0000cf;font-weight:bold">10&lt;/span> is 100%
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="special-tools">Special Tools&lt;/h2>
&lt;p>LocalStack provides various tools to help you develop, debug, and test your AWS Lambda functions more efficiently.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Hot reloading&lt;/strong>: With Lambda hot reloading, you can continuously apply code changes to your Lambda functions without needing to redeploy them manually. To learn more about how to use hot reloading with LocalStack, check out our &lt;a href="/user-guide/tools/lambda-tools/hot-reloading/">hot reloading documentation&lt;/a>.&lt;/li>
&lt;li>&lt;strong>Remote debugging&lt;/strong>: LocalStack&amp;rsquo;s remote debugging functionality allows you to attach a debugger to your Lambda function using your preferred IDE. To get started with remote debugging in LocalStack, see our &lt;a href="/user-guide/tools/lambda-tools/debugging/">debugging documentation&lt;/a>.&lt;/li>
&lt;/ul>
&lt;h2 id="lambda-layers">Lambda Layers&lt;/h2>
&lt;p>&lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">Lambda layers&lt;/a> lets you include additional code and dependencies in your Lambda functions. With LocalStack Pro/Team, you can deploy Lambda Layers locally to streamline your development and testing process.&lt;/p>
&lt;p>To learn more about Lambda Layers, refer to the &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">AWS documentation on Lambda layers&lt;/a>. Here, we&amp;rsquo;ll focus specifically on how to create Lambda Layers locally in LocalStack Pro/Team.&lt;/p>
&lt;h3 id="creating-and-invoking-a-lambda-layer-locally">Creating and invoking a Lambda Layer Locally&lt;/h3>
&lt;p>To create a Lambda Layer locally, you can use the &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/API_PublishLayerVersion.html">&lt;code>PublishLayerVersion&lt;/code> API&lt;/a> in LocalStack. Here&amp;rsquo;s a simple example using Python:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>mkdir -p /tmp/python/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>echo &amp;#39;def util():&amp;#39; &amp;gt; /tmp/python/testlayer.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>echo &amp;#39; print(&amp;#34;Output from Lambda layer util function&amp;#34;)&amp;#39; &amp;gt;&amp;gt; /tmp/python/testlayer.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>(cd /tmp; zip -r testlayer.zip python)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>LAYER_ARN=$(awslocal lambda publish-layer-version --layer-name layer1 --zip-file fileb:///tmp/testlayer.zip | jq -r .LayerVersionArn)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Next, define a Lambda function that uses our layer:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>echo &amp;#39;def handler(*args, **kwargs):&amp;#39; &amp;gt; /tmp/testlambda.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>echo &amp;#39; import testlayer; testlayer.util()&amp;#39; &amp;gt;&amp;gt; /tmp/testlambda.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>echo &amp;#39; print(&amp;#34;Debug output from Lambda function&amp;#34;)&amp;#39; &amp;gt;&amp;gt; /tmp/testlambda.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>(cd /tmp; zip testlambda.zip testlambda.py)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal lambda create-function \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --function-name func1 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --runtime python3.8 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --role arn:aws:iam::000000000000:role/lambda-role \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --handler testlambda.handler \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --timeout 30 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --zip-file fileb:///tmp/testlambda.zip \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --layers $LAYER_ARN&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Here, we&amp;rsquo;ve defined a Lambda function called &lt;code>handler()&lt;/code> that imports the &lt;code>util()&lt;/code> function from our &lt;code>layer1&lt;/code> Lambda Layer. We then used the &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/API_CreateFunction.html">&lt;code>CreateFunction&lt;/code> API&lt;/a> to create this Lambda function in LocalStack, specifying the &lt;code>layer1&lt;/code> Lambda Layer as a dependency.&lt;/p>
&lt;p>To test our Lambda function and see the output from the Lambda Layer, we can invoke the function and check the logs (with &lt;code>DEBUG=1&lt;/code> enabled). Here&amp;rsquo;s an example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&amp;gt; START RequestId: a8bc4ce6-e2e8-189e-cf58-c2eb72827c23 Version: &lt;span style="color:#000">$LATEST&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt; Output from Lambda layer util &lt;span style="color:#204a87;font-weight:bold">function&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt; Debug output from Lambda &lt;span style="color:#204a87;font-weight:bold">function&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt; END RequestId: a8bc4ce6-e2e8-189e-cf58-c2eb72827c23
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="referencing-lambda-layers-from-aws">Referencing Lambda layers from AWS&lt;/h3>
&lt;p>If your Lambda function references a layer in real AWS, you can integrate it into your local dev environment by making it accessible to the &lt;code>886468871268&lt;/code> AWS account ID. This account is managed by LocalStack on AWS.&lt;/p>
&lt;p>To grant access to your layer, run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>aws lambda add-layer-version-permission \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --layer-name test-layer \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --version-number 1 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --statement-id layerAccessFromLocalStack \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --principal 886468871268 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --action lambda:GetLayerVersion&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Replace &lt;code>test-layer&lt;/code> and &lt;code>1&lt;/code> with the name and version number of your layer, respectively.&lt;/p>
&lt;p>After granting access, the next time you reference the layer in one of your local Lambda functions using the AWS Lambda layer ARN, the layer will be automatically pulled down and integrated into your local dev environment.&lt;/p>
&lt;h2 id="resource-browser">Resource Browser&lt;/h2>
&lt;p>The LocalStack Web Application provides a &lt;a href="https://docs.localstack.cloud/user-guide/web-application/resource-browser/">Resource Browser&lt;/a> for managing Lambda resources. You can access the Resource Browser by opening the LocalStack Web Application in your browser, navigating to the &lt;strong>Resources&lt;/strong> section, and then clicking on &lt;strong>Lambda&lt;/strong> under the &lt;strong>Compute&lt;/strong> section.&lt;/p>
&lt;p>The Resource Browser displays &lt;a href="https://app.localstack.cloud/resources/lambda/functions">Functions&lt;/a> and &lt;a href="https://app.localstack.cloud/resources/lambda/layers">Layers&lt;/a> resources. You can click on individual resources to view their details.&lt;/p>
&lt;img src="lambda-resource-browser.png" alt="Lambda Resource Browser" title="Lambda Resource Browser" width="900" />
&lt;p>The Resource Browser allows you to perform the following actions:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Create Functions &amp;amp; Layers&lt;/strong>: Create a new &lt;a href="https://app.localstack.cloud/resources/lambda/functions/new">Lambda function&lt;/a> or a new &lt;a href="https://app.localstack.cloud/resources/lambda/layers/new">Lambda Layer&lt;/a> by clicking on &lt;strong>Create API&lt;/strong> button on top-right and creating a new configuration by clicking on &lt;strong>Submit&lt;/strong> button.&lt;/li>
&lt;li>&lt;strong>View Function &amp;amp; Layer Details&lt;/strong>: Click on any function or layer to view detailed information such as the resource&amp;rsquo;s name, ARN, runtime, handler, and more. You can also navigate across different versions of the resource.&lt;/li>
&lt;li>&lt;strong>Delete Functions &amp;amp; Layers&lt;/strong>: To delete a function or layer, select the resource from the Resource Browser, click on the &lt;strong>Remove Selected&lt;/strong> button at the top-right of the screen, and confirm the deletion by clicking on the &lt;strong>Continue&lt;/strong> button.&lt;/li>
&lt;/ul>
&lt;h2 id="migrating-to-lambda-v2">Migrating to Lambda v2&lt;/h2>
&lt;p>As part of the &lt;a href="https://discuss.localstack.cloud/t/new-lambda-implementation-in-localstack-2-0/258">LocalStack 2.0 release&lt;/a>, the Lambda provider has been migrated to &lt;code>v2&lt;/code> (formerly known as &lt;code>asf&lt;/code>). With the new implementation, the following changes have been introduced:&lt;/p>
&lt;ul>
&lt;li>To run Lambda functions in LocalStack, mount the Docker socket into the LocalStack container. Add the following Docker volume mount to your LocalStack startup configuration: &lt;code>/var/run/docker.sock:/var/run/docker.sock&lt;/code>. You can find an example of this configuration in our official &lt;a href="https://docs.localstack.cloud/getting-started/installation/#starting-localstack-with-docker-compose">&lt;code>docker-compose.yml&lt;/code> file&lt;/a>.&lt;/li>
&lt;li>The &lt;code>v2&lt;/code> provider discontinues Lambda Executor Modes such as &lt;code>LAMBDA_EXECUTOR=local&lt;/code>. Previously, this mode was used as a fallback when the Docker socket was unavailable in the LocalStack container, but many users unintentionally used it instead of the configured &lt;code>LAMBDA_EXECUTOR=docker&lt;/code>. The new provider now behaves similarly to the old &lt;code>docker-reuse&lt;/code> executor and does not require such configuration.&lt;/li>
&lt;li>The Lambda containers are now reused between invocations. The changes made to the filesystem (such as in &lt;code>/tmp&lt;/code>) will persist between subsequent invocations if the function is dispatched to the same container. This is known as a &lt;strong>warm start&lt;/strong> (see &lt;a href="https://aws.amazon.com/blogs/compute/operating-lambda-performance-optimization-part-1/">Operating Lambda&lt;/a> for more information). To ensure that each invocation starts with a fresh container, you can set the &lt;code>LAMBDA_KEEPALIVE_MS&lt;/code> configuration option to 0 milliseconds, to force &lt;strong>cold starts&lt;/strong>.&lt;/li>
&lt;li>The platform uses &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/runtimes-images.html">official Docker base images&lt;/a> pulled from &lt;code>public.ecr.aws/lambda/&lt;/code>, instead of &lt;code>lambci&lt;/code>, and supports both &lt;code>arm64&lt;/code> and &lt;code>x86_64&lt;/code> architectures. The Lambda functions filesystem now matches the AWS Lambda production environment. The ARM containers for compatible runtimes are based on Amazon Linux 2, and ARM-compatible hosts can create functions with the &lt;code>arm64&lt;/code> architecture.&lt;/li>
&lt;li>Lambda functions in LocalStack resolve AWS domains, such as &lt;code>s3.amazonaws.com&lt;/code>, to the LocalStack container. This domain resolution is DNS-based and can be disabled by setting &lt;code>DNS_ADDRESS=0&lt;/code>. For more information, refer to &lt;a href="/user-guide/tools/transparent-endpoint-injection/">Transparent Endpoint Injection&lt;/a>. Previously, LocalStack provided patched AWS SDKs to redirect AWS API calls transparently to LocalStack.&lt;/li>
&lt;li>The new provider may generate more exceptions due to invalid input. For instance, while the old provider accepted arbitrary strings (such as &lt;code>r1&lt;/code>) as Lambda roles when creating a function, the new provider validates role ARNs using a regular expression that requires them to be in the format &lt;code>arn:aws:iam::000000000000:role/lambda-role&lt;/code>. However, it currently does not verify whether the role actually exists.&lt;/li>
&lt;li>The new Lambda provider now follows the &lt;a href="https://aws.amazon.com/blogs/compute/tracking-the-state-of-lambda-functions/">AWS Lambda state model&lt;/a>, while creating and updating Lambda functions, which allows for asynchronous processing. Functions are always created in the &lt;code>Pending state&lt;/code> and move to &lt;code>Active&lt;/code> once they are ready to accept invocations. Previously, the functions were created synchronously by blocking until the function state was active. The configuration &lt;code>LAMBDA_SYNCHRONOUS_CREATE=1&lt;/code> can force synchronous function creation, but it is not recommended.&lt;/li>
&lt;li>LocalStack&amp;rsquo;s Lambda implementation, allows you to customize the Lambda execution environment using the &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/runtimes-extensions-api.html">Lambda Extensions API&lt;/a>. This API allows for advanced monitoring, observability, or developer tooling, providing greater control and flexibility over your Lambda functions. Lambda functions can also be run on hosts with &lt;a href="https://docs.localstack.cloud/references/arm64-support/#lambda-multi-architecture-support">multi-architecture support&lt;/a>, allowing you to leverage LocalStack&amp;rsquo;s Lambda API to develop and test Lambda functions with high parity.&lt;/li>
&lt;/ul>
&lt;p>The following configuration options from the old provider are discontinued in the new provider:&lt;/p>
&lt;ul>
&lt;li>The &lt;code>LAMBDA_EXECUTOR&lt;/code> and specifically, the &lt;code>LAMBDA_EXECUTOR=local&lt;/code> options are no longer supported.&lt;/li>
&lt;li>The &lt;code>LAMBDA_STAY_OPEN_MODE&lt;/code> is now the default behavior and can be removed. Instead, use the &lt;code>LAMBDA_KEEPALIVE_MS&lt;/code> option to configure how long containers should be kept running in between invocations.&lt;/li>
&lt;li>The &lt;code>LAMBDA_REMOTE_DOCKER&lt;/code> option is not used anymore since the new provider automatically copies zip files and configures hot reloading.&lt;/li>
&lt;li>The &lt;code>LAMBDA_CODE_EXTRACT_TIME&lt;/code> option is no longer used because function creation is now asynchronous.&lt;/li>
&lt;li>The &lt;code>HOSTNAME_FROM_LAMBDA&lt;/code>, &lt;code>LAMBDA_FALLBACK_URL&lt;/code>, &lt;code>SYNCHRONOUS_KINESIS_EVENTS&lt;/code>, &lt;code>SYNCHRONOUS_SNS_EVENTS&lt;/code> and &lt;code>LAMBDA_FORWARD_URL&lt;/code> options are currently not supported.&lt;/li>
&lt;li>The &lt;code>LAMBDA_CONTAINER_REGISTRY&lt;/code> option is not used anymore. Instead, use the more flexible &lt;code>LAMBDA_RUNTIME_IMAGE_MAPPING&lt;/code> option to customize individual runtimes.&lt;/li>
&lt;li>The &lt;code>LAMBDA_XRAY_INIT&lt;/code> option is no longer needed because the X-Ray daemon is always initialized.&lt;/li>
&lt;/ul>
&lt;p>However, the new provider still supports the following configuration options:&lt;/p>
&lt;ul>
&lt;li>The &lt;code>BUCKET_MARKER_LOCAL&lt;/code> option has a new default value, &lt;code>hot-reload&lt;/code>. The former default value &lt;code>__local__&lt;/code> is an invalid bucket name.&lt;/li>
&lt;li>The &lt;code>LAMBDA_TRUNCATE_STDOUT&lt;/code> option.&lt;/li>
&lt;li>The &lt;code>LAMBDA_DOCKER_NETWORK&lt;/code> option.&lt;/li>
&lt;li>The &lt;code>LAMBDA_DOCKER_FLAGS&lt;/code> option.&lt;/li>
&lt;li>The &lt;code>LAMBDA_REMOVE_CONTAINERS&lt;/code> option.&lt;/li>
&lt;li>The &lt;code>LAMBDA_DOCKER_DNS&lt;/code> option since LocalStack 2.2.&lt;/li>
&lt;/ul>
&lt;h2 id="examples">Examples&lt;/h2>
&lt;p>The following code snippets and sample applications provide practical examples of how to use Lambda in LocalStack for various use cases:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/localstack/localstack-pro-samples/tree/master/lambda-hot-reloading">Lambda Hot Reloading&lt;/a> shows how to use hot reloading to update function code and layers without having to redeploy them.&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/localstack-pro-samples/tree/master/lambda-mounting-and-debugging">Lambda Code Mounting and Debugging&lt;/a> demonstrates how to debug Lambda functions locally using code mounting.&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/localstack-pro-samples/tree/master/lambda-function-urls">Lambda Function URL&lt;/a> shows how to use HTTP to invoke a Lambda function via its Function URL.&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/localstack-pro-samples/blob/master/serverless-lambda-layers">Lambda Layers&lt;/a> demonstrates how to use Lambda layers, which are reusable packages of code that can be shared across multiple functions.&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/localstack-pro-samples/tree/master/lambda-php-bref-cdk-app">Lambda PHP/Bref&lt;/a> shows how to use PHP/Bref with and without fpm, using the Serverless framework and AWS CDK.&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/localstack-pro-samples/tree/master/lambda-container-image">Lambda Container Images&lt;/a> demonstrates how to use Lambda functions packaged as container images, which can be built using Docker and pushed to a local ECR registry.&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/localstack-pro-samples/tree/master/lambda-xray">Lambda XRay Tracing&lt;/a> shows how to enable AWS X-Ray tracing for Lambda functions using the Serverless framework.&lt;/li>
&lt;/ul>
&lt;h2 id="troubleshooting">Troubleshooting&lt;/h2>
&lt;h3 id="docker-not-available">Docker not available&lt;/h3>
&lt;p>In the old Lambda provider, Lambda functions were executed within the LocalStack container using the local executor mode. This mode was used as a fallback if the Docker socket was unavailable in the LocalStack container. However, many users inadvertently used the local executor mode instead of the intended Docker executor mode, which caused unexpected behavior.&lt;/p>
&lt;p>If you encounter the following error message, you may be using the local executor mode:&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-11" role="tablist">
&lt;li class="nav-item">
&lt;a class="nav-link active persistLang-shell"
id="tabs-11-00-tab" data-toggle="tab" href="#tabs-11-00" role="tab"
onclick="persistLang(&amp;#34;shell&amp;#34;);"aria-controls="tabs-11-00" aria-selected="false">
LocalStack Logs
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link"
id="tabs-11-01-tab" data-toggle="tab" href="#tabs-11-01" role="tab"
aria-controls="tabs-11-01" aria-selected="false">
AWS CLI
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link"
id="tabs-11-02-tab" data-toggle="tab" href="#tabs-11-02" role="tab"
aria-controls="tabs-11-02" aria-selected="false">
SAM
&lt;/a>
&lt;/li>
&lt;/ul>
&lt;div class="tab-content" id="tabs-11-content">
&lt;div class="tab-pane fade show active"
id="tabs-11-00" role="tabpanel" aria-labelled-by="tabs-11-00-tab">
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>Lambda &lt;span style="color:#4e9a06">&amp;#39;arn:aws:lambda:us-east-1:000000000000:function:my-function:$LATEST&amp;#39;&lt;/span> changed to failed. Reason: Docker not available
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>raise DockerNotAvailable&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Docker not available&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-11-01" role="tabpanel" aria-labelled-by="tabs-11-01-tab">
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>An error occurred &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>ResourceConflictException&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> when calling the Invoke operation &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>reached max retries: 0&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>: The operation cannot be performed at this time. The &lt;span style="color:#204a87;font-weight:bold">function&lt;/span> is currently in the following state: Failed&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-11-02" role="tabpanel" aria-labelled-by="tabs-11-02-tab">
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>Error: Failed to create/update the stack: sam-app, Waiter StackCreateComplete failed: Waiter encountered a terminal failure state: For expression &lt;span style="color:#4e9a06">&amp;#34;Stacks[].StackStatus&amp;#34;&lt;/span> we matched expected path: &lt;span style="color:#4e9a06">&amp;#34;CREATE_FAILED&amp;#34;&lt;/span> at least once&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>To fix this issue, add the Docker volume mount &lt;code>/var/run/docker.sock:/var/run/docker.sock&lt;/code> to your LocalStack startup. Refer to our &lt;a href="https://github.com/localstack/localstack/blob/master/docker-compose.yml">sample &lt;code>docker-compose.yml&lt;/code> file&lt;/a> as an example.&lt;/p>
&lt;h3 id="function-in-pending-state">Function in Pending state&lt;/h3>
&lt;p>If you receive a &lt;code>ResourceConflictException&lt;/code> when trying to invoke a function, it is currently in a &lt;code>Pending&lt;/code> state and cannot be executed yet. To wait until the function becomes &lt;code>active&lt;/code>, you can use the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal lambda get-function --function-name my-function
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>An error occurred (ResourceConflictException) when calling the Invoke operation (reached max retries: 0):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>The operation cannot be performed at this time.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>The function is currently in the following state: Pending
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal lambda wait function-active-v2 --function-name my-function&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Alternatively, you can check the function state using the &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/API_GetFunction.html">&lt;code>GetFunction&lt;/code> API&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal lambda get-function --function-name my-function
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Configuration&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;RevisionId&amp;#34;: &amp;#34;c61d6139-1441-4ad5-983a-5a1cec7a1847&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;State&amp;#34;: &amp;#34;Pending&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;StateReason&amp;#34;: &amp;#34;The function is being created.&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;StateReasonCode&amp;#34;: &amp;#34;Creating&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal lambda get-function --function-name my-function
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Configuration&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;RevisionId&amp;#34;: &amp;#34;c6633a28-b8d2-40f7-b8e1-02f6f32e8473&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;State&amp;#34;: &amp;#34;Active&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;LastUpdateStatus&amp;#34;: &amp;#34;Successful&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>If the function is still in the &lt;code>Pending&lt;/code> state, the output will include a &lt;code>&amp;quot;State&amp;quot;: &amp;quot;Pending&amp;quot;&lt;/code> field and a &lt;code>&amp;quot;StateReason&amp;quot;: &amp;quot;The function is being created.&amp;quot;&lt;/code> message. Once the function is active, the &lt;code>&amp;quot;State&amp;quot;&lt;/code> field will change to &lt;code>&amp;quot;Active&amp;quot;&lt;/code> and the &lt;code>&amp;quot;LastUpdateStatus&amp;quot;&lt;/code> field will indicate the status of the last update.&lt;/p>
&lt;h3 id="not-implemented-error">Not implemented error&lt;/h3>
&lt;p>If you are using LocalStack versions prior to 2.0, and encounter a &lt;code>NotImplementedError&lt;/code> in the LocalStack logs and an &lt;code>InternalFailure (501) error&lt;/code> in the client while creating a Lambda function using the &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/API_CreateFunction.html">&lt;code>CreateFunction&lt;/code> API&lt;/a>, check your &lt;code>PROVIDER_OVERRIDE_LAMBDA&lt;/code> configuration. You might encounter this error if it is set to &lt;code>legacy&lt;/code>.&lt;/p></description></item><item><title>User-Guide: CloudWatch Logs</title><link>/user-guide/aws/logs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/logs/</guid><description>
&lt;p>&lt;a href="https://docs.aws.amazon.com/cloudwatch/index.html">CloudWatch Logs&lt;/a> allows to store and retrieve logs. While some services automatically create and write logs (e.g. Lambda), logs can also be added manually.
CloudWatch Logs is available in the Community version. However, some specific features are only available in Pro.&lt;/p>
&lt;h2 id="subscription-filters">Subscription Filters&lt;/h2>
&lt;p>Subscription filters can be used to forward logs to certain services, e.g. Kinesis, Lambda, and Kinesis Data Firehose. You can read upon details in the &lt;a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/SubscriptionFilters.html">offical AWS docs&lt;/a>.&lt;/p>
&lt;h3 id="subscription-filters-with-kinesis-example">Subscription Filters with Kinesis Example&lt;/h3>
&lt;p>In the following we setup a little example on how to use subscription filters with kinesis.&lt;/p>
&lt;p>First, we setup the required resources. Therefore, we create a kinesis stream, a log group and log stream. Then we can configure the subscription filter.
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal kinesis create-stream --stream-name &amp;#34;logtest&amp;#34; --shard-count 1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>kinesis_arn=$(awslocal kinesis describe-stream --stream-name &amp;#34;logtest&amp;#34; | jq -r .StreamDescription.StreamARN)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal logs create-log-group --log-group-name test
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal logs create-log-stream \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --log-group-name test \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --log-stream-name test
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal logs put-subscription-filter \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --log-group-name &amp;#34;test&amp;#34; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --filter-name &amp;#34;kinesis_test&amp;#34; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --filter-pattern &amp;#34;&amp;#34; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --destination-arn $kinesis_arn \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --role-arn &amp;#34;arn:aws:iam::000000000000:role/kinesis_role&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;p>Next, we can add a log event, that will be forwarded to kinesis.
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>timestamp=$(($(date +&amp;#39;%s * 1000 + %-N / 1000000&amp;#39;)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal logs put-log-events --log-group-name test --log-stream-name test --log-events &amp;#34;[{\&amp;#34;timestamp\&amp;#34;: ${timestamp} , \&amp;#34;message\&amp;#34;: \&amp;#34;hello from cloudwatch\&amp;#34;}]&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;p>Now we can retrieve the data. In our example, there will only be one record. The data record is base64 encoded and compressed in gzip format:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>shard_iterator=$(awslocal kinesis get-shard-iterator --stream-name logtest --shard-id shardId-000000000000 --shard-iterator-type TRIM_HORIZON | jq -r .ShardIterator)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>record=$(awslocal kinesis get-records --limit 10 --shard-iterator $shard_iterator | jq -r &amp;#39;.Records[0].Data&amp;#39;)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>echo $record | base64 -d | zcat&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;h2 id="filter-pattern-pro-only">Filter Pattern (Pro only)&lt;/h2>
&lt;p>&lt;a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/FilterAndPatternSyntax.html">Filter patterns&lt;/a> can be used to select certain logs only.&lt;/p>
&lt;p>LocalStack currently supports simple json-property filter.&lt;/p>
&lt;h3 id="metric-filter-example">Metric Filter Example&lt;/h3>
&lt;p>Metric filters can be used to automatically create CloudWatch metrics.&lt;/p>
&lt;p>In the following example we are interested in logs that include a key-value pair &lt;code>&amp;quot;foo&amp;quot;: &amp;quot;bar&amp;quot;&lt;/code> and create a metric filter.
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal logs create-log-group --log-group-name test-filter
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal logs create-log-stream \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --log-group-name test-filter \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --log-stream-name test-filter-stream
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal logs put-metric-filter \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --log-group-name test-filter \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --filter-name my-filter \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --filter-pattern &amp;#34;{$.foo = \&amp;#34;bar\&amp;#34;}&amp;#34; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --metric-transformations \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> metricName=MyMetric,metricNamespace=MyNamespace,metricValue=1,defaultValue=0&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;p>Next, we can insert some values:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>timestamp=$(($(date +&amp;#39;%s * 1000 + %-N / 1000000&amp;#39;)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal logs put-log-events --log-group-name test-filter \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --log-stream-name test-filter-stream \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --log-events \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> timestamp=$timestamp,message=&amp;#39;&amp;#34;{\&amp;#34;foo\&amp;#34;:\&amp;#34;bar\&amp;#34;, \&amp;#34;hello\&amp;#34;: \&amp;#34;world\&amp;#34;}&amp;#34;&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> timestamp=$timestamp,message=&amp;#34;my test event&amp;#34; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> timestamp=$timestamp,message=&amp;#39;&amp;#34;{\&amp;#34;foo\&amp;#34;:\&amp;#34;nomatch\&amp;#34;}&amp;#34;&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;p>Now we can check that the metric was indeed created:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>end=$(date +%s)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>awslocal cloudwatch get-metric-statistics --namespace MyNamespace \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --metric-name MyMetric --statistics Sum --period 3600 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --start-time 1659621274 --end-time $end&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;h3 id="filter-log-events">Filter Log Events&lt;/h3>
&lt;p>Similary, you can use filter-pattern to filter logs, like here:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal logs filter-log-events --log-group-name test-filter --filter-pattern &amp;#34;{$.foo = \&amp;#34;bar\&amp;#34;}&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p></description></item><item><title>User-Guide: Managed Streaming for Kafka (MSK)</title><link>/user-guide/aws/managed-streaming-for-kafka/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/managed-streaming-for-kafka/</guid><description>
&lt;p>LocalStack supports a basic version of &lt;a href="https://aws.amazon.com/msk/">Managed Streaming for Kafka (MSK)&lt;/a> for testing. This allows you to spin up Kafka clusters on the local machine, create topics for exchanging messages, and define event source mappings that trigger Lambda functions when messages are received on a certain topic.&lt;/p>
&lt;h2 id="create-a-local-msk-cluster">Create a local MSK Cluster&lt;/h2>
&lt;h3 id="prerequisites">Prerequisites&lt;/h3>
&lt;ul>
&lt;li>Java 8&lt;/li>
&lt;/ul>
&lt;p>To create a local MSK cluster, the following create-cluster example creates an MSK cluster named EventsCluster with three broker nodes. A JSON file named &lt;code>brokernodegroupinfo.json&lt;/code> specifies the three subnets over which you want yout local Amazon MSK to distribute the broker nodes. This example doesn&amp;rsquo;t specify the monitoring level, so the cluster gets the DEFAULT level.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal kafka create-cluster \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --cluster-name &amp;#34;EventsCluster&amp;#34; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --broker-node-group-info file://brokernodegroupinfo.json \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --kafka-version &amp;#34;2.2.1&amp;#34; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --number-of-broker-nodes 3&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The brokernodegroupinfo.json contains the following info:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;InstanceType&amp;#34;: &amp;#34;kafka.m5.xlarge&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;BrokerAZDistribution&amp;#34;: &amp;#34;DEFAULT&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ClientSubnets&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;subnet-01&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;subnet-02&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;subnet-03&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
The output of the command looks similar to this:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ClusterArn&amp;#34;: &amp;#34;arn:aws:kafka:us-east-1:000000000000:cluster/EventsCluster/b154d18a-8ecb-4691-96b2-50348357fc2f-25&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ClusterName&amp;#34;: &amp;#34;EventsCluster&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;State&amp;#34;: &amp;#34;CREATING&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;p>Describing the MSK cluster can be achieved by running the following command. Replace the ClusterArn with your own.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>awslocal kafka describe-cluster --cluster-arn &amp;#34;arn:aws:kafka:us-east-1:000000000000:cluster/EventsCluster/b154d18a-8ecb-4691-96b2-50348357fc2f-25&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The expected output is something like the following&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ClusterInfo&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;BrokerNodeGroupInfo&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;BrokerAZDistribution&amp;#34;: &amp;#34;DEFAULT&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ClientSubnets&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;subnet-01&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;subnet-02&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;subnet-03&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;InstanceType&amp;#34;: &amp;#34;kafka.m5.xlarge&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ClusterArn&amp;#34;: &amp;#34;arn:aws:kafka:us-east-1:000000000000:cluster/EventsCluster/b154d18a-8ecb-4691-96b2-50348357fc2f-25&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ClusterName&amp;#34;: &amp;#34;EventsCluster&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;CreationTime&amp;#34;: &amp;#34;2022-06-29T02:45:16.848000Z&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;CurrentBrokerSoftwareInfo&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;KafkaVersion&amp;#34;: &amp;#34;2.5.0&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;CurrentVersion&amp;#34;: &amp;#34;K5OWSPKW0IK7LM&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;NumberOfBrokerNodes&amp;#34;: 3,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;State&amp;#34;: &amp;#34;ACTIVE&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ZookeeperConnectString&amp;#34;: &amp;#34;localhost:4510&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="create-a-kafka-topic">Create a kafka topic&lt;/h2>
&lt;p>In this step of using LocalStack MSK, we&amp;rsquo;ll download and use the Kafka command line interface (CLI) to create a topic that produces and consumes data.&lt;/p>
&lt;p>Run the following command to download Apache Kafka.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>wget https://archive.apache.org/dist/kafka/2.2.1/kafka_2.12-2.2.1.tgz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tar -xzf kafka_2.12-2.2.1.tgz&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Now, &lt;strong>Go to the kafka_2.12-2.2.1 directory.&lt;/strong>&lt;/p>
&lt;p>The cluster creation can take a few minutes. To find out whether the cluster you created is ready, run the following command, replacing &lt;code>ClusterArn&lt;/code> with the Amazon Resource Name (ARN) that you obtained above when you created then Cluster.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>awslocal kafka describe-cluster --cluster-arn &amp;#34;arn:aws:kafka:us-east-1:000000000000:cluster/EventsCluster&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Run the following command, replacing &lt;code>ZookeeperConnectString&lt;/code> with the value that you saved after you ran the describe-cluster command.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>bin/kafka-topics.sh --create --zookeeper localhost:4510 --replication-factor 1 --partitions 1 --topic LocalMSKTopic&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Your output should be similar to this one&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>Created topic LocalMSKTopic.&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="interacting-with-the-topic">Interacting with the topic&lt;/h2>
&lt;p>In this example we use the JVM truststore to talk to the MSK cluster. To do this, first create a folder named &lt;code>/tmp&lt;/code> on the client machine. Then, go to the bin folder of the Apache Kafka installation and run the following command, replacing &lt;code>java_home&lt;/code> with the path of your &lt;code>java_home&lt;/code>. In this instance, the &lt;code>java_home&lt;/code> is &lt;code> /Library/Internet\ Plug-Ins/JavaAppletPlugin.plugin/Contents/Home&lt;/code>.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
The following step is optional and may not be required, depending on the operating system environment being used.
&lt;/div>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>cp java_home/lib/security/cacerts /tmp/kafka.client.truststore.jks&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>While still in the bin folder of the Apache Kafka installation on the client machine, create a text file named &lt;code>client.properties&lt;/code> with the following contents.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>ssl.truststore.location=/tmp/kafka.client.truststore.jks&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Run the following command, replacing &lt;code>ClusterArn&lt;/code> with the Amazon Resource Name (ARN).&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>awslocal kafka get-bootstrap-brokers --cluster-arn ClusterArn&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>From the JSON result of the command, save the value associated with the string named &amp;ldquo;&lt;code>BootstrapBrokerStringTls&lt;/code>&amp;rdquo; because you need it in the following commands.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;BootstrapBrokerString&amp;#34;: &amp;#34;localhost:4511&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Run the following command in the bin folder, replacing &lt;code>BootstrapBrokerStringTls&lt;/code> with the value that you obtained when you ran the previous command.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>./kafka-console-producer.sh --broker-list BootstrapBrokerStringTls --producer.config client.properties --topic LocalMSKTopic&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Enter any message that you want, and press Enter. Repeat this step two or three times. Every time you enter a line and press Enter, that line is sent to your Apache Kafka cluster as a separate message.&lt;/p>
&lt;p>Keep the connection to the client machine open, and then open a second, separate connection to that machine in a new window.&lt;/p>
&lt;p>In the following command, replace &lt;code>BootstrapBrokerStringTls&lt;/code> with the value that you saved earlier. Then, go to the bin folder and run the command using your second connection to the client machine.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>./kafka-console-consumer.sh --bootstrap-server BootstrapBrokerStringTls --consumer.config client.properties --topic LocalMSKTopic --from-beginning&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You start seeing the messages you entered earlier when you used the console producer command. These messages are TLS encrypted in transit.&lt;/p>
&lt;p>Enter more messages in the producer window, and watch them appear in the consumer window.&lt;/p>
&lt;h2 id="local-msk-and-lambdas">Local MSK and Lambdas&lt;/h2>
&lt;h3 id="adding-a-local-msk-trigger">Adding a local MSK trigger&lt;/h3>
&lt;p>The following example uses the Lambda Event Source Mapping API to map a Lambda function named my-kafka-function to a Kafka topic named LocalMSKTopic. The topic&amp;rsquo;s starting position is set to LATEST.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>awslocal lambda create-event-source-mapping \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --event-source-arn arn:aws:kafka:us-east-1:000000000000:cluster/EventsCluster \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --topics LocalMSKTopic \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --starting-position LATEST \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --function-name my-kafka-function&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The following response is to be expected&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;UUID&amp;#34;: &amp;#34;9c353a2b-bc1a-48b5-95a6-04baf67f01e4&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;StartingPosition&amp;#34;: &amp;#34;LATEST&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;BatchSize&amp;#34;: 100,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ParallelizationFactor&amp;#34;: 1,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;EventSourceArn&amp;#34;: &amp;#34;arn:aws:kafka:us-east-1:000000000000:cluster/EventsCluster&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;FunctionArn&amp;#34;: &amp;#34;arn:aws:lambda:us-east-1:000000000000:function:my-kafka-function&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;LastModified&amp;#34;: &amp;#34;2021-11-21T20:55:49.438914+01:00&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;LastProcessingResult&amp;#34;: &amp;#34;OK&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;State&amp;#34;: &amp;#34;Enabled&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;StateTransitionReason&amp;#34;: &amp;#34;User action&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Topics&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;LocalMSKTopic&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Using this event source mapping, LocalStack will automatically spawn Lambda functions for each message that gets published to the target Kafka topic. You can use the &lt;code>kafka-console-producer.sh&lt;/code> client script (see above) to publish messages to the topic, and then observe the LocalStack log output to see how Lambda function are executed (in Docker containers) as new messages arrive.&lt;/p>
&lt;h2 id="delete-the-local-msk-cluster">Delete the local MSK cluster&lt;/h2>
&lt;p>Run the following command to list your MSK clusters&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>awslocal kafka list-clusters --region us-east-1&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>From the list of clusters, pick the &lt;code>ClusterARN&lt;/code> of the cluster you want deleted and run the command&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>awslocal kafka delete-cluster --cluster-arn ClusterArn&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>User-Guide: Managed Workflows for Apache Airflow (MWAA)</title><link>/user-guide/aws/mwaa/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/mwaa/</guid><description>
&lt;p>LocalStack supports &lt;a href="https://aws.amazon.com/managed-workflows-for-apache-airflow/">Managed Workflows for Apache Airflow&lt;/a>, which allow setup and operation of data pipelines.&lt;/p>
&lt;h2 id="creating-and-accessing-environments">Creating and accessing environments&lt;/h2>
&lt;p>First create an S3 bucket which will be used for Airflow resources.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 mb s3://my-mwaa-bucket&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Next create the environment with the bucket ARN as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal mwaa create-environment --dag-s3-path /dags \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --execution-role-arn arn:aws:iam::000000000000:role/airflow-role \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --network-configuration {} \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --source-bucket-arn arn:aws:s3:::my-mwaa-bucket \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --airflow-version 2.2.2 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --airflow-configuration-options agent.code=007,agent.name=bond \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --name my-mwaa-env&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>LocalStack will create the Airflow environment and print the Airflow UI URL and access credentials in the logs:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>2022-11-30T17:58:36.533 DEBUG --- [functhread13] l.services.mwaa.provider : Airflow available at http://localhost.localstack.cloud:4510 with username=localstack and password=localstack&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>LocalStack supports following versions of Apache Airflow:&lt;/p>
&lt;ul>
&lt;li>&lt;code>1.10.12&lt;/code>&lt;/li>
&lt;li>&lt;code>2.0.2&lt;/code>&lt;/li>
&lt;li>&lt;code>2.2.2&lt;/code>&lt;/li>
&lt;li>&lt;code>2.4.3&lt;/code>&lt;/li>
&lt;li>&lt;code>2.5.1&lt;/code> (default)&lt;/li>
&lt;/ul>
&lt;h2 id="airflow-configuration-options">Airflow configuration options&lt;/h2>
&lt;p>Configuration options can be passed to Airflow environments using the &lt;code>AirflowConfigurationOptions&lt;/code> argument.
The options are transformed as follows and then passed to Airflow as environment variables.&lt;/p>
&lt;ul>
&lt;li>&lt;code>agent.code&lt;/code>:&lt;code>007&lt;/code> → &lt;code>AIRFLOW__AGENT__CODE:007&lt;/code>&lt;/li>
&lt;li>&lt;code>agent.name&lt;/code>:&lt;code>bond&lt;/code> → &lt;code>AIRFLOW__AGENT__NAME:bond&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="adding-or-updating-dags">Adding or updating DAGs&lt;/h2>
&lt;p>To add DAGs to Airflow, upload them to the S3 bucket at the path configured by the &lt;code>DagS3Path&lt;/code> argument.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 cp sample_dag.py s3://my-mwaa-bucket/dags&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="installing-custom-plugins">Installing custom plugins&lt;/h2>
&lt;p>You can install custom plugins to leverage Airflow operators, interfaces or hooks.
LocalStack supports plugins packaged as per AWS specifications as described &lt;a href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-import-plugins.html#configuring-dag-plugins-test-create">here&lt;/a>.&lt;/p>
&lt;p>The plugins should be uploaded to S3 bucket configured for the MWAA environment at the &lt;code>/plugins.zip&lt;/code> path, like so:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 cp plugins.zip s3://my-mwaa-bucket/plugins.zip&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="installing-python-dependencies">Installing Python dependencies&lt;/h2>
&lt;p>LocalStack makes it possible to install Python dependencies for Apache Airflow in your environments.
First, create a &lt;code>requirements.txt&lt;/code> file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>boto3==1.17.54
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>boto==2.49.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>botocore==1.20.54
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Next, upload the file to the S3 bucket configured for use by the MWAA environment.
The file must be uploaded to &lt;code>/requirements.txt&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 cp requirements.txt s3://my-mwaa-bucket/requirements.txt&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The environment will be updated and will be ready for use with new dependencies.&lt;/p>
&lt;p>&lt;a href="https://docs.aws.amazon.com/mwaa/latest/userguide/connections-packages.html">Unlike production AWS&lt;/a>, LocalStack does not install any provider packages.
These must be installed using the above steps.&lt;/p>
&lt;h2 id="connections">Connections&lt;/h2>
&lt;p>When using connections to other AWS services within DAGs, please specify either the internal Docker IP address of the LocalStack container or &lt;code>host.docker.internal&lt;/code>.&lt;/p>
&lt;p>LocalStack currently does not use the credentials and region from &lt;code>aws_conn_id&lt;/code>.
This information must be explicitly passed in operators, hooks and sensors.&lt;/p></description></item><item><title>User-Guide: Neptune</title><link>/user-guide/aws/neptune/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/neptune/</guid><description>
&lt;p>The Neptune API provides a graph database to store nodes and edges that can be accessed via Apache TinkerPop and Gremlin queries.&lt;/p>
&lt;p>For example, you can create a Neptune cluster like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">boto3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">from&lt;/span> &lt;span style="color:#000">gremlin_python.driver&lt;/span> &lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">client&lt;/span> &lt;span style="color:#204a87;font-weight:bold">as&lt;/span> &lt;span style="color:#000">gremlin_client&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">client&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">boto3&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">client&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;neptune&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">endpoint_url&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;http://localhost:4566&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">cluster&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">client&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">create_db_cluster&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">DBClusterIdentifier&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;c1&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Engine&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;neptune&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">)[&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;DBCluster&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">cluster_url&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;ws://localhost:&lt;/span>&lt;span style="color:#4e9a06">%s&lt;/span>&lt;span style="color:#4e9a06">/gremlin&amp;#39;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">%&lt;/span> &lt;span style="color:#000">cluster&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;Port&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">graph_client&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">gremlin_client&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Client&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">cluster_url&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;g&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&amp;hellip; and then submit and query values to the DB like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">values&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;[1,2,3,4]&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">result_set&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">graph_client&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">submit&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">values&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">results&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">result_set&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">all&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">result&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">assert&lt;/span> &lt;span style="color:#000">results&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">3&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">4&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>For a simple Neptune sample running on LocalStack, please refer to &lt;a href="https://github.com/localstack/localstack-pro-samples/tree/master/neptune-graph-db">this Github repository&lt;/a>.&lt;/p></description></item><item><title>User-Guide: OpenSearch Service</title><link>/user-guide/aws/opensearch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/opensearch/</guid><description>
&lt;p>The OpenSearch Service in LocalStack lets you create one or more single-node OpenSearch clusters that behave like the &lt;a href="https://aws.amazon.com/opensearch-service/">Amazon OpenSearch Service&lt;/a>.
This service, like its AWS counterpart, is closely coupled with the &lt;a href="../elasticsearch">Elasticsearch Service&lt;/a>.
Any cluster created with the OpenSearch Service will show up in the Elasticsearch Service and vice versa.&lt;/p>
&lt;p>Following versions of OpenSearch are supported:&lt;/p>
&lt;ul>
&lt;li>1.0&lt;/li>
&lt;li>1.1&lt;/li>
&lt;li>1.2&lt;/li>
&lt;li>1.3&lt;/li>
&lt;li>2.3&lt;/li>
&lt;li>2.5 (default)&lt;/li>
&lt;/ul>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Warning&lt;/h4>
&lt;p>LocalStack uses the &lt;a href="https://github.com/opensearch-project/opensearch-py">OpenSearch Python client 2.x&lt;/a> internally.&lt;/p>
&lt;p>Features that were deprecated in OpenSearch 1.x and removed in OpenSearch 2.x are not guaranteed to work when using OpenSearch 1.x clusters with LocalStack.
&lt;a href="https://github.com/opensearch-project/opensearch-py/blob/main/COMPATIBILITY.md">More details here&lt;/a>.&lt;/p>
&lt;/div>
&lt;h2 id="creating-an-opensearch-cluster">Creating an OpenSearch cluster&lt;/h2>
&lt;p>You can go ahead and use &lt;a href="/user-guide/integrations/aws-cli/#localstack-aws-cli-awslocal">awslocal&lt;/a> to create a new OpenSearch domain via the &lt;code>aws opensearch create-domain&lt;/code> command.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Every time when you create a cluster with a version of OpenSearch you haven&amp;rsquo;t used before, the OpenSearch binary for the respective version needs to be downloaded, which may take a while.
&lt;/div>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal opensearch create-domain --domain-name my-domain
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DomainStatus&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DomainId&amp;#34;: &amp;#34;000000000000/my-domain&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DomainName&amp;#34;: &amp;#34;my-domain&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ARN&amp;#34;: &amp;#34;arn:aws:es:us-east-1:000000000000:domain/my-domain&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Created&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Deleted&amp;#34;: false,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Endpoint&amp;#34;: &amp;#34;my-domain.us-east-1.opensearch.localhost.localstack.cloud:4566&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Processing&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;UpgradeProcessing&amp;#34;: false,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;EngineVersion&amp;#34;: &amp;#34;OpenSearch_1.1&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ClusterConfig&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;InstanceType&amp;#34;: &amp;#34;m3.medium.search&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;InstanceCount&amp;#34;: 1,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DedicatedMasterEnabled&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ZoneAwarenessEnabled&amp;#34;: false,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DedicatedMasterType&amp;#34;: &amp;#34;m3.medium.search&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DedicatedMasterCount&amp;#34;: 1,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;WarmEnabled&amp;#34;: false,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ColdStorageOptions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Enabled&amp;#34;: false
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;EBSOptions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;EBSEnabled&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;VolumeType&amp;#34;: &amp;#34;gp2&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;VolumeSize&amp;#34;: 10,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Iops&amp;#34;: 0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;AccessPolicies&amp;#34;: &amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;SnapshotOptions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;AutomatedSnapshotStartHour&amp;#34;: 0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;CognitoOptions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Enabled&amp;#34;: false
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;EncryptionAtRestOptions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Enabled&amp;#34;: false
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;NodeToNodeEncryptionOptions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Enabled&amp;#34;: false
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;AdvancedOptions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;override_main_response_version&amp;#34;: &amp;#34;false&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;rest.action.multi.allow_explicit_index&amp;#34;: &amp;#34;true&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ServiceSoftwareOptions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;CurrentVersion&amp;#34;: &amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;NewVersion&amp;#34;: &amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;UpdateAvailable&amp;#34;: false,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Cancellable&amp;#34;: false,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;UpdateStatus&amp;#34;: &amp;#34;COMPLETED&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Description&amp;#34;: &amp;#34;There is no software update available for this domain.&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;AutomatedUpdateDate&amp;#34;: 0.0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;OptionalDeployment&amp;#34;: true
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DomainEndpointOptions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;EnforceHTTPS&amp;#34;: false,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;TLSSecurityPolicy&amp;#34;: &amp;#34;Policy-Min-TLS-1-0-2019-07&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;CustomEndpointEnabled&amp;#34;: false
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;AdvancedSecurityOptions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Enabled&amp;#34;: false,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;InternalUserDatabaseEnabled&amp;#34;: false
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;AutoTuneOptions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;State&amp;#34;: &amp;#34;ENABLE_IN_PROGRESS&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>In the LocalStack log you will see something like, where you can see the cluster starting up in the background.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span style="display:flex;">&lt;span>2022-01-13T10:36:29.436:INFO:localstack.services.opensearch.cluster: starting opensearch: /var/lib/localstack/libs/opensearch/1.1.0/bin/opensearch -E http.port=35403 -E http.publish_port=35403 -E transport.port=0 -E network.host=127.0.0.1 -E http.compression=false -E path.data=&amp;#34;/var/lib/localstack/opensearch/arn:aws:es:us-east-1:000000000000:domain/my-domain/data&amp;#34; -E path.repo=&amp;#34;/var/lib/localstack/opensearch/arn:aws:es:us-east-1:000000000000:domain/my-domain/backup&amp;#34; -E plugins.security.disabled=true with env {&amp;#39;OPENSEARCH_JAVA_OPTS&amp;#39;: &amp;#39;-Xms200m -Xmx600m&amp;#39;, &amp;#39;OPENSEARCH_TMPDIR&amp;#39;: &amp;#39;/var/lib/localstack/opensearch/arn:aws:es:us-east-1:000000000000:domain/my-domain/tmp&amp;#39;}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2022-01-13T10:36:29.437:INFO:localstack.services.opensearch.cluster: registering an endpoint proxy for http://my-domain.us-east-1.opensearch.localhost.localstack.cloud:4566 =&amp;gt; http://127.0.0.1:35403
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2022-01-13T10:36:32.803:INFO:localstack.services.opensearch.cluster: [2022-01-13T10:36:32,800][INFO ][o.o.n.Node ] [host-pc] version[1.1.0], pid[231895], build[tar/15e9f137622d878b79103df8f82d78d782b686a1/2021-10-04T21:29:03.079792Z], OS[Linux/5.11.0-46-generic/amd64], JVM[AdoptOpenJDK/OpenJDK 64-Bit Server VM/15.0.1/15.0.1+9]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2022-01-13T10:36:32.805:INFO:localstack.services.opensearch.cluster: [2022-01-13T10:36:32,805][INFO ][o.o.n.Node ] [host-pc] JVM home [/var/lib/localstack/libs/opensearch/1.1.0/jdk], using bundled JDK [true]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2022-01-13T10:36:32.806:INFO:localstack.services.opensearch.cluster: [2022-01-13T10:36:32,805][INFO ][o.o.n.Node ] [host-pc] JVM arguments [-Xshare:auto, -Dopensearch.networkaddress.cache.ttl=60, -Dopensearch.networkaddress.cache.negative.ttl=10, -XX:+AlwaysPreTouch, -Xss1m, -Djava.awt.headless=true, -Dfile.encoding=UTF-8, -Djna.nosys=true, -XX:-OmitStackTraceInFastThrow, -XX:+ShowCodeDetailsInExceptionMessages, -Dio.netty.noUnsafe=true, -Dio.netty.noKeySetOptimization=true, -Dio.netty.recycler.maxCapacityPerThread=0, -Dio.netty.allocator.numDirectArenas=0, -Dlog4j.shutdownHookEnabled=false, -Dlog4j2.disable.jmx=true, -Djava.locale.providers=SPI,COMPAT, -XX:+UseG1GC, -XX:G1ReservePercent=25, -XX:InitiatingHeapOccupancyPercent=30, -Djava.io.tmpdir=/var/lib/localstack/opensearch/arn:aws:es:us-east-1:000000000000:domain/my-domain/tmp, -XX:+HeapDumpOnOutOfMemoryError, -XX:HeapDumpPath=data, -XX:ErrorFile=logs/hs_err_pid%p.log, -Xlog:gc*,gc+age=trace,safepoint:file=logs/gc.log:utctime,pid,tags:filecount=32,filesize=64m, -Xms200m, -Xmx600m, -XX:MaxDirectMemorySize=314572800, -Dopensearch.path.home=/var/lib/localstack/libs/opensearch/1.1.0, -Dopensearch.path.conf=/var/lib/localstack/libs/opensearch/1.1.0/config, -Dopensearch.distribution.type=tar, -Dopensearch.bundled_jdk=true]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>and after some time, you should see that the &lt;code>Processing&lt;/code> state of the domain is set to &lt;code>false&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal opensearch describe-domain --domain-name my-domain | jq &amp;#34;.DomainStatus.Processing&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>false&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="creating-an-elasticsearch-cluster">Creating an Elasticsearch cluster&lt;/h3>
&lt;p>Like in AWS, the OpenSearch service can create Elasticsearch clusters and manage them.
To do so, you can use &lt;a href="/user-guide/integrations/aws-cli/#localstack-aws-cli-awslocal">awslocal&lt;/a> and select an Elasticsearch version with the &lt;code>--engine-version&lt;/code> parameter of the &lt;code>awslocal opensearch create-domain&lt;/code> command.
For an overview of existing Elasticsearch versions you can use &lt;code>awslocal opensearch list-versions&lt;/code>.&lt;/p>
&lt;h2 id="interact-with-the-cluster">Interact with the cluster&lt;/h2>
&lt;p>You can now interact with the cluster at the cluster API endpoint for the domain, in this case &lt;code>http://my-domain.us-east-1.opensearch.localhost.localstack.cloud:4566&lt;/code>.&lt;/p>
&lt;p>For example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl http://my-domain.us-east-1.opensearch.localhost.localstack.cloud:4566
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;name&amp;#34; : &amp;#34;host-pc&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;cluster_name&amp;#34; : &amp;#34;opensearch&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;cluster_uuid&amp;#34; : &amp;#34;DMN-2TlwRkuhMH4aRRqrkA&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;version&amp;#34; : {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;distribution&amp;#34; : &amp;#34;opensearch&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;number&amp;#34; : &amp;#34;1.1.0&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;build_type&amp;#34; : &amp;#34;tar&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;build_hash&amp;#34; : &amp;#34;15e9f137622d878b79103df8f82d78d782b686a1&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;build_date&amp;#34; : &amp;#34;2021-10-04T21:29:03.079792Z&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;build_snapshot&amp;#34; : false,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;lucene_version&amp;#34; : &amp;#34;8.9.0&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;minimum_wire_compatibility_version&amp;#34; : &amp;#34;6.8.0&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;minimum_index_compatibility_version&amp;#34; : &amp;#34;6.0.0-beta1&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;tagline&amp;#34; : &amp;#34;The OpenSearch Project: https://opensearch.org/&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Or the health endpoint:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl -s http://my-domain.us-east-1.opensearch.localhost.localstack.cloud:4566/_cluster/health | jq .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;cluster_name&amp;#34;: &amp;#34;opensearch&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;status&amp;#34;: &amp;#34;green&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;timed_out&amp;#34;: false,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;number_of_nodes&amp;#34;: 1,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;number_of_data_nodes&amp;#34;: 1,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;discovered_master&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;active_primary_shards&amp;#34;: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;active_shards&amp;#34;: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;relocating_shards&amp;#34;: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;initializing_shards&amp;#34;: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;unassigned_shards&amp;#34;: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;delayed_unassigned_shards&amp;#34;: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;number_of_pending_tasks&amp;#34;: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;number_of_in_flight_fetch&amp;#34;: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;task_max_waiting_in_queue_millis&amp;#34;: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;active_shards_percent_as_number&amp;#34;: 100
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="advanced-topics">Advanced topics&lt;/h2>
&lt;h3 id="endpoints">Endpoints&lt;/h3>
&lt;p>There are two configurable strategies that govern how domain endpoints are created. The strategy can be configured via the &lt;code>OPENSEARCH_ENDPOINT_STRATEGY&lt;/code> environment variable.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Value&lt;/th>
&lt;th>Format&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>domain&lt;/code>&lt;/td>
&lt;td>&lt;code>&amp;lt;domain-name&amp;gt;.&amp;lt;region&amp;gt;.&amp;lt;engine-type&amp;gt;.localhost.localstack.cloud:4566&lt;/code>&lt;/td>
&lt;td>This is the default strategy that uses the &lt;code>localhost.localstack.cloud&lt;/code> domain to route to your localhost&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>path&lt;/code>&lt;/td>
&lt;td>&lt;code>localhost:4566/&amp;lt;engine-type&amp;gt;/&amp;lt;region&amp;gt;/&amp;lt;domain-name&amp;gt;&lt;/code>&lt;/td>
&lt;td>An alternative that can be useful if you cannot resolve LocalStack&amp;rsquo;s localhost domain&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>port&lt;/code>&lt;/td>
&lt;td>&lt;code>localhost:&amp;lt;port-from-range&amp;gt;&lt;/code>&lt;/td>
&lt;td>Exposes the cluster(s) directly with ports from &lt;a href="/references/external-ports/">the external service port range&lt;/a>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Regardless of the service from which the clusters were created, the domain of the cluster always corresponds to the engine type (OpenSearch or Elasticsearch) of the cluster.
OpenSearch cluster therefore have &lt;code>opensearch&lt;/code> in their domain (e.g. &lt;code>my-domain.us-east-1.opensearch.localhost.localstack.cloud:4566&lt;/code>) and Elasticsearch clusters have &lt;code>es&lt;/code> in their domain (e.g. &lt;code>my-domain.us-east-1.es.localhost.localstack.cloud:4566&lt;/code>)&lt;/p>
&lt;h4 id="custom-endpoints">Custom Endpoints&lt;/h4>
&lt;p>LocalStack allows you to set arbitrary custom endpoints for your clusters in the domain endpoint options.
This can be used to overwrite the behavior of the endpoint strategies described above.
You can also choose custom domains, however it is important to add the edge port (&lt;code>80&lt;/code>/&lt;code>443&lt;/code> or by default &lt;code>4566&lt;/code>).&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal opensearch create-domain --domain-name my-domain \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --domain-endpoint-options &amp;#39;{ &amp;#34;CustomEndpoint&amp;#34;: &amp;#34;http://localhost:4566/my-custom-endpoint&amp;#34;, &amp;#34;CustomEndpointEnabled&amp;#34;: true }&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Once the domain processing is complete, you can access the cluster:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl http://localhost:4566/my-custom-endpoint/_cluster/health&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="re-using-a-single-cluster-instance">Re-using a single cluster instance&lt;/h3>
&lt;p>In some cases, you may not want to create a new cluster instance for each domain,
for example when you are only interested in testing API interactions instead of actual OpenSearch functionality.
In this case, you can set &lt;code>OPENSEARCH_MULTI_CLUSTER=0&lt;/code>, which will multiplex all domains to the same cluster.
This can however lead to unexpected behavior when persisting data into OpenSearch, or creating clusters with different versions, so we do not recommend it.&lt;/p>
&lt;h3 id="storage-layout">Storage Layout&lt;/h3>
&lt;p>OpenSearch will be organized in your state directory as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span style="display:flex;">&lt;span>localstack@machine % tree -L 4 ./volume/state
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>./volume/state
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── opensearch
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── arn:aws:es:us-east-1:000000000000:domain
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── my-cluster-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ ├── backup
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ ├── data
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └── tmp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── my-cluster-2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ ├── backup
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ ├── data
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └── tmp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="advanced-security-options">Advanced Security Options&lt;/h3>
&lt;p>Since LocalStack 1.4.0, the OpenSearch and ElasticSearch services support &amp;ldquo;Advanced Security Options&amp;rdquo;.
Currently, the internal user database for OpenSearch domains is supported.
ElasticSearch domains are currently not supported (neither via the OpenSearch nor the ElasticSearch service).
There is no integration with IAM yet (but this might be implemented in later iterations, based on user feedback).&lt;/p>
&lt;p>A secure OpenSearch domain can be spawned with this example CLI input:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;DomainName&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;secure-domain&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;ClusterConfig&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;InstanceType&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;r5.large.search&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;InstanceCount&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;DedicatedMasterEnabled&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;ZoneAwarenessEnabled&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;WarmEnabled&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;EBSOptions&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;EBSEnabled&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;VolumeType&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;gp2&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;VolumeSize&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;EncryptionAtRestOptions&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Enabled&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;NodeToNodeEncryptionOptions&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Enabled&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;DomainEndpointOptions&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;EnforceHTTPS&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;AdvancedSecurityOptions&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Enabled&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;InternalUserDatabaseEnabled&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;MasterUserOptions&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;MasterUserName&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;admin&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;MasterUserPassword&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;really-secure-passwordAa!1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It can be provisioned with the following aws(local) cli command, presumed the above CLI input is stored in a file called &lt;code>opensearch_domain.json&lt;/code>:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal opensearch create-domain --cli-input-json file://./opensearch_domain.json&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;p>Once the domain is set up (&lt;code>Processing: false&lt;/code>), the cluster can only be accessed with the given master user credentials (via HTTP basic auth):
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl -u &amp;#34;admin:really-secure-passwordAa!1&amp;#34; http://secure-domain.us-east-1.opensearch.localhost.localstack.cloud:4566/_cluster/health
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{&amp;#34;cluster_name&amp;#34;:&amp;#34;opensearch&amp;#34;,&amp;#34;status&amp;#34;:&amp;#34;green&amp;#34;,...}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
Any unauthorized requests will result in an HTTP response status code 401 (Unauthorized).&lt;/p>
&lt;h2 id="custom-opensearch-backends">Custom OpenSearch backends&lt;/h2>
&lt;p>LocalStack downloads OpenSearch asynchronously the first time you run the &lt;code>aws opensearch create-domain&lt;/code>, so you will get the response from LocalStack first and then (after download/install) you will have your OpenSearch cluster running locally.
You may not want this, and instead use your already running OpenSearch cluster.
This can also be useful when you want to run a cluster with a custom configuration that LocalStack does not support.&lt;/p>
&lt;p>To customize the OpenSearch backend, you can start your own OpenSearch cluster locally and point LocalStack to it using the &lt;code>OPENSEARCH_CUSTOM_BACKEND&lt;/code> environment variable.
Note that only a single backend can be configured, meaning that you will get a similar behavior as when you &lt;a href="#re-using-a-single-cluster-instance">re-use a single cluster instance&lt;/a>.&lt;/p>
&lt;h3 id="example">Example&lt;/h3>
&lt;p>The following shows a sample &lt;code>docker-compose.yaml&lt;/code> file that contains a single-node OpenSearch cluster and a basic LocalStack setup.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">version&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;3.9&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">services&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">opensearch&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">container_name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">opensearch&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">image&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">opensearchproject/opensearch:1.1.0&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">environment&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">node.name=opensearch&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">cluster.name=opensearch-docker-cluster&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">discovery.type=single-node&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">bootstrap.memory_lock=true&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;DISABLE_SECURITY_PLUGIN=true&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">ports&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;9200:9200&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">ulimits&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">memlock&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">soft&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>-&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">hard&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>-&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">volumes&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">data01:/usr/share/opensearch/data&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">localstack&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">container_name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;${LOCALSTACK_DOCKER_NAME-localstack_main}&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">image&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">localstack/localstack&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">ports&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;4566:4566&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">depends_on&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">opensearch&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">environment&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">OPENSEARCH_CUSTOM_BACKEND=http://opensearch:9200&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">DEBUG=${DEBUG- }&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">PERSISTENCE=${PERSISTENCE- }&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">DOCKER_HOST=unix:///var/run/docker.sock&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">volumes&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;/var/run/docker.sock:/var/run/docker.sock&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">volumes&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">data01&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">driver&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">local&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol>
&lt;li>
&lt;p>Run docker compose:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>docker-compose up -d&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Create the OpenSearch domain:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal opensearch create-domain --domain-name my-domain
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DomainStatus&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DomainId&amp;#34;: &amp;#34;000000000000/my-domain&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DomainName&amp;#34;: &amp;#34;my-domain&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ARN&amp;#34;: &amp;#34;arn:aws:es:us-east-1:000000000000:domain/my-domain&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Created&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Deleted&amp;#34;: false,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Endpoint&amp;#34;: &amp;#34;my-domain.us-east-1.opensearch.localhost.localstack.cloud:4566&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Processing&amp;#34;: false,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;UpgradeProcessing&amp;#34;: false,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;EngineVersion&amp;#34;: &amp;#34;OpenSearch_1.1&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ClusterConfig&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;InstanceType&amp;#34;: &amp;#34;m3.medium.search&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;InstanceCount&amp;#34;: 1,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DedicatedMasterEnabled&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ZoneAwarenessEnabled&amp;#34;: false,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DedicatedMasterType&amp;#34;: &amp;#34;m3.medium.search&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DedicatedMasterCount&amp;#34;: 1,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;WarmEnabled&amp;#34;: false,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ColdStorageOptions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Enabled&amp;#34;: false
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;EBSOptions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;EBSEnabled&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;VolumeType&amp;#34;: &amp;#34;gp2&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;VolumeSize&amp;#34;: 10,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Iops&amp;#34;: 0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;AccessPolicies&amp;#34;: &amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;SnapshotOptions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;AutomatedSnapshotStartHour&amp;#34;: 0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;CognitoOptions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Enabled&amp;#34;: false
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;EncryptionAtRestOptions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Enabled&amp;#34;: false
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;NodeToNodeEncryptionOptions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Enabled&amp;#34;: false
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;AdvancedOptions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;override_main_response_version&amp;#34;: &amp;#34;false&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;rest.action.multi.allow_explicit_index&amp;#34;: &amp;#34;true&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ServiceSoftwareOptions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;CurrentVersion&amp;#34;: &amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;NewVersion&amp;#34;: &amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;UpdateAvailable&amp;#34;: false,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Cancellable&amp;#34;: false,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;UpdateStatus&amp;#34;: &amp;#34;COMPLETED&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Description&amp;#34;: &amp;#34;There is no software update available for this domain.&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;AutomatedUpdateDate&amp;#34;: 0.0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;OptionalDeployment&amp;#34;: true
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DomainEndpointOptions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;EnforceHTTPS&amp;#34;: false,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;TLSSecurityPolicy&amp;#34;: &amp;#34;Policy-Min-TLS-1-0-2019-07&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;CustomEndpointEnabled&amp;#34;: false
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;AdvancedSecurityOptions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Enabled&amp;#34;: false,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;InternalUserDatabaseEnabled&amp;#34;: false
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;AutoTuneOptions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;State&amp;#34;: &amp;#34;ENABLE_IN_PROGRESS&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>If the &lt;code>Processing&lt;/code> status is &lt;code>true&lt;/code>, it means that the cluster is not yet healthy. You can run &lt;code>decribe-domain&lt;/code> to receive the status:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal opensearch describe-domain --domain-name my-domain&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Check the cluster health endpoint and create indices:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl my-domain.us-east-1.opensearch.localhost.localstack.cloud:4566/_cluster/health | jq
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;name&amp;#34;: &amp;#34;host-pc&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;cluster_name&amp;#34;: &amp;#34;opensearch&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;cluster_uuid&amp;#34;: &amp;#34;DMN-2TlwRkuhMH4aRRqrkA&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;version&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;distribution&amp;#34;: &amp;#34;opensearch&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;number&amp;#34;: &amp;#34;1.1.0&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;build_type&amp;#34;: &amp;#34;tar&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;build_hash&amp;#34;: &amp;#34;15e9f137622d878b79103df8f82d78d782b686a1&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;build_date&amp;#34;: &amp;#34;2021-10-04T21:29:03.079792Z&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;build_snapshot&amp;#34;: false,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;lucene_version&amp;#34;: &amp;#34;8.9.0&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;minimum_wire_compatibility_version&amp;#34;: &amp;#34;6.8.0&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;minimum_index_compatibility_version&amp;#34;: &amp;#34;6.0.0-beta1&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;tagline&amp;#34;: &amp;#34;The OpenSearch Project: https://opensearch.org/&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Create an example index:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl -X PUT my-domain.us-east-1.opensearch.localhost.localstack.cloud:4566/my-index
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{&amp;#34;acknowledged&amp;#34;:true,&amp;#34;shards_acknowledged&amp;#34;:true,&amp;#34;index&amp;#34;:&amp;#34;my-index&amp;#34;}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="differences-to-aws">Differences to AWS&lt;/h2>
&lt;ul>
&lt;li>By default, AWS only sets the &lt;code>Endpoint&lt;/code> attribute of the cluster status once the cluster is up.
LocalStack will return the endpoint immediately, but keep &lt;code>Processing = &amp;quot;true&amp;quot;&lt;/code> until the cluster has been started.&lt;/li>
&lt;li>The &lt;code>CustomEndpointOptions&lt;/code> allows arbitrary endpoint URLs, which is not allowed in AWS.&lt;/li>
&lt;/ul>
&lt;h2 id="troubleshooting">Troubleshooting&lt;/h2>
&lt;p>If you are using the &lt;code>OPENSEARCH_ENDPOINT_STRATEGY=domain&lt;/code> (which is the default) and are having issues with resolving the subdomains, &lt;a href="/user-guide/tools/transparent-endpoint-injection/dns-server/#dns-rebind-protection">please check if your DNS blocks rebind queries&lt;/a>.&lt;/p></description></item><item><title>User-Guide: Quantum Ledger Database (QLDB)</title><link>/user-guide/aws/qldb/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/qldb/</guid><description>
&lt;p>The Quantum Ledger Database (QLDB) API supports queries over cryptographically verifiable data, stored in a journal of immutable transaction events. LocalStack allows to create local ledgers and journals, to perform &lt;code>CREATE TABLE&lt;/code> statements, to insert data via &lt;code>INSERT&lt;/code> statements, and to query data via &lt;code>SELECT&lt;/code> statements.&lt;/p>
&lt;p>QLDB uses the &lt;a href="https://amzn.github.io/ion-docs">Amazon ION data format&lt;/a>, a data serialization format that represents a superset of JSON, with a number of additional features.&lt;/p>
&lt;p>A simple QLDB example running on LocalStack is provided in &lt;a href="https://github.com/localstack/localstack-pro-samples/tree/master/qldb-ledger-queries">this Github repository&lt;/a>. The sample consists of two simple scenarios: (1) to create and list tables via the &lt;code>pyqldb&lt;/code> Python library, and (2) to insert data into two tables and perform a &lt;code>JOIN&lt;/code> query that combines data from the two tables. The sample output is posted below:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span style="display:flex;">&lt;span>Scenario 1: create and list tables in ledger
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-----------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Creating new test ledger in QLDB API: ledger-test-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Creating two test tables in ledger
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Retrieved list of tables in ledger ledger-test-1: [&amp;#39;foobar1&amp;#39;, &amp;#39;foobar2&amp;#39;]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-----------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Scenario 2: create ledger tables and run join query
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-----------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Creating two test tables in ledger - &amp;#34;Vehicle&amp;#34; and &amp;#34;VehicleRegistration&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Running a query that joins data from the two tables
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Query result: [{&amp;#39;Vehicle&amp;#39;: {&amp;#39;id&amp;#39;: &amp;#39;v1&amp;#39;}}, {&amp;#39;Vehicle&amp;#39;: {&amp;#39;id&amp;#39;: &amp;#39;v2&amp;#39;}}, {&amp;#39;Vehicle&amp;#39;: {&amp;#39;id&amp;#39;: &amp;#39;v3&amp;#39;}}]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>User-Guide: Redshift</title><link>/user-guide/aws/redshift/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/redshift/</guid><description>
&lt;p>Redshift is a cloud-based data warehouse solution which allows end users to aggregate huge volumes of data &amp;amp; parallel processing of data. Redshift is fully managed by AWS and serves as a petabyte-scale service which allows users to create visualization reports and critically analyze collected data. The query results can be saved to an S3 Data Lake while additional analytics can be provided by Athena or SageMaker.&lt;/p>
&lt;p>A basic version of Redshift is available in LocalStack Pro - see the supported APIs are available over our &lt;a href="/user-guide/aws/feature-coverage/">feature coverage page&lt;/a>.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>In this getting started guide, you&amp;rsquo;ll learn how to make a basic usage of Redshift over LocalStack. This guide is intended for users who wish to get more acquainted with SNS, and assumes you have basic knowledge of the AWS CLI (and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script). First, start your LocalStack instance using your preferred method, then run the following commands:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Create a cluster named &lt;code>mysamplecluster&lt;/code> using the &lt;code>awslocal&lt;/code> CLI:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal redshift create-cluster --cluster-identifier mysamplecluster --master-username masteruser --master-user-password secret1 --node-type ds2.xlarge --cluster-type single-node&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Redshift is essentially mocked in LocalStack alongside the node type. Hence while developing and testing locally, you can use any node type.
&lt;/div>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Check the Redshift cluster creation progress by running the following command:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal redshift describe-clusters --cluster-identifier mysamplecluster&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Get all the information about all cluster security groups in the account:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal redshift describe-cluster-security-groups&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Get all the general cluster properties:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal redshift describe-clusters&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Associate a cluster with a cluster security group:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal redshift modify-cluster --cluster-identifier mysamplecluster --cluster-security-groups mysamplesecuritygroup&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Delete a cluster without specifying a final snapshot:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal redshift delete-cluster --cluster-identifier mysamplecluster --skip-final-cluster-snapshot&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>To get started with a more extensive example, please refer to the &lt;a href="https://github.com/localstack/localstack-pro-samples/tree/master/glue-redshift-crawler">Glue Crawler Redshift Integration (JDBC)&lt;/a> sample project.&lt;/p></description></item><item><title>User-Guide: Relational Database Service (RDS)</title><link>/user-guide/aws/rds/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/rds/</guid><description>
&lt;p>LocalStack supports a basic version of the &lt;a href="https://aws.amazon.com/rds/">Relational Database Service (RDS)&lt;/a> for testing.&lt;/p>
&lt;h2 id="supported-db-engines">Supported DB engines&lt;/h2>
&lt;p>Currently, it is possible to spin up PostgreSQL, MariaDB, MySQL, and MSSQL (SQL Server) databases on the local machine.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Some configuration of the RDS clusters and instances have currently only CRUD functionality. E.g., the &lt;code>storage-encrypted&lt;/code> flag is returned as it is set, but there is no support for actual storage encryption yet.
&lt;/div>
&lt;h3 id="postgres-engine">Postgres Engine&lt;/h3>
&lt;p>When creating an RDS DB cluster or instance with &lt;code>postgres&lt;/code>/&lt;code>aurora-postgresql&lt;/code> DB engine and a specific &lt;code>EngineVersion&lt;/code>, LocalStack will install and provision the respective Postgres version on demand.&lt;/p>
&lt;p>Currently, major versions between 10 and 15 can be chosen - when selecting a major version outside of this range, the default version 11 is used as fallback.&lt;/p>
&lt;p>Please be aware that the minor version cannot be freely selected - the latest available version will be installed in the docker environment.&lt;/p>
&lt;p>In order to disable installation of custom versions, you may configure the environment variable &lt;code>RDS_PG_CUSTOM_VERSIONS=0&lt;/code>, in which case always the default Postgres version 11 will be used.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
The &lt;code>describe-db-cluster&lt;/code> and &lt;code>describe-db-instances&lt;/code> calls will still return the &lt;code>engine-version&lt;/code> as it was defined for the creation, but the actual installed postgres engine could be different. This is important, e.g., when using a terraform configuration, as it should not detect changes in that case.
&lt;/div>
&lt;p>DB instances and DB cluster with Postgres engine support the creation and restoring of snapshots.&lt;/p>
&lt;h3 id="mariadb-engine">MariaDB Engine&lt;/h3>
&lt;p>MariaDB will be installed as OS package in LocalStack. Currently, it is not possible to freely select a specific version.&lt;/p>
&lt;p>Snapshots are currently not supported for MariaDB.&lt;/p>
&lt;h3 id="mysql-engine">MySQL Engine&lt;/h3>
&lt;p>By default, a MariaDB installation is used when requesting a MySQL engine type.&lt;/p>
&lt;p>If you wish to use a real MySQL version, you can do so by setting the environment variable &lt;code>RDS_MYSQL_DOCKER=1&lt;/code>. With this feature enabled, MySQL community server will be started in a new Docker container when requesting the MySQL engine. The &lt;code>engine-version&lt;/code> will be used as the tag for the image, meaning you can freely select the desired MySQL version that is listed on the &lt;a href="https://hub.docker.com/_/mysql">official MySQL Docker Hub&lt;/a>.&lt;/p>
&lt;p>In case you want to use a special image, you can also set the environment variable &lt;code>MYSQL_IMAGE=&amp;lt;my-image:tag&amp;gt;&lt;/code>.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Please be aware that MySQL images for &lt;code>arm64&lt;/code> are only available for newer versions. Please check the &lt;a href="https://hub.docker.com/_/mysql">MySQL Docker Hub repository&lt;/a> for details on the availability.
&lt;/div>
&lt;p>Please note that the &lt;code>MasterUserPassword&lt;/code> defined for the database cluster/instance will be used as the &lt;code>MYSQL_ROOT_PASSWORD&lt;/code> environment for user &lt;code>root&lt;/code> in the MySQL container. The user for &lt;code>MasterUserName&lt;/code> will use the same password, and will have full access to the defined database.&lt;/p>
&lt;p>DB Snapshots are currently not supported for MySQL.&lt;/p>
&lt;h3 id="mssql-engine">MSSQL Engine&lt;/h3>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
&lt;p>In order to use MSSQL databases, you need to explicitly accept the &lt;a href="https://hub.docker.com/_/microsoft-mssql-server">Microsoft SQL Server End-User Licensing Agreement (EULA)&lt;/a> by setting &lt;code>MSSQL_ACCEPT_EULA=Y&lt;/code> in the LocalStack container environment.&lt;/p>
&lt;p>Please note that MSSQL does not yet have official support for &lt;code>arm64&lt;/code>.&lt;/p>
&lt;/div>
&lt;p>For the MSSQL engine, the database server is started in a new docker container using the &lt;code>latest&lt;/code> image.&lt;/p>
&lt;p>DB Snapshots are currently not supported for MSSQL.&lt;/p>
&lt;h2 id="end-to-end-example-postgres">End-to-end example (Postgres)&lt;/h2>
&lt;p>The local RDS service also supports the &lt;a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html">RDS Data API&lt;/a>, which allows executing data queries against RDS clusters over a JSON/REST interface.&lt;/p>
&lt;p>Below is a simple example that illustrates (1) creation of an RDS cluster, (2) creation of a SecretsManager secret with the DB password, and (3) running a simple &lt;code>SELECT 123&lt;/code> query via the RDS Data API.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal rds create-db-cluster --db-cluster-identifier db1 --engine aurora-postgresql --database-name test --master-username myuser --master-user-password mypassword
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DBCluster&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Endpoint&amp;#34;: &amp;#34;localhost:4510&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Port&amp;#34;: 4510, # may vary
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DBClusterArn&amp;#34;: &amp;#34;arn:aws:rds:us-east-1:000000000000:cluster:db1&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>cat &amp;lt;&amp;lt; &amp;#39;EOF&amp;#39; &amp;gt; mycreds.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;engine&amp;#34;: &amp;#34;aurora-postgresql&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;username&amp;#34;: &amp;#34;myuser&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;password&amp;#34;: &amp;#34;mypassword&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;host&amp;#34;: &amp;#34;localhost&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;dbname&amp;#34;: &amp;#34;test&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;port&amp;#34;: &amp;#34;4510&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>EOF
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal secretsmanager create-secret \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --name dbpass \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --secret-string file://mycreds.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ARN&amp;#34;: &amp;#34;arn:aws:secretsmanager:us-east-1:000000000000:secret:dbpass-cfnAX&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Name&amp;#34;: &amp;#34;dbpass&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;VersionId&amp;#34;: &amp;#34;fffa1f4a-2381-4a2b-a977-4869d59a16c0&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal rds-data execute-statement --database test --resource-arn arn:aws:rds:us-east-1:000000000000:cluster:db1 --secret-arn arn:aws:secretsmanager:us-east-1:000000000000:secret:dbpass-cfnAX --include-result-metadata --sql &amp;#39;SELECT 123&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;columnMetadata&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;arrayBaseColumnType&amp;#34;: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;isAutoIncrement&amp;#34;: false,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;isCaseSensitive&amp;#34;: false,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;isCurrency&amp;#34;: false,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;isSigned&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;label&amp;#34;: &amp;#34;?column?&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;name&amp;#34;: &amp;#34;?column?&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;nullable&amp;#34;: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;precision&amp;#34;: 10,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;scale&amp;#34;: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;schemaName&amp;#34;: &amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;tableName&amp;#34;: &amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;type&amp;#34;: 4,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;typeName&amp;#34;: &amp;#34;int4&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;numberOfRecordsUpdated&amp;#34;: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;records&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;longValue&amp;#34;: 123
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can also use other clients like &lt;code>psql&lt;/code> to interact with the database. The hostname and port of your created instance can be found in the output from above or by running &lt;code>awslocal rds describe-db-instances&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>psql -d test -U test -p 4513 -h localhost -W
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Password: &amp;lt;enter &amp;#34;test&amp;#34;&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="default-usernames-and-passwords">Default usernames and passwords&lt;/h2>
&lt;p>Please consider the following notes regarding default usernames/passwords and database names:&lt;/p>
&lt;ul>
&lt;li>The default for &lt;code>master-username&lt;/code> and &lt;code>db-name&lt;/code> is &amp;ldquo;test&amp;rdquo;. The default &lt;code>master-user-password&lt;/code> is &amp;ldquo;test&amp;rdquo; - except for MSSQL DBs, which uses &amp;ldquo;Test123!&amp;rdquo; as the default master password.&lt;/li>
&lt;li>You can use any &lt;code>master-username&lt;/code>, except &amp;ldquo;postgres&amp;rdquo;, for creating a new RDS instance. The user will automatically be created.&lt;/li>
&lt;li>The user &amp;ldquo;postgres&amp;rdquo; is special, and it is not possible to create a new RDS instance with this user name.&lt;/li>
&lt;li>Do not use &lt;code>db-name&lt;/code> &amp;ldquo;postgres&amp;rdquo; as it is already in use by LocalStack.&lt;/li>
&lt;/ul>
&lt;h2 id="iam-authentication-support">IAM Authentication Support&lt;/h2>
&lt;p>IAM auth token can be used to connect to RDS. This feature is currently only supported for Postgres in LocalStack.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Please be aware that the IAM authentication is not verified at this point, which means that any DB user that is granted the role &lt;code>rds_iam&lt;/code> will receive a valid token and will be able to connect to the database.
&lt;/div>
&lt;h3 id="using-iam-example">Using IAM example&lt;/h3>
&lt;p>The following example showcases the IAM authentication flow for RDS Postgres:&lt;/p>
&lt;ul>
&lt;li>create a DB instance, and retrieve the host and port for the instance&lt;/li>
&lt;li>connect to the DB using the master username and password. Then create a new user and grant it the role &lt;code>rds_iam&lt;/code>:
&lt;ul>
&lt;li>&lt;code>CREATE USER &amp;lt;username&amp;gt; WITH LOGIN&lt;/code>&lt;/li>
&lt;li>&lt;code>GRANT rds_iam TO &amp;lt;username&amp;gt;&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>generate a token for the &lt;code>&amp;lt;username&amp;gt;&lt;/code> via the &lt;code>generate-db-auth-token&lt;/code> command&lt;/li>
&lt;li>connect to the DB with the user you have a created and the token generated in the previous step as password&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>MASTER_USER=hello
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>MASTER_PW=&amp;#39;MyPassw0rd!&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>DB_NAME=test
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal rds create-db-instance --master-username $MASTER_USER --master-user-password $MASTER_PW --db-instance-identifier mydb --engine postgres --db-name $DB_NAME --enable-iam-database-authentication --db-instance-class db.t3.small
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>PORT=$(awslocal rds describe-db-instances --db-instance-identifier mydb | jq -r &amp;#34;.DBInstances[0].Endpoint.Port&amp;#34;)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>HOST=$(awslocal rds describe-db-instances --db-instance-identifier mydb | jq -r &amp;#34;.DBInstances[0].Endpoint.Address&amp;#34;)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>PGPASSWORD=$MASTER_PW psql -d $DB_NAME -U $MASTER_USER -p $PORT -h $HOST -w -c &amp;#39;CREATE USER myiam WITH LOGIN&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>PGPASSWORD=$MASTER_PW psql -d $DB_NAME -U $MASTER_USER -p $PORT -h $HOST -w -c &amp;#39;GRANT rds_iam TO myiam&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>TOKEN=$(awslocal rds generate-db-auth-token --username myiam --hostname $HOST --port $PORT)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>PGPASSWORD=$TOKEN psql -d $DB_NAME -U myiam -w -p $PORT -h $HOST&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="global-database-support">Global Database Support&lt;/h2>
&lt;p>LocalStack supports &lt;a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database.html">Aurora Global Database&lt;/a>, with some limitations:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>When creating a global database, there will only be one local database created.
All clusters and instances that belong to the global database will point to the same endpoint.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Consequently, clusters that have been removed from a global database cannot be used as a standalone-cluster, like on AWS.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Persistence for global databases is currently not supported.&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>User-Guide: Route 53</title><link>/user-guide/aws/route53/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/route53/</guid><description>
&lt;p>The Route53 API in LocalStack Pro allows you to create hosted zones and to manage DNS entries (e.g., A records) which can then be queried via the built-in DNS server.&lt;/p>
&lt;p>The example below illustrates the creation of a hosted zone &lt;code>example.com&lt;/code>, registration of an A record named &lt;code>test.example.com&lt;/code> that points to &lt;code>1.2.3.4&lt;/code>, and finally querying the DNS record by using the &lt;code>dig&lt;/code> command against the DNS server running on &lt;code>localhost&lt;/code> (inside the LocalStack container, on port &lt;code>53&lt;/code>):
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>zone_id=$(awslocal route53 create-hosted-zone --name example.com --caller-reference r1 | jq -r &amp;#39;.HostedZone.Id&amp;#39;)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal route53 change-resource-record-sets --hosted-zone-id $zone_id --change-batch &amp;#39;Changes=[{Action=CREATE,ResourceRecordSet={Name=test.example.com,Type=A,ResourceRecords=[{Value=1.2.3.4}]}}]&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>dig @localhost test.example.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;; ANSWER SECTION:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>test.example.com. 300 IN A 1.2.3.4&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Using the built-in DNS capabilities requires privileged access for the LocalStack container (please also refer to the &lt;code>DNS_ADDRESS&lt;/code> configuration variable).
&lt;/div>
&lt;h2 id="customizing-internal-endpoint-resolution">Customizing internal endpoint resolution&lt;/h2>
&lt;p>The DNS name &lt;code>localhost.localstack.cloud&lt;/code> (and any subdomains like &lt;code>mybucket.s3.localhost.localstack.cloud&lt;/code>) is used internally in LocalStack to route requests, e.g., between a Lambda container and the LocalStack APIs.&lt;/p>
&lt;p>Customizing the internal LocalStack DNS name is not a common requirement - it should work out of the box for most use cases. However, in some cases you may want to customize the external resolution of this DNS name, for example if your LocalStack instance is running on a separate Docker network than your application code, or even on a different machine.&lt;/p>
&lt;p>Assume we&amp;rsquo;d like to have all &lt;code>*.localhost.localstack.cloud&lt;/code> subdomains resolve to the address &lt;code>5.6.7.8&lt;/code> (i.e., if this is the IP where your LocalStack instance is accessible) when querying the built-in DNS server. We can utilize Route53 to that effect:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>zone_id=$(awslocal route53 create-hosted-zone --name localhost.localstack.cloud --caller-reference r1 | jq -r .HostedZone.Id)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal route53 change-resource-record-sets --hosted-zone-id $zone_id --change-batch &amp;#39;{&amp;#34;Changes&amp;#34;:[{&amp;#34;Action&amp;#34;:&amp;#34;CREATE&amp;#34;,&amp;#34;ResourceRecordSet&amp;#34;:{&amp;#34;Name&amp;#34;:&amp;#34;localhost.localstack.cloud&amp;#34;,&amp;#34;Type&amp;#34;:&amp;#34;A&amp;#34;,&amp;#34;ResourceRecords&amp;#34;:[{&amp;#34;Value&amp;#34;:&amp;#34;5.6.7.8&amp;#34;}]}},{&amp;#34;Action&amp;#34;:&amp;#34;CREATE&amp;#34;,&amp;#34;ResourceRecordSet&amp;#34;:{&amp;#34;Name&amp;#34;:&amp;#34;*.localhost.localstack.cloud&amp;#34;,&amp;#34;Type&amp;#34;:&amp;#34;A&amp;#34;,&amp;#34;ResourceRecords&amp;#34;:[{&amp;#34;Value&amp;#34;:&amp;#34;5.6.7.8&amp;#34;}]}}]}&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>dig @127.0.0.1 bucket1.s3.localhost.localstack.cloud
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;; ANSWER SECTION:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>localhost.localstack.cloud. 300 IN A 5.6.7.8
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>dig @127.0.0.1 localhost.localstack.cloud
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;; ANSWER SECTION:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>localhost.localstack.cloud. 300 IN A 5.6.7.8&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p></description></item><item><title>User-Guide: S3</title><link>/user-guide/aws/s3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/s3/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>S3 (Simple Storage Service) is an object storage service that provides a highly scalable and durable solution for storing and retrieving data. In S3, a bucket represents a directory, while an object corresponds to a file. Each object or file within S3 encompasses essential attributes such as a unique key denoting its name, the actual content it holds, a version ID for versioning support, and accompanying metadata. S3 can store unlimited objects, allowing you to store, retrieve, and manage your data in a highly adaptable and reliable manner.&lt;/p>
&lt;p>LocalStack supports S3 via the Community offering, allowing you to use the S3 APIs in your local environment to create new buckets, manage your S3 objects, and test your S3 configurations locally. The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_s3/">API coverage page&lt;/a>, which provides information on the extent of S3&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to S3 and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method. We will demonstrate how you can create an S3 bucket, manage S3 objects, and generate pre-signed URLs for S3 objects.&lt;/p>
&lt;h3 id="create-an-s3-bucket">Create an S3 bucket&lt;/h3>
&lt;p>You can create an S3 bucket using the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/s3api/create-bucket.html">&lt;code>CreateBucket&lt;/code>&lt;/a> API. Run the following command to create an S3 bucket named &lt;code>sample-bucket&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3api create-bucket --bucket sample-bucket&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can list your S3 buckets using the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/s3api/list-buckets.html">&lt;code>ListBuckets&lt;/code>&lt;/a> API. Run the following command to list your S3 buckets:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3api list-buckets&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>On successful creation of the S3 bucket, you will see the following output:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Buckets&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Name&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;sample-bucket&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;CreationDate&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;2023-07-18T06:36:25+00:00&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Owner&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;DisplayName&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;webfile&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ID&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;75aa57f09aa0c8caeab4f8c24e99d10f8e7faeebf76c078efc7c6caea54ba06a&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="managing-s3-objects">Managing S3 objects&lt;/h3>
&lt;p>To upload a file to your S3 bucket, you can use the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/s3api/put-object.html">&lt;code>PutObject&lt;/code>&lt;/a> API. Download a random image from the internet and save it as &lt;code>image.jpg&lt;/code>. Run the following command to upload the file to your S3 bucket:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3api put-object \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --bucket sample-bucket \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --key image.jpg \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --body image.jpg&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can list the objects in your S3 bucket using the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/s3api/list-objects.html">&lt;code>ListObjects&lt;/code>&lt;/a> API. Run the following command to list the objects in your S3 bucket:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3api list-objects \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --bucket sample-bucket&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>If your image has been uploaded successfully, you will see the following output:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Contents&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Key&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;image.jpg&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;LastModified&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;2023-07-18T06:40:07+00:00&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ETag&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;\&amp;#34;d41d8cd98f00b204e9800998ecf8427e\&amp;#34;&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Size&amp;#34;&lt;/span>: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;StorageClass&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;STANDARD&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Owner&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;DisplayName&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;webfile&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ID&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;75aa57f09aa0c8caeab4f8c24e99d10f8e7faeebf76c078efc7c6caea54ba06a&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Run the following command to upload a file named &lt;code>index.html&lt;/code> to your S3 bucket:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3api put-object --bucket sample-bucket --key index.html --body index.html
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ETag&amp;#34;: &amp;#34;\&amp;#34;d41d8cd98f00b204e9800998ecf8427e\&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="generate-a-pre-signed-url-for-s3-object">Generate a pre-signed URL for S3 object&lt;/h3>
&lt;p>You can generate a pre-signed URL for your S3 object using the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/s3/presign.html">&lt;code>presign&lt;/code>&lt;/a> command. Pre-signed URL allows anyone to retrieve the S3 object with an HTTP GET request.&lt;/p>
&lt;p>Run the following command to generate a pre-signed URL for your S3 object:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 presign s3://sample-bucket/image.jpg&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You will see a generated pre-signed URL for your S3 object. You can use &lt;a href="https://curl.se/">&lt;code>cURL&lt;/code>&lt;/a> or &lt;a href="https://www.gnu.org/software/wget/">&lt;code>wget&lt;/code>&lt;/a> to retrieve the S3 object using the pre-signed URL.&lt;/p>
&lt;h2 id="path-style-and-virtual-hosted-style-requests">Path-Style and Virtual Hosted-Style Requests&lt;/h2>
&lt;p>Similar to AWS, LocalStack categorizes requests as either &lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/VirtualHosting.html">Path-Style or Virtual Hosted-Style&lt;/a> based on the Host header of the request. The following example illustrates this distinction:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>http://&amp;lt;bucket-name&amp;gt;.s3.&amp;lt;region&amp;gt;.localhost.localstack.cloud:4566/&amp;lt;key-name&amp;gt; &lt;span style="color:#8f5902;font-style:italic"># host-style request&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>http://s3.&amp;lt;region&amp;gt;.localhost.localstack.cloud:4566/&amp;lt;bucket-name&amp;gt;/&amp;lt;key-name&amp;gt; &lt;span style="color:#8f5902;font-style:italic"># path-style request&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>As a special case in LocalStack, leaving out &lt;code>&amp;lt;region&amp;gt;&lt;/code> also works for the &lt;code>s3.localhost.localstack.cloud&lt;/code> domain. &lt;code>&amp;lt;bucket-name&amp;gt;.s3.localhost.localstack.cloud&lt;/code> is also a host-style request.&lt;/p>
&lt;p>All other requests are treated as path-style requests. Using the &lt;code>s3.localhost.localstack.cloud&lt;/code> endpoint URL is recommended for all requests aimed at S3.&lt;/p>
&lt;h2 id="configuring-cross-origin-resource-sharing-on-s3">Configuring Cross-Origin Resource Sharing on S3&lt;/h2>
&lt;p>You can configure Cross-Origin Resource Sharing (CORS) on a LocalStack S3 bucket using AWS Command Line Interface (CLI). It would allow your local application to communicate directly with an S3 bucket in LocalStack. By default, LocalStack will apply specific CORS rules to all requests to allow you to display and access your resources through &lt;a href="https://app.localstack.cloud">LocalStack Web Application&lt;/a>. If no CORS rules are configured for your S3 bucket, LocalStack will apply default rules unless specified otherwise.&lt;/p>
&lt;p>To configure CORS rules for your S3 bucket, you can use the &lt;code>awslocal&lt;/code> wrapper. Optionally, you can run a local web application on &lt;a href="http://localhost:3000">localhost:3000&lt;/a>. You can emulate the same behaviour with an AWS SDK or an integration you use. Follow this step-by-step guide to configure CORS rules on your S3 bucket.&lt;/p>
&lt;p>Run the following command on your terminal to create your S3 bucket:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3api create-bucket --bucket cors-bucket
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Location&amp;#34;: &amp;#34;/cors-bucket&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Next, create a JSON file with the CORS configuration. The file should have the following format:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;CORSRules&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;AllowedHeaders&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;*&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;AllowedMethods&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;GET&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;POST&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;PUT&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;AllowedOrigins&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;http://localhost:3000&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;ExposeHeaders&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;ETag&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Note that this configuration is a sample, and you can tailor it to fit your needs better, for example, restricting the &lt;strong>AllowedHeaders&lt;/strong> to specific ones.
&lt;/div>
&lt;p>Save the file locally with a name of your choice, for example, &lt;code>cors-config.json&lt;/code>. Run the following command to apply the CORS configuration to your S3 bucket:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3api put-bucket-cors --bucket cors-bucket --cors-configuration file://cors-config.json&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can further verify that the CORS configuration was applied successfully by running the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3api get-bucket-cors --bucket cors-bucket&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>On applying the configuration successfully, you should see the same JSON configuration file you created earlier. Your S3 bucket is configured to allow cross-origin resource sharing, and if you try to send requests from your local application running on &lt;a href="http://localhost:3000">localhost:3000&lt;/a>, they should be successful.&lt;/p>
&lt;p>However, if you try to access your bucket from &lt;a href="https://app.localstack.cloud">LocalStack Web Application&lt;/a>, you&amp;rsquo;ll see errors, and your bucket won&amp;rsquo;t be accessible anymore. We can edit the JSON file &lt;code>cors-config.json&lt;/code> you created earlier with the following configuration and save it:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;CORSRules&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;AllowedHeaders&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;*&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;AllowedMethods&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;GET&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;POST&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;PUT&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;HEAD&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;DELETE&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;AllowedOrigins&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;http://localhost:3000&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;https://app.localstack.cloud&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;http://app.localstack.cloud&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;ExposeHeaders&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;ETag&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can now run the same steps as before to update the CORS configuration and verify if it is applied correctly:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3api put-bucket-cors --bucket cors-bucket --cors-configuration file://cors-config.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3api get-bucket-cors --bucket cors-bucket&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can try again to upload files in your bucket from the &lt;a href="https://app.localstack.cloud">LocalStack Web Application&lt;/a> and it should work.&lt;/p>
&lt;h2 id="resource-browser">Resource Browser&lt;/h2>
&lt;p>The LocalStack Web Application provides a &lt;a href="https://docs.localstack.cloud/user-guide/web-application/resource-browser/">Resource Browser&lt;/a> for managing S3 buckets &amp;amp; configurations. You can access the Resource Browser by opening the LocalStack Web Application in your browser, navigating to the &lt;strong>Resources&lt;/strong> section, and then clicking on &lt;strong>S3&lt;/strong> under the &lt;strong>Storage&lt;/strong> section.&lt;/p>
&lt;img src="s3-resource-browser.png" alt="S3 Resource Browser" title="S3 Resource Browser" width="900" />
&lt;p>The Resource Browser allows you to perform the following actions:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Create Bucket&lt;/strong>: Create a new S3 bucket by specifying a &lt;strong>Bucket Name&lt;/strong>, &lt;strong>Bucket Configuration&lt;/strong>, &lt;strong>ACL&lt;/strong>, &lt;strong>Object Ownership&lt;/strong>, and more.&lt;/li>
&lt;li>&lt;strong>Objects &amp;amp; Permissions&lt;/strong>: View, upload, download, and delete objects in your S3 buckets. You can also view and edit the permissions, like the CORS Configuration for the bucket.&lt;/li>
&lt;li>&lt;strong>Create Folder&lt;/strong>: Create a new folder in your S3 bucket by clicking on the &lt;strong>Create Folder&lt;/strong> button and specifying a &lt;strong>Folder Name&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Delete Bucket&lt;/strong>: Delete an S3 bucket by selecting the S3 bucket and clicking on &lt;strong>Actions&lt;/strong> button and clicking on &lt;strong>Remove Selected&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;h2 id="examples">Examples&lt;/h2>
&lt;p>The following code snippets and sample applications provide practical examples of how to use S3 in LocalStack for various use cases:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/localstack-samples/sample-shipment-list-demo-lambda-dynamodb-s3">Full-Stack application with Lambda, DynamoDB &amp;amp; S3 for shipment validation&lt;/a>.&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/sample-transcribe-app">Serverless Transcription application using Transcribe, S3, Lambda, SQS, and SES&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/query-data-s3-athena-glue-sample">Query data in S3 Bucket with Amazon Athena, Glue Catalog &amp;amp; CloudFormation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/serverless-image-resizer">Serverless Image Resizer with Lambda, S3, SNS, and SES&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.localstack.cloud/tutorials/s3-static-website-terraform/">Host a static website locally using Simple Storage Service (S3) and Terraform with LocalStack&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>User-Guide: SageMaker</title><link>/user-guide/aws/sagemaker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/sagemaker/</guid><description>
&lt;p>LocalStack Pro provides a local version of the SageMaker API, which allows running jobs to create machine learning models (e.g., using PyTorch) and to deploy them.&lt;/p>
&lt;h2 id="model-training">Model Training&lt;/h2>
&lt;p>A basic training example using the &lt;code>sagemaker.tensorflow.TensorFlow&lt;/code> class is provided in &lt;a href="https://github.com/localstack/localstack-pro-samples/tree/master/sample-archive/sagemaker-ml-jobs">this Github repository&lt;/a>. Essentially, the code boils down to these core lines:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python3" data-lang="python3">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">inputs&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">...&lt;/span> &lt;span style="color:#8f5902;font-style:italic"># load training data files&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">mnist_estimator&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">TensorFlow&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">entry_point&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;mnist.py&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">role&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;arn:aws:...&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">framework_version&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;1.12.0&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">sagemaker_session&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">sagemaker_session&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">train_instance_count&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">training_steps&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">10&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">evaluation_steps&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">10&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">mnist_estimator&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">fit&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">inputs&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">logs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">False&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The code snippet above uploads the model training code to local S3, submits a new training job to the local SageMaker API, and finally puts the trained model back to an output S3 bucket. Please refer to the sample repo for more details.&lt;/p>
&lt;h2 id="model-deployment-and-inference">Model Deployment and Inference&lt;/h2>
&lt;p>SageMaker supports the deployment and real-time inference of singular local ML models. An example for that is provided in our &lt;a href="https://github.com/localstack/localstack-pro-samples/tree/master/sagemaker-inference">PRO samples repository&lt;/a>. As explained in the ReadMe of the sample, you will need to retrieve the image with your AWS account by connecting with &lt;a href="https://github.com/aws/deep-learning-containers/blob/master/available_images.md">the provided ECR repository&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 763104351884.dkr.ecr.us-east-1.amazonaws.com&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The example also shows the two currently supported options of inference - on the container itself or through the &lt;code>sagemaker-runtime&lt;/code> invocation endpoint:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">def&lt;/span> &lt;span style="color:#000">inference_model_container&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">run_id&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87">str&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;0&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">ep&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">sagemaker&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">describe_endpoint&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">EndpointName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">f&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;span style="color:#4e9a06">{&lt;/span>&lt;span style="color:#000">ENDPOINT_NAME&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>&lt;span style="color:#4e9a06">-&lt;/span>&lt;span style="color:#4e9a06">{&lt;/span>&lt;span style="color:#000">run_id&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">arn&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">ep&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;EndpointArn&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">tag_list&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">sagemaker&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">list_tags&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ResourceArn&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">arn&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">port&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;4510&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#000">tag&lt;/span> &lt;span style="color:#204a87;font-weight:bold">in&lt;/span> &lt;span style="color:#000">tag_list&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Tags&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">]:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#000">tag&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Key&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;_LS_ENDPOINT_PORT_&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">port&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">tag&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Value&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">inputs&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">_get_input_dict&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">response&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">httpx&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">post&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">f&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;http://localhost.localstack.cloud:&lt;/span>&lt;span style="color:#4e9a06">{&lt;/span>&lt;span style="color:#000">port&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>&lt;span style="color:#4e9a06">/invocations&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">json&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">inputs&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">headers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Content-Type&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;application/json&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Accept&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;application/json&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">_show_predictions&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">json&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">loads&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">response&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">text&lt;/span>&lt;span style="color:#000;font-weight:bold">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">def&lt;/span> &lt;span style="color:#000">inference_model_boto3&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">run_id&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87">str&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;0&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">inputs&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">_get_input_dict&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">response&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">sagemaker_runtime&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">invoke_endpoint&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">EndpointName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">f&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;span style="color:#4e9a06">{&lt;/span>&lt;span style="color:#000">ENDPOINT_NAME&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>&lt;span style="color:#4e9a06">-&lt;/span>&lt;span style="color:#4e9a06">{&lt;/span>&lt;span style="color:#000">run_id&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Body&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">json&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dumps&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">inputs&lt;/span>&lt;span style="color:#000;font-weight:bold">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">Accept&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;application/json&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">ContentType&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;application/json&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">_show_predictions&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">json&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">loads&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">response&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Body&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">read&lt;/span>&lt;span style="color:#000;font-weight:bold">()))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
SageMaker is a fairly comprehensive API - for now, only a subset of the functionality is provided locally, but new features are being added on a regular basis.
&lt;/div></description></item><item><title>User-Guide: Service Discovery</title><link>/user-guide/aws/servicediscovery/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/servicediscovery/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Service Discovery simplifies the management and discovery of services by locating and connecting to the components and resources that make up their applications. Service Discovery allows for a centralized mechanism for dynamically registering, tracking, and resolving service instances, allowing seamless communication between services. Service discovery uses Cloud Map API actions to manage HTTP and DNS namespaces for services, enabling automatic registration and discovery of services running in the cluster.&lt;/p>
&lt;p>LocalStack supports Resource Groups via the Pro/Team offering, allowing you to use the Service Discovery APIs in your local environment to monitor and manage your services across various environments and network topologies. The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_servicediscovery/">API coverage page&lt;/a>, which provides information on the extent of Service Discovery&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;h2 id="getting-started">Getting Started&lt;/h2>
&lt;p>This guide is designed for users new to Service Discovery and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method. We will demonstrate how to create an ECS service containing a Fargate task that uses Service Discovery with the AWS CLI.&lt;/p>
&lt;h3 id="create-a-cloud-map-service-discovery-namespace">Create a Cloud Map service discovery namespace&lt;/h3>
&lt;p>To set up a private Cloud Map service discovery namespace, you can utilize the &lt;a href="https://docs.aws.amazon.com/cloud-map/latest/api/API_CreatePrivateDnsNamespace.html">&lt;code>CreatePrivateDnsNamespace&lt;/code>&lt;/a> API. This API allows you to define a custom name for your namespace and specify the VPC ID where your services will be located. Before proceeding, make sure to create the required VPC.&lt;/p>
&lt;p>To create the private Cloud Map service discovery namespace, execute the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal servicediscovery create-private-dns-namespace \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --name tutorial \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --vpc &amp;lt;vpc-id&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Ensure that you replace &lt;code>&amp;lt;vpc-id&amp;gt;&lt;/code> with the actual ID of the VPC you intend to use for the namespace. Upon running this command, you will receive an output containing an &lt;code>OperationId&lt;/code>. This identifier can be used to check the status of the operation.&lt;/p>
&lt;p>To verify the status of the operation, execute the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal servicediscovery get-operation \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --operation-id &amp;lt;operation-id&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The output will consist of a &lt;code>NAMESPACE&lt;/code> ID, which you will need to create a service within the namespace.&lt;/p>
&lt;h3 id="create-a-cloud-map-service">Create a Cloud Map service&lt;/h3>
&lt;p>After creating the private Cloud Map service discovery namespace, you can proceed to create a service within that namespace using the &lt;a href="https://docs.aws.amazon.com/cloud-map/latest/api/API_CreateService.html">&lt;code>CreateService&lt;/code>&lt;/a> API. This service represents a specific component or resource in your application.&lt;/p>
&lt;p>To create a service within the namespace, execute the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal servicediscovery create-service \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --name myapplication \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --dns-config &amp;#34;NamespaceId=&amp;#34;&amp;lt;Namespace-ID&amp;gt;&amp;#34;,DnsRecords=[{Type=&amp;#34;A&amp;#34;,TTL=&amp;#34;300&amp;#34;}]&amp;#34; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --health-check-custom-config FailureThreshold=1&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Upon successful execution, the output will provide you with the Service ID and the Amazon Resource Name (ARN) of the newly created service. These identifiers will be useful for further operations or integrations.&lt;/p>
&lt;h3 id="create-an-ecs-cluster">Create an ECS cluster&lt;/h3>
&lt;p>To integrate the service you created earlier with an ECS (Elastic Container Service) service, you can follow the steps below.&lt;/p>
&lt;p>Start by creating an ECS cluster using the &lt;a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateCluster.html">&lt;code>CreateCluster&lt;/code>&lt;/a> API. Execute the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal ecs create-cluster \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --cluster-name tutorial&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="register-a-task-definition">Register a task definition&lt;/h3>
&lt;p>Next, you will register a task definition that&amp;rsquo;s compatible with Fargate. Create a file named &lt;code>fargate-task.json&lt;/code> and add the following content:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;family&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;tutorial-task-def&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;networkMode&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;awsvpc&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;containerDefinitions&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;name&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;sample-app&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;image&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;httpd:2.4&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;portMappings&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;containerPort&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">80&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;hostPort&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">80&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;protocol&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;tcp&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;essential&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;entryPoint&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;sh&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;-c&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;command&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;/bin/sh -c \&amp;#34;echo &amp;#39;&amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;Amazon ECS Sample App&amp;lt;/title&amp;gt; &amp;lt;style&amp;gt;body {margin-top: 40px; background-color: #333;} &amp;lt;/style&amp;gt; &amp;lt;/head&amp;gt;&amp;lt;body&amp;gt; &amp;lt;div style=color:white;text-align:center&amp;gt; &amp;lt;h1&amp;gt;Amazon ECS Sample App&amp;lt;/h1&amp;gt; &amp;lt;h2&amp;gt;Congratulations!&amp;lt;/h2&amp;gt; &amp;lt;p&amp;gt;Your application is now running on a container in Amazon ECS.&amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&amp;#39; &amp;gt; /usr/local/apache2/htdocs/index.html &amp;amp;&amp;amp; httpd-foreground\&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;requiresCompatibilities&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;FARGATE&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;cpu&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;256&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;memory&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;512&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Register the task definition using the &lt;a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_RegisterTaskDefinition.html">&lt;code>RegisterTaskDefinition&lt;/code>&lt;/a> API. Execute the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal ecs register-task-definition \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --cli-input-json file://fargate-task.json&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="create-an-ecs-service">Create an ECS service&lt;/h3>
&lt;p>To create an ECS service, you will need to retrieve the &lt;code>securityGroups&lt;/code> and &lt;code>subnets&lt;/code> associated with the VPC used to create the Cloud Map namespace. You can obtain this information by using the &lt;a href="https://docs.aws.amazon.com/vpc/latest/APIReference/API_DescribeVpcs.html">&lt;code>DescribeVpcs&lt;/code>&lt;/a> API. Execute the following command to retrieve the details of all VPCs:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal ec2 describe-vpcs&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The output will include a list of VPCs. Locate the VPC that was used to create the Cloud Map namespace and make a note of its &lt;code>VpcId&lt;/code> value.&lt;/p>
&lt;p>Next, execute the following commands to retrieve the &lt;code>securityGroups&lt;/code> and &lt;code>subnets&lt;/code> associated with the VPC:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal ec2 describe-security-groups --filters Name=vpc-id,Values=vpc-&amp;lt;ID&amp;gt; --query &amp;#39;SecurityGroups[*].[GroupId, GroupName]&amp;#39; --output text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal ec2 describe-subnets --filters Name=vpc-id,Values=vpc-&amp;lt;ID&amp;gt; --query &amp;#39;Subnets[*].[SubnetId, CidrBlock]&amp;#39; --output text&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Replace &lt;code>&amp;lt;VpcId&amp;gt;&lt;/code> with the actual VpcId value of the VPC you identified earlier. Make a note of the &lt;code>GroupId&lt;/code> and &lt;code>SubnetId&lt;/code> values.&lt;/p>
&lt;p>Create a new file named &lt;code>ecs-service-discovery.json&lt;/code> and add the following content to it:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;cluster&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;tutorial&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;serviceName&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;ecs-service-discovery&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;taskDefinition&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;tutorial-task-def&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;serviceRegistries&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;registryArn&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#a40000">&amp;lt;ARN_OF_THE_SERVICE_DISCOVERY&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;launchType&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;FARGATE&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;platformVersion&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;LATEST&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;networkConfiguration&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;awsvpcConfiguration&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;assignPublicIp&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;ENABLED&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;securityGroups&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;sg-*&amp;#34;&lt;/span> &lt;span style="color:#000;font-weight:bold">],&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// Add the security group IDs here
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;subnets&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;subnet-*&amp;#34;&lt;/span> &lt;span style="color:#000;font-weight:bold">]&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// Add the subnet IDs here
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;desiredCount&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Create your ECS service using the &lt;a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateService.html">&lt;code>CreateService&lt;/code>&lt;/a> API. Execute the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal ecs create-service \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --cli-input-json file://ecs-service-discovery.json&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="verify-the-service">Verify the service&lt;/h3>
&lt;p>You can use the Service Discovery service ID to verify that the service was created successfully. Execute the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal servicediscovery list-instances \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --service-id &amp;lt;service-id&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The output will consist of the resource ID, and you can further use the &lt;a href="https://docs.aws.amazon.com/cloud-map/latest/api/API_DiscoverInstances.html">&lt;code>DiscoverInstances&lt;/code>&lt;/a> API. This API allows you to query the DNS records associated with the service and perform various operations.&lt;/p>
&lt;p>To explore the DNS records of your service and perform other operations, refer to the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/servicediscovery/index.html">AWS CLI documentation&lt;/a> for comprehensive instructions and examples.&lt;/p></description></item><item><title>User-Guide: Simple Email Service (SES)</title><link>/user-guide/aws/ses/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/ses/</guid><description>
&lt;h2 id="sent-emails">Sent Emails&lt;/h2>
&lt;p>LocalStack keeps track of all sent emails for retrospection.
The sent messages can be retrieved in following ways:&lt;/p>
&lt;ul>
&lt;li>Filesystem: All messages are saved to the state directory (see &lt;a href="/references/filesystem/">filesystem layout&lt;/a>).
The files are saved as JSON in the &lt;code>ses/&lt;/code> subdirectory and organised by message ID.&lt;/li>
&lt;li>API endpoint: LocalStack provides a service endpoint (&lt;code>/_aws/ses&lt;/code>) which can be used to return in-memory saved messages.
A &lt;code>GET&lt;/code> call returns all messages.
Query parameters &lt;code>id&lt;/code> and &lt;code>email&lt;/code> can be used to filter by message ID and message source respectively.
A &lt;code>DELETE&lt;/code> call clears all messages from the memory.
The query parameter &lt;code>id&lt;/code> can be used to delete only a specific message.&lt;/li>
&lt;/ul>
&lt;h2 id="smtp-integration">SMTP Integration&lt;/h2>
&lt;p>LocalStack Pro ships with support for sending SES messages through an actual SMTP email server.&lt;/p>
&lt;p>Please refer to the &lt;a href="/references/configuration/#emails">Configuration&lt;/a> guide for instructions on how to configure the connection parameters of your SMTP server (&lt;code>SMTP_HOST&lt;/code>/&lt;code>SMTP_USER&lt;/code>/&lt;code>SMTP_PASS&lt;/code>).&lt;/p>
&lt;p>Once the SMTP server has been configured, the SES user interface in the Web app can be used to create a new email account (e.g., &lt;code>user1@yourdomain.com&lt;/code>).
Emails can be sent via the command line (or SES client SDK):
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal ses send-email \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --from user1@yourdomain.com \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --message &amp;#39;Body={Text={Data=&amp;#34;Lorem ipsum dolor sit amet, consectetur adipiscing elit, ...&amp;#34;}},Subject={Data=Test Email}&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --destination &amp;#39;ToAddresses=recipient1@example.com&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;div class="alert alert-info" role="alert">
&lt;h4 class="alert-heading">Hint&lt;/h4>
&lt;p>If you receive a &amp;ldquo;Email address not verified message&amp;rdquo;, simply call&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>awslocal ses verify-email-identity --email-address user1@yourdomain.com
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;h2 id="user-interface">User Interface&lt;/h2>
&lt;p>&lt;a href="https://app.localstack.cloud">LocalStack Web app&lt;/a> can be used to view the sent email messages, as illustrated in the screenshot below:&lt;/p>
&lt;p>&lt;img src="sesInterface.png" alt="SES Web Interface">&lt;/p></description></item><item><title>User-Guide: Simple Notification Service (SNS)</title><link>/user-guide/aws/sns/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/sns/</guid><description>
&lt;p>Simple Notification Service (SNS) is a serverless messaging service that can distribute a massive number of messages to multiple subscribers and can be used to send messages to mobile devices, email addresses, and HTTP(s) endpoints. SNS employs the Publish/Subscribe, an asynchronous messaging pattern that decouples services that produce events from services that process events.&lt;/p>
&lt;p>LocalStack supports SNS via the Community offering, allowing you to use the SNS APIs in your local environment to coordinate the delivery of messages to subscribing endpoints or clients. The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_sns/">API coverage page&lt;/a>, which provides information on the extent of SNS&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is intended for users who wish to get more acquainted with SNS over LocalStack. It assumes you have basic knowledge of the AWS CLI (and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script).&lt;/p>
&lt;p>Start your LocalStack container using your preferred method. We will demonstrate how to create an SNS topic, publish messages, and subscribe to the topic.&lt;/p>
&lt;h3 id="create-an-sns-topic">Create an SNS topic&lt;/h3>
&lt;p>To create an SNS topic, use the &lt;a href="https://docs.aws.amazon.com/sns/latest/api/API_CreateTopic.html">&lt;code>CreateTopic&lt;/code>&lt;/a> API. Run the following command to create a topic named &lt;code>localstack-topic&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal sns create-topic --name localstack-topic&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can set the SNS topic attribute using the SNS topic you created previously by using the &lt;a href="https://docs.aws.amazon.com/sns/latest/api/API_SetTopicAttributes.html">&lt;code>SetTopicAttributes&lt;/code>&lt;/a> API. Run the following command to set the &lt;code>DisplayName&lt;/code> attribute for the topic:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal sns set-topic-attributes \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --topic-arn arn:aws:sns:us-east-1:000000000000:localstack-topic \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --attribute-name DisplayName \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --attribute-value MyTopicDisplayName&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can list all the SNS topics using the &lt;a href="https://docs.aws.amazon.com/sns/latest/api/API_ListTopics.html">&lt;code>ListTopics&lt;/code>&lt;/a> API. Run the following command to list all the SNS topics:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal sns list-topics&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="get-attributes-and-publish-messages-to-sns-topic">Get attributes and publish messages to SNS topic&lt;/h3>
&lt;p>You can get attributes for a single SNS topic using the &lt;a href="https://docs.aws.amazon.com/sns/latest/api/API_GetTopicAttributes.html">&lt;code>GetTopicAttributes&lt;/code>&lt;/a> API. Run the following command to get the attributes for the SNS topic:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal sns get-topic-attributes \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --topic-arn arn:aws:sns:us-east-1:000000000000:localstack-topic&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can change the &lt;code>topic-arn&lt;/code> to the ARN of the SNS topic you created previously.&lt;/p>
&lt;p>To publish messages to the SNS topic, create a new file named &lt;code>messages.txt&lt;/code> in your current directory and add some content. Run the following command to publish messages to the SNS topic using the &lt;a href="https://docs.aws.amazon.com/sns/latest/api/API_Publish.html">&lt;code>Publish&lt;/code>&lt;/a> API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal sns publish \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --topic-arn &amp;#34;arn:aws:sns:us-east-1:000000000000:localstack-topic&amp;#34; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --message file://message.txt&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="subscribing-to-sns-topic-and-setting-subscription-attributes">Subscribing to SNS topic and setting subscription attributes&lt;/h3>
&lt;p>You can subscribe to the SNS topic using the &lt;a href="https://docs.aws.amazon.com/sns/latest/api/API_Subscribe.html">&lt;code>Subscribe&lt;/code>&lt;/a> API. Run the following command to subscribe to the SNS topic:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal sns subscribe \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --topic-arn arn:aws:sns:us-east-1:000000000000:localstack-topic \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --protocol email \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --notification-endpoint test@gmail.com&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can configure the SNS Subscription attributes, using the &lt;code>SubscriptionArn&lt;/code> from the previous step. Run the following command to set the &lt;code>RawMessageDelivery&lt;/code> attribute for the subscription:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal sns set-subscription-attributes \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --subscription-arn arn:aws:sns:us-east-1:000000000000:test-topic:b6f5e924-dbb3-41c9-aa3b-589dbae0cfff \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --attribute-name RawMessageDelivery --attribute-value true&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can list all the SNS subscriptions using the &lt;a href="https://docs.aws.amazon.com/sns/latest/api/API_ListSubscriptions.html">&lt;code>ListSubscriptions&lt;/code>&lt;/a> API. Run the following command to list all the SNS subscriptions:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal sns list-subscriptions&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="accessing-published-platform-messages">Accessing published Platform Messages&lt;/h2>
&lt;p>For testing purposes, LocalStack retains all messages published to a platform endpoint in memory, making it easy to retrieve them. To learn more about SNS mobile push notifications, refer to the &lt;a href="https://docs.aws.amazon.com/sns/latest/dg/sns-mobile-application-as-subscriber.html">AWS documentation on SNS mobile push notifications&lt;/a>.&lt;/p>
&lt;p>You can access these messages in JSON format through the &lt;code>GET /_aws/sns/platform-endpoint-messages&lt;/code>. To retrieve specific messages, you can use query parameters to filter by &lt;code>accountId&lt;/code>, &lt;code>region&lt;/code>, and &lt;code>endpointArn&lt;/code>.&lt;/p>
&lt;h3 id="query-parameters">Query parameters&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Parameter&lt;/th>
&lt;th>Required&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>accountId&lt;/code>&lt;/td>
&lt;td>No&lt;/td>
&lt;td>The AWS Account ID from which the messages have been published. If not specified, it will use the default &lt;code>000000000000&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>region&lt;/code>&lt;/td>
&lt;td>No&lt;/td>
&lt;td>The AWS region from which the messages have been published. If not specified, it will use the default &lt;code>us-east-1&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>endpointArn&lt;/code>&lt;/td>
&lt;td>No&lt;/td>
&lt;td>The target &lt;code>EndpointArn&lt;/code> to which the messages have been published. If specified, the response will contain only messages sent to this target. Otherwise, it will return all endpoints with their messages.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="response-format-and-attributes">Response format and attributes&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Attribute&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>platform_endpoint_messages&lt;/code>&lt;/td>
&lt;td>Contains endpoints ARN as field names. Each endpoint will have its messages in an Array.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>region&lt;/code>&lt;/td>
&lt;td>The region of the endpoints and messages.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;br>
&lt;p>In this example, we will create a platform endpoint in SNS and publish a message to it. Run the following commands to create a platform endpoint:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal sns create-platform-application --name app-test --platform APNS --attributes {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;PlatformApplicationArn&amp;#34;: &amp;#34;arn:aws:sns:us-east-1:000000000000:app/APNS/app-test&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal sns create-platform-endpoint --platform-application-arn &amp;#34;arn:aws:sns:us-east-1:000000000000:app/APNS/app-test&amp;#34; --token my-fake-token
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;EndpointArn&amp;#34;: &amp;#34;arn:aws:sns:us-east-1:000000000000:endpoint/APNS/app-test/c25f353e-856b-4b02-a725-6bde35e6e944&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Publish a message to the platform endpoint:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal sns publish --target-arn &amp;#34;arn:aws:sns:us-east-1:000000000000:endpoint/APNS/app-test/c25f353e-856b-4b02-a725-6bde35e6e944&amp;#34; --message &amp;#39;{&amp;#34;APNS_PLATFORM&amp;#34;: &amp;#34;{\&amp;#34;aps\&amp;#34;: {\&amp;#34;content-available\&amp;#34;: 1}}&amp;#34;}&amp;#39; --message-structure json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;MessageId&amp;#34;: &amp;#34;ed501a7a-caab-45aa-a941-2fcc64b5c227&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Retrieve the messages published to the platform endpoint using &lt;code>cURL&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl &amp;#34;http://localhost:4566/_aws/sns/platform-endpoint-messages&amp;#34; | jq .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;platform_endpoint_messages&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;arn:aws:sns:us-east-1:000000000000:endpoint/APNS/app-test/c25f353e-856b-4b02-a725-6bde35e6e944&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;TargetArn&amp;#34;: &amp;#34;arn:aws:sns:us-east-1:000000000000:endpoint/APNS/app-test/c25f353e-856b-4b02-a725-6bde35e6e944&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Message&amp;#34;: &amp;#34;{\&amp;#34;APNS_PLATFORM\&amp;#34;: \&amp;#34;{\\\&amp;#34;aps\\\&amp;#34;: {\\\&amp;#34;content-available\\\&amp;#34;: 1}}\&amp;#34;}&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;MessageAttributes&amp;#34;: null,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;MessageStructure&amp;#34;: &amp;#34;json&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Subject&amp;#34;: null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;region&amp;#34;: &amp;#34;us-east-1&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>With those same filters, you can reset the saved messages at &lt;code>DELETE /_aws/sns/platform-endpoint-messages&lt;/code>. Run the following command to reset the saved messages:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl -X &amp;#34;DELETE&amp;#34; &amp;#34;http://localhost:4566/_aws/sns/platform-endpoint-messages&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl &amp;#34;http://localhost:4566/_aws/sns/platform-endpoint-messages&amp;#34; | jq .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;platform_endpoint_messages&amp;#34;: {},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;region&amp;#34;: &amp;#34;us-east-1&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="resource-browser">Resource Browser&lt;/h2>
&lt;p>The LocalStack Web Application provides a Resource Browser for managing SNS topics. You can access the Resource Browser by opening the LocalStack Web Application in your browser, navigating to the &lt;strong>Resources&lt;/strong> section, and then clicking on &lt;strong>SNS&lt;/strong> under the &lt;strong>App Integration&lt;/strong> section.&lt;/p>
&lt;img src="sns-resource-browser.png" alt="SNS Resource Browser" title="SNS Resource Browser" width="900" />
&lt;p>The Resource Browser allows you to perform the following actions:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Create Topic&lt;/strong>: Create a new SNS topic by specifying a topic name, attributes, and tags.&lt;/li>
&lt;li>&lt;strong>View Details and Subscription&lt;/strong>: View details and subscription of an SNS topic by selecting the topic name and navigating to the &lt;strong>Details&lt;/strong> and &lt;strong>Subscriptions&lt;/strong> tabs.&lt;/li>
&lt;li>&lt;strong>Create Subscription&lt;/strong>: Create a new subscription for an SNS topic by selecting the topic name, navigating to the &lt;strong>Subscriptions&lt;/strong> tab, and clicking the &lt;strong>Create Subscription&lt;/strong> button. Fill in the required details such as protocol, endpoint, and attributes, delivery policy, return subscription ARN, and click &lt;strong>Create&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Delete Topic&lt;/strong>: Delete an SNS topic by selecting the topic name and clicking the &lt;strong>Action&lt;/strong> button, followed by &lt;strong>Delete Selected&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;h2 id="examples">Examples&lt;/h2>
&lt;p>The following code snippets and sample applications provide practical examples of how to use SNS in LocalStack for various use cases:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/localstack/shipment-list-demo">Full-Stack application with AWS Lambda, DynamoDB &amp;amp; S3 for shipment validation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/event-driven-architecture-with-amazon-sns-fifo">Event-driven architecture with Amazon SNS FIFO, DynamoDB, Lambda, and S3&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/loan-broker-stepfunctions-lambda-app">Loan Broker application with AWS Step Functions, DynamoDB, Lambda, SQS, and SNS&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/serverless-image-resizer">Serverless Image Resizer with AWS Lambda, S3, SNS, and SES&lt;/a>&lt;/li>
&lt;/ul></description></item></channel></rss>